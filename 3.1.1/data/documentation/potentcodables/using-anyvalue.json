{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes it is necessary to decode values of any type or that can take on any structure; unfortunately Swift’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" is not well suited for this purpose. PotentCodables provides "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" to fill the gap."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" is simple, just use it wherever you would normally use an "},{"type":"codeVoice","code":"Any"},{"type":"text","text":". Since"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" supports "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" everything else works as normal including Swift’s automatic codable"},{"type":"text","text":" "},{"type":"text","text":"generation."}]},{"type":"codeListing","syntax":"swift","code":["struct Account : Codable {","  let name: String","  let data: AnyValue                  \/\/ `data` can store and scalar or complex value","  let dataDict: [String: AnyValue]    \/\/ `dataDict` is required to be a dictionary of name to any values","  let dataArray: [AnyValue]           \/\/ `dataArray` is required to be an array of any values","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The example "},{"type":"codeVoice","code":"Account"},{"type":"text","text":" struct above has a "},{"type":"codeVoice","code":"data"},{"type":"text","text":" property that can take on any value supported by the codable system."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example when decoding from JSON, any value or tree of values (including "},{"type":"emphasis","inlineContent":[{"type":"text","text":"null"}]},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"type":"text","text":"bool"}]},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"type":"text","text":"string"}]},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"type":"text","text":"number"}]},{"type":"text","text":","},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"arrray"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"object"}]},{"type":"text","text":") could be saved in the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" property. Encoding the same "},{"type":"codeVoice","code":"Account"},{"type":"text","text":" value back to JSON will produce"},{"type":"text","text":" "},{"type":"text","text":"equivalent serialized JSON regardless of the contents of the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" field."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" has lots of features to make building and using them natural in Swift, like “dynamic member"},{"type":"text","text":" "},{"type":"text","text":"lookup” to access fields of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)"},{"type":"text","text":". See the documentation for complete details."}]},{"anchor":"Performance","level":3,"type":"heading","text":"Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" is compatible with any conformant "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" encoder or decoder, PotentCodables"},{"type":"text","text":" "},{"type":"text","text":"decoders specifically have shortcuts to decode the proper values in a more performant fashion and should be used when"},{"type":"text","text":" "},{"type":"text","text":"possible."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Using AnyValue","role":"article","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"seeAlsoSections":[{"title":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"generated":true}],"references":{"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"role":"article","title":"Getting Started with Potent Codables","abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"CBOR"}]},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"type":"text","text":"ASN.1"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/gettingstarted"},"doc://PotentCodables/documentation/PotentCodables/AnyValue/dictionary(_:)":{"role":"symbol","title":"AnyValue.dictionary(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"dictionary"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"AnyDictionary","preciseIdentifier":"s:14PotentCodables8AnyValueO0C10Dictionarya"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/anyvalue\/dictionary(_:)"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"role":"article","title":"Data Formats","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/data-formats"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"role":"article","title":"Tree Values","abstract":[{"type":"text","text":"What are “tree values”?"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/treevalues"},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"role":"symbol","title":"AnyValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyValue"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"url":"\/documentation\/potentcodables\/anyvalue"}}}
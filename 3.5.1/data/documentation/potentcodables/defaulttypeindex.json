{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:14PotentCodables16DefaultTypeIndexV","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DefaultTypeIndex"}],"roleHeading":"Structure","title":"DefaultTypeIndex","modules":[{"name":"PotentCodables"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultTypeIndex","kind":"identifier"}],"symbolKind":"struct"},"topicSections":[{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)"]}],"sections":[],"kind":"symbol","abstract":[{"text":"Default type index that uses a simple global map that can be updated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by clients."}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/potentcodables\/defaulttypeindex"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultTypeIndex"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Type ids are generated as the “simple” type name. E.g. a struct declared as","type":"text"},{"type":"text","text":" "},{"code":"struct MyType {}","type":"codeVoice"},{"type":"text","text":" will use the type id "},{"code":"MyType","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The list of allowed types can be updated by using the method"},{"type":"text","text":" "},{"type":"codeVoice","code":"setAllowedTypes(:)"},{"text":" which will generate an appropriate type id for each","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provided type and assign them to the map of allowed types."}]},{"inlineContent":[{"text":"Note: The initial map of allowed types is empty and must be provided","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by clients prior to using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},{"type":"text","text":"."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex"],"title":"Conforms To","type":"conformsTo"}],"references":{"doc://PotentCodables/documentation/PotentCodables/TypeIndex":{"title":"TypeIndex","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TypeIndex","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Provides static functions for looking up types by id for decoding"},{"text":" ","type":"text"},{"text":"and generating type ids for types during encoding.","type":"text"}],"url":"\/documentation\/potentcodables\/typeindex","navigatorTitle":[{"text":"TypeIndex","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/setAllowedTypes(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setAllowedTypes","kind":"identifier"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"kind":"text","text":".Type])"}],"url":"\/documentation\/potentcodables\/defaulttypeindex\/setallowedtypes(_:)","abstract":[{"type":"text","text":"Set the allowed types to the given array after mapping them using "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","isActive":true},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)","title":"setAllowedTypes(_:)","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"title":"EmbeddedRef","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedRef"}],"url":"\/documentation\/potentcodables\/embeddedref","role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","navigatorTitle":[{"text":"EmbeddedRef","kind":"identifier"}],"abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"url":"\/documentation\/potentcodables\/defaulttypeindex","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultTypeIndex"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","abstract":[{"text":"Default type index that uses a simple global map that can be updated","type":"text"},{"text":" ","type":"text"},{"text":"by clients.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"DefaultTypeIndex","navigatorTitle":[{"kind":"identifier","text":"DefaultTypeIndex"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/mapAllowedTypes(_:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapAllowedTypes","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"},{"text":".Type]) -> [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"kind":"text","text":".Type]"}],"abstract":[{"type":"text","text":"Maps the given array of types to their generated type id and returns the dictionary."}],"title":"mapAllowedTypes(_:)","type":"topic","url":"\/documentation\/potentcodables\/defaulttypeindex\/mapallowedtypes(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","role":"symbol","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/findType(id:)":{"abstract":[{"type":"text","text":"Find the associated tyoe for the given type id."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"findType","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"text":".Type?","kind":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","title":"findType(id:)","type":"topic","url":"\/documentation\/potentcodables\/defaulttypeindex\/findtype(id:)"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/addAllowedTypes(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addAllowedTypes"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"text":".Type])","kind":"text"}],"abstract":[{"type":"text","text":"Set the allowed types to the given array after mapping them using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)"},{"type":"text","text":"."}],"title":"addAllowedTypes(_:)","type":"topic","url":"\/documentation\/potentcodables\/defaulttypeindex\/addallowedtypes(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","role":"symbol","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/typeId(of:)":{"title":"typeId(of:)","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex\/typeid(of:)","abstract":[{"type":"text","text":"Find the type id of the given type."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"typeId","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Any","kind":"keyword"},{"text":".Type) -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","role":"collection","kind":"symbol","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/Ref":{"navigatorTitle":[{"text":"Ref","kind":"identifier"}],"type":"topic","title":"Ref","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ref","kind":"identifier"}],"url":"\/documentation\/potentcodables\/ref","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A decodable type for decoding general polymorphic types."}]}}}
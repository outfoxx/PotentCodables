{"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing"},{"type":"text","text":" "},{"type":"text","text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and"},{"type":"text","text":" "},{"type":"text","text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"text":"framework.","type":"text"}]},{"inlineContent":[{"text":"The following list of steps can be followed to easily implement a new serialization format.","type":"text"}],"type":"paragraph"},{"anchor":"1-Define-a-native-value-tree-representation","type":"heading","text":"1. Define a native value tree representation","level":3},{"type":"paragraph","inlineContent":[{"text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"while CBOR uses "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},{"type":"text","text":". Examining any of the provided native value trees will reveal they closely mimic"},{"type":"text","text":" "},{"type":"text","text":"their serialized format."}]},{"text":"Required Protocols","type":"heading","level":4,"anchor":"Required-Protocols"},{"items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The native value tree representation (usually an enum) "},{"type":"strong","inlineContent":[{"text":"must","type":"text"}]},{"text":" implement the ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true},{"type":"text","text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree."}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"}]}}],"type":"termList"},{"text":"See\/Examples","type":"heading","anchor":"SeeExamples","level":4},{"items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The JSON native value tree is a great example of a full featured tree.","type":"text"}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"}]}}],"type":"termList"},{"type":"heading","level":3,"text":"2. Provide a “serialization” type","anchor":"2-Provide-a-serialization-type"},{"inlineContent":[{"text":"The next step requires you to provide a serialization class that can serialize native value trees into their final","type":"text"},{"text":" ","type":"text"},{"text":"serialized representation and conversely deserialize the serialized representation into a native value tree.","type":"text"}],"type":"paragraph"},{"type":"heading","level":4,"anchor":"Required-Protocols","text":"Required Protocols"},{"inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"type":"text","text":" "},{"text":"encoder and decoder implementations.","type":"text"}],"type":"paragraph"},{"text":"See\/Example","anchor":"SeeExample","level":4,"type":"heading"},{"items":[{"definition":{"content":[{"inlineContent":[{"text":"The JSONSerialization type serializes ","type":"text"},{"code":"JSON","type":"codeVoice"},{"type":"text","text":" values to\/from "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values. Also, because JSON is a text based format, it supports serialization to\/from "},{"type":"codeVoice","code":"String"},{"text":" values.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"reference","isActive":true}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The CBORSerialization type serializes ","type":"text"},{"type":"codeVoice","code":"CBOR"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}]}]}}],"type":"termList"},{"text":"3. Provide “transformer” types","anchor":"3-Provide-transformer-types","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"type":"text","text":" "},{"type":"text","text":"trees to\/from "},{"type":"codeVoice","code":"Encodable"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}]},{"inlineContent":[{"type":"text","text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with "},{"code":"Internal","type":"codeVoice"},{"type":"text","text":" to denote that they are"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}],"type":"paragraph"},{"text":"Required Protocols (Encoding)","anchor":"Required-Protocols-Encoding","level":4,"type":"heading"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"code":"Encodable","type":"codeVoice"},{"text":" instances.","type":"text"}]}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","type":"reference"}]}},{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer"}]},"definition":{"content":[{"inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","isActive":true}]}}]},{"level":4,"type":"heading","text":"Required Protocols (Decoding)","anchor":"Required-Protocols-Decoding"},{"items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true}]},"definition":{"content":[{"inlineContent":[{"text":"Provides the unboxing of native value tree types.","type":"text"}],"type":"paragraph"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","isActive":true}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]}}],"type":"termList"},{"anchor":"SeeExample","type":"heading","level":4,"text":"See\/Example"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","isActive":true},{"type":"text","text":"\/"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform"}],"type":"paragraph"}]}]},{"anchor":"4-Create-an-Encoder-and-a-Decoder","type":"heading","level":3,"text":"4. Create an “Encoder” and a “Decoder”"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Encoders are created in the following manner:"}]},{"code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}]},{"code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"roleHeading":"Article","modules":[{"name":"PotentCodables"}],"title":"Implementing New Data Formats","role":"article"},"seeAlsoSections":[{"generated":true,"title":"Advanced","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"anchor":"Advanced"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats"},"abstract":[{"type":"text","text":"Learn how to implement new "},{"code":"Codable","type":"codeVoice"},{"text":" data formats easily.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"type":"topic","title":"InternalValueDeserializer","role":"symbol","navigatorTitle":[{"text":"InternalValueDeserializer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalValueDeserializer","kind":"identifier"}],"abstract":[],"url":"\/documentation\/potentcodables\/internalvaluedeserializer"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"title":"JSON","role":"symbol","url":"\/documentation\/potentjson\/json","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"abstract":[{"type":"text","text":"General JSON value."}]},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","title":"InternalEncoderTransform","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalEncoderTransform","kind":"identifier"}],"abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"type":"text","text":" "},{"text":"Swift\/Foundation primitives into instances of ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":".","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/internalencodertransform","navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","abstract":[],"kind":"symbol","role":"symbol","type":"topic","title":"JSONDecoderTransform","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoderTransform"}],"navigatorTitle":[{"text":"JSONDecoderTransform","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsondecodertransform"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}],"abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/potentcbor\/cborserialization","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","title":"CBORSerialization","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CBORSerialization","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"url":"\/documentation\/potentcodables\/internalvalueserializer","kind":"symbol","navigatorTitle":[{"text":"InternalValueSerializer","kind":"identifier"}],"abstract":[],"title":"InternalValueSerializer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueSerializer"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","title":"InternalDecoderTransform","abstract":[{"type":"text","text":"A decoder transform provides required functionality to unbox instances of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" into Swift\/Foundation primitives.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"InternalDecoderTransform"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalDecoderTransform","kind":"identifier"}],"type":"topic","url":"\/documentation\/potentcodables\/internaldecodertransform"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","role":"collection","kind":"symbol","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/Value":{"role":"symbol","navigatorTitle":[{"text":"Value","kind":"identifier"}],"url":"\/documentation\/potentcodables\/value","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","abstract":[{"code":"Value","type":"codeVoice"},{"type":"text","text":"s are the intermediary representation that"},{"text":" ","type":"text"},{"type":"text","text":"allows querying the structure in memory, decoding"},{"type":"text","text":" "},{"type":"text","text":"it to a compatible "},{"type":"codeVoice","code":"Decodable"},{"text":" type, or serializing","type":"text"},{"type":"text","text":" "},{"text":"it to ","type":"text"},{"type":"codeVoice","code":"Data"}],"title":"Value","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"title":"Encoder\/Decoder Protocols","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","type":"topic","abstract":[{"type":"text","text":"Details of all the protocols PotentCodables "},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"text":"s implement.","type":"text"}],"url":"\/documentation\/potentcodables\/protocols","kind":"article","role":"article"},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueParser"}],"navigatorTitle":[{"kind":"identifier","text":"InternalValueParser"}],"role":"symbol","title":"InternalValueParser","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","type":"topic","url":"\/documentation\/potentcodables\/internalvalueparser"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"abstract":[{"type":"text","text":"General CBOR value."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","url":"\/documentation\/potentcbor\/cbor","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"role":"symbol","title":"CBOR","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CBOR","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","kind":"symbol","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}]},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"title":"Polymorphic Encoding & Decoding","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","type":"topic","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}],"url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","kind":"article","role":"article"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"type":"topic","navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}],"kind":"symbol","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","title":"InternalValueStringifier","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueStringifier"}],"url":"\/documentation\/potentcodables\/internalvaluestringifier"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"kind":"symbol","url":"\/documentation\/potentjson\/jsonencodertransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONEncoderTransform","kind":"identifier"}],"role":"symbol","abstract":[],"navigatorTitle":[{"text":"JSONEncoderTransform","kind":"identifier"}],"type":"topic","title":"JSONEncoderTransform"},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"kind":"article","abstract":[{"text":"Polymorphic references tailored to your data.","type":"text"}],"url":"\/documentation\/potentcodables\/custom-references","title":"Custom References","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","role":"article","type":"topic"}}}
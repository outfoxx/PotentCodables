{"kind":"symbol","abstract":[{"type":"text","text":"A decodable type for decoding polymorphic types that include an embedded type name value."}],"metadata":{"roleHeading":"Type Alias","title":"EmbeddedRef","navigatorTitle":[{"text":"EmbeddedRef","kind":"identifier"}],"symbolKind":"typealias","role":"symbol","modules":[{"name":"PotentCodables"}],"externalID":"s:14PotentCodables11EmbeddedRefa","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmbeddedRef"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmbeddedRef"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV","text":"CustomEmbeddedRef"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","kind":"typeIdentifier","text":"DefaultTypeKey","preciseIdentifier":"s:14PotentCodables14DefaultTypeKeyV"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","text":"DefaultTypeIndex","preciseIdentifier":"s:14PotentCodables16DefaultTypeIndexV","kind":"typeIdentifier"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","isActive":true},{"text":" relies upon the encoded value including a type name embedded in the keyed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container it is decoding. By default the key "},{"type":"codeVoice","code":"@type"},{"type":"text","text":" is used but this can be customized."}],"type":"paragraph"},{"anchor":"Expected-Encoded-Structure-JSON","level":1,"type":"heading","text":"Expected Encoded Structure (JSON):"},{"code":["{\"@type\" : \"MyValue\", \"name\" : \"Foo\"}"],"type":"codeListing","syntax":"javascript"},{"inlineContent":[{"type":"text","text":"Decoding an "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","isActive":true},{"text":" instance will decode the value to its ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" property,"},{"type":"text","text":" "},{"type":"text","text":"which can then be accesed in a number of ways."}],"type":"paragraph"},{"level":1,"anchor":"Example","type":"heading","text":"Example:"},{"type":"codeListing","syntax":null,"code":["DefaultTypeIndex.setAllowedTypes([MyValue.self])","","myValue = container.decode(EmbeddedRef.self).value as! MyValue"]},{"type":"paragraph","inlineContent":[{"text":"In the example, ","type":"text"},{"type":"codeVoice","code":"MyValue"},{"type":"text","text":" can be a concrete type or protocol, either works fine. Alternatively, the"},{"text":" ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)","isActive":true,"type":"reference"},{"text":" method can be used to require the value be of a specific type and throw","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a decoding related error if it is not, as in:"}]},{"type":"codeListing","code":["myValue = container.decode(EmbeddedRef.self).as(MyValue.self)"],"syntax":null},{"text":"Requires:","level":1,"anchor":"Requires","type":"heading"},{"inlineContent":[{"text":"Keyed Container","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Due to the type name being embedded in the key-value pairs of value’s container, the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoded value "},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"type":"text","text":" be a keyed container, it cannot be an unkeyed or"},{"text":" ","type":"text"},{"type":"text","text":"single-value container."}]},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","type":"reference","isActive":true},{"text":" is provided to support encoding\/decoding of “general” values of any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"structure."}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/potentcodables\/embeddedref"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},"references":{"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey/typeKey":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey","title":"typeKey","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"typeKey","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables12AnyCodingKeyV","text":"AnyCodingKey"}],"url":"\/documentation\/potentcodables\/defaulttypekey\/typekey","type":"topic"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","role":"collection","kind":"symbol","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef/as(_:)":{"abstract":[{"type":"text","text":"Method attempts a conversion to the provided type "},{"type":"codeVoice","code":"V"},{"text":" and throws a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"related "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error","type":"reference","isActive":true},{"text":" if it fails.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp","text":"V"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"V","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp","kind":"typeIdentifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)","title":"as(_:)","type":"topic","url":"\/documentation\/potentcodables\/customembeddedref\/as(_:)"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"url":"\/documentation\/potentcodables\/defaulttypeindex","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultTypeIndex"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","abstract":[{"text":"Default type index that uses a simple global map that can be updated","type":"text"},{"text":" ","type":"text"},{"text":"by clients.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"DefaultTypeIndex","navigatorTitle":[{"kind":"identifier","text":"DefaultTypeIndex"}]},"doc://PotentCodables/documentation/PotentCodables/Ref":{"navigatorTitle":[{"text":"Ref","kind":"identifier"}],"type":"topic","title":"Ref","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ref","kind":"identifier"}],"url":"\/documentation\/potentcodables\/ref","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A decodable type for decoding general polymorphic types."}]},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomEmbeddedRef"}],"url":"\/documentation\/potentcodables\/customembeddedref","role":"symbol","kind":"symbol","abstract":[{"text":"The implementation type for ","type":"text"},{"type":"codeVoice","code":"EmbeddedRef"},{"type":"text","text":" types."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomEmbeddedRef"}],"title":"CustomEmbeddedRef","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef"},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"title":"EmbeddedRef","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedRef"}],"url":"\/documentation\/potentcodables\/embeddedref","role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","navigatorTitle":[{"text":"EmbeddedRef","kind":"identifier"}],"abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","title":"DefaultTypeKey","role":"symbol","abstract":[{"text":"Default type key provider using ","type":"text"},{"code":"@type","type":"codeVoice"},{"type":"text","text":" as the "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey","isActive":true}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultTypeKey","kind":"identifier"}],"navigatorTitle":[{"text":"DefaultTypeKey","kind":"identifier"}],"url":"\/documentation\/potentcodables\/defaulttypekey","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Refs/Error":{"url":"\/documentation\/potentcodables\/refs\/error","kind":"symbol","navigatorTitle":[{"text":"Error","kind":"identifier"}],"abstract":[],"title":"Refs.Error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error","type":"topic","role":"symbol"}}}
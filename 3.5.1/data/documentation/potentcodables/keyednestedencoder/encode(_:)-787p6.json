{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6"},"sections":[],"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"inlineContent":[{"text":"The value to encode.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"type":"text","text":" if the given value is invalid in"},{"type":"text","text":" "},{"type":"text","text":"the current context for this format."}],"type":"paragraph"}],"name":"Throws"},{"type":"aside","style":"note","name":"Precondition","content":[{"type":"paragraph","inlineContent":[{"text":"May not be called after a previous ","type":"text"},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"type":"text","text":"call."}]}]}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"PotentCodables"}],"title":"encode(_:)","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt32VKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method"},"variants":[{"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","role":"collection","kind":"symbol","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"abstract":[],"title":"KeyedNestedEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyedNestedEncoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-787p6":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"kind":"symbol","title":"encode(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}}}
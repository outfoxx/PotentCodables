{"kind":"symbol","sections":[],"metadata":{"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","role":"symbol","roleHeading":"Instance Method","title":"encode(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"symbolKind":"method","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"text":" if the given value is invalid in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the current context for this format."}]}]},{"type":"aside","name":"Precondition","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}]}]}],"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","type":"topic","title":"encode(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","abstract":[{"type":"text","text":"Encodes a single value of the given type."}]},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","role":"collection","kind":"symbol","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"abstract":[],"title":"KeyedNestedEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyedNestedEncoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","type":"topic","role":"symbol"}}}
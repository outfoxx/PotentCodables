{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]}]},{"parameters":[{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"type":"text","text":" if the given value is invalid in"},{"type":"text","text":" "},{"text":"the current context for this format.","type":"text"}]}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"text":" ","type":"text"},{"type":"text","text":"call."}]}],"name":"Precondition"}]}],"metadata":{"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt64VKF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"PotentCodables"}],"title":"encode(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"]}],"sections":[],"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","role":"collection","kind":"symbol","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-90tu3":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","title":"encode(_:)","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"abstract":[],"title":"KeyedNestedEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyedNestedEncoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","type":"topic","role":"symbol"}}}
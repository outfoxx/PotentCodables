{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)"]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"kind":"symbol","metadata":{"modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","title":"init(arrayLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"extendedModule":"Swift","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"init","role":"symbol","roleHeading":"Initializer"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":"...)"}]}]},{"parameters":[{"name":"arrayLiteral","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A list of elements of the new set."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"type":"text","text":" "},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"type":"text","text":" "},{"type":"text","text":"by the type context."}],"type":"paragraph"},{"inlineContent":[{"text":"Here, a set of strings is created from an array literal holding only","type":"text"},{"type":"text","text":" "},{"text":"strings:","type":"text"}],"type":"paragraph"},{"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"syntax":null,"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"kind":"symbol","type":"topic","title":"init(arrayLiteral:)","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)","abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"text":"...)","kind":"text"}],"conformance":{"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"role":"symbol","title":"YAMLEncoder.OutputFormatting","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"type":"topic","abstract":[{"text":"The formatting of the output YAML data.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OutputFormatting","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLEncoder"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"title":"YAMLEncoder"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","type":"topic","kind":"article","title":"SetAlgebra Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","abstract":[],"role":"collectionGroup"},"doc://PotentCodables/documentation/PotentYAML":{"url":"\/documentation\/potentyaml","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","role":"collection","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML"}}}
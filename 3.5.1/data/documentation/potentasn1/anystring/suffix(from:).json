{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/suffix(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"suffix"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"start","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"start","content":[{"inlineContent":[{"text":"The index at which to start the resulting subsequence.","type":"text"},{"type":"text","text":" "},{"code":"start","type":"codeVoice"},{"text":" must be a valid index of the collection.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence starting at the "},{"code":"start","type":"codeVoice"},{"text":" position.","type":"text"}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The following example searches for the index of the number ","type":"text"},{"type":"codeVoice","code":"40"},{"type":"text","text":" in an"},{"text":" ","type":"text"},{"type":"text","text":"array of integers, and then prints the suffix of the array starting at"},{"type":"text","text":" "},{"type":"text","text":"that index:"}]},{"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.suffix(from: i))","}","\/\/ Prints \"[40, 50, 60]\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Passing the collection’s "},{"code":"endIndex","type":"codeVoice"},{"text":" as the ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" parameter results in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"an empty subsequence."}],"type":"paragraph"},{"code":["print(numbers.suffix(from: numbers.endIndex))","\/\/ Prints \"[]\""],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Using the "},{"code":"suffix(from:)","type":"codeVoice"},{"text":" method is equivalent to using a partial range","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the index as the collection’s subscript. The subscript notation is"},{"text":" ","type":"text"},{"type":"text","text":"preferred over "},{"code":"suffix(from:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[i...])","}","\/\/ Prints \"[40, 50, 60]\""]},{"style":"note","name":"Complexity","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/suffix(from:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a subsequence from the specified position to the end of the"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"kind":"symbol","metadata":{"role":"symbol","title":"suffix(from:)","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"externalID":"s:SlsE6suffix4from11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:10PotentASN19AnyStringV","extendedModule":"Swift","symbolKind":"method","roleHeading":"Instance Method"},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"role":"collectionGroup","kind":"article","url":"\/documentation\/potentasn1\/anystring\/collection-implementations","title":"Collection Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"},"doc://PotentCodables/documentation/PotentASN1/AnyString/suffix(from:)":{"kind":"symbol","title":"suffix(from:)","url":"\/documentation\/potentasn1\/anystring\/suffix(from:)","type":"topic","abstract":[{"text":"Returns a subsequence from the specified position to the end of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/suffix(from:)"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"kind":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"text":" ","type":"text"},{"text":"specific ASN.1 tag.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","title":"AnyString","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyString"}],"type":"topic","url":"\/documentation\/potentasn1\/anystring"},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","title":"PotentASN1","role":"collection","type":"topic","url":"\/documentation\/potentasn1"}}}
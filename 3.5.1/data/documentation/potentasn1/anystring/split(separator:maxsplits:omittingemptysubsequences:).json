{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"Returns the longest possible subsequences of the collection, in order,"},{"text":" ","type":"text"},{"text":"around elements equal to the given element.","type":"text"}],"metadata":{"externalID":"s:SlsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSay11SubSequenceQzGAB_SiSbtF::SYNTHESIZED::s:10PotentASN19AnyStringV","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"title":"split(separator:maxSplits:omittingEmptySubsequences:)","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"extendedModule":"Swift","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maxSplits","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"},{"text":"]","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/split(separator:maxSplits:omittingEmptySubsequences:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"split","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxSplits"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" = Int.max, "},{"kind":"externalParam","text":"omittingEmptySubsequences"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" = true) -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"separator","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The element that should be split upon."}]}]},{"name":"maxSplits","content":[{"inlineContent":[{"text":"The maximum number of times to split the collection, or","type":"text"},{"text":" ","type":"text"},{"text":"one less than the number of subsequences to return. If","type":"text"},{"text":" ","type":"text"},{"code":"maxSplits + 1","type":"codeVoice"},{"type":"text","text":" subsequences are returned, the last one is a suffix"},{"type":"text","text":" "},{"text":"of the original collection containing the remaining elements.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"maxSplits"},{"text":" must be greater than or equal to zero. The default value","type":"text"},{"text":" ","type":"text"},{"text":"is ","type":"text"},{"code":"Int.max","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"omittingEmptySubsequences","content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":", an empty subsequence is"},{"type":"text","text":" "},{"text":"returned in the result for each consecutive pair of ","type":"text"},{"type":"codeVoice","code":"separator"},{"type":"text","text":" "},{"type":"text","text":"elements in the collection and for each instance of "},{"type":"codeVoice","code":"separator"},{"text":" at","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the start or end of the collection. If "},{"code":"true","type":"codeVoice"},{"text":", only nonempty","type":"text"},{"type":"text","text":" "},{"text":"subsequences are returned. The default value is ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"An array of subsequences, split from this collection’s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"elements."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"The resulting array consists of at most ","type":"text"},{"code":"maxSplits + 1","type":"codeVoice"},{"text":" subsequences.","type":"text"},{"type":"text","text":" "},{"text":"Elements that are used to split the collection are not returned as part","type":"text"},{"type":"text","text":" "},{"text":"of any subsequence.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following examples show the effects of the "},{"code":"maxSplits","type":"codeVoice"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"type":"codeVoice","code":"omittingEmptySubsequences"},{"type":"text","text":" parameters when splitting a string at each"},{"text":" ","type":"text"},{"text":"space character (” “). The first use of ","type":"text"},{"type":"codeVoice","code":"split"},{"type":"text","text":" returns each word that"},{"text":" ","type":"text"},{"type":"text","text":"was originally separated by one or more spaces."}],"type":"paragraph"},{"code":["let line = \"BLANCHE:   I don't want realism. I want magic!\"","print(line.split(separator: \" \"))","\/\/ Prints \"[\"BLANCHE:\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The second example passes "},{"type":"codeVoice","code":"1"},{"text":" for the ","type":"text"},{"type":"codeVoice","code":"maxSplits"},{"type":"text","text":" parameter, so the"},{"text":" ","type":"text"},{"text":"original string is split just once, into two new strings.","type":"text"}]},{"syntax":null,"code":["print(line.split(separator: \" \", maxSplits: 1))","\/\/ Prints \"[\"BLANCHE:\", \"  I don\\'t want realism. I want magic!\"]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The final example passes ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" for the ","type":"text"},{"type":"codeVoice","code":"omittingEmptySubsequences"},{"text":" ","type":"text"},{"type":"text","text":"parameter, so the returned array contains empty strings where spaces"},{"type":"text","text":" "},{"text":"were repeated.","type":"text"}]},{"code":["print(line.split(separator: \" \", omittingEmptySubsequences: false))","\/\/ Prints \"[\"BLANCHE:\", \"\", \"\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""],"type":"codeListing","syntax":null},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/split(separator:maxsplits:omittingemptysubsequences:)"]}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"role":"collectionGroup","kind":"article","url":"\/documentation\/potentasn1\/anystring\/collection-implementations","title":"Collection Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"},"doc://PotentCodables/documentation/PotentASN1/AnyString/split(separator:maxSplits:omittingEmptySubsequences:)":{"title":"split(separator:maxSplits:omittingEmptySubsequences:)","role":"symbol","type":"topic","url":"\/documentation\/potentasn1\/anystring\/split(separator:maxsplits:omittingemptysubsequences:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"split"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxSplits"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/split(separator:maxSplits:omittingEmptySubsequences:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","abstract":[{"text":"Returns the longest possible subsequences of the collection, in order,","type":"text"},{"type":"text","text":" "},{"text":"around elements equal to the given element.","type":"text"}]},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"kind":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"text":" ","type":"text"},{"text":"specific ASN.1 tag.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","title":"AnyString","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyString"}],"type":"topic","url":"\/documentation\/potentasn1\/anystring"},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","title":"PotentASN1","role":"collection","type":"topic","url":"\/documentation\/potentasn1"}}}
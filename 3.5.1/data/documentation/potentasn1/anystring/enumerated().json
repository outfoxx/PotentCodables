{"metadata":{"roleHeading":"Instance Method","extendedModule":"Swift","title":"enumerated()","externalID":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:10PotentASN19AnyStringV","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EnumeratedSequence","kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/enumerated()","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":", "},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"type":"text","text":" represents an element of"},{"text":" ","type":"text"},{"type":"text","text":"the sequence."}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/enumerated()"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enumerated","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A sequence of pairs enumerating the sequence."}]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This example enumerates the characters of the string “Swift” and prints"},{"text":" ","type":"text"},{"type":"text","text":"each character along with its place in the string."}],"type":"paragraph"},{"type":"codeListing","code":["for (n, c) in \"Swift\".enumerated() {","    print(\"\\(n): '\\(c)'\")","}","\/\/ Prints \"0: 'S'\"","\/\/ Prints \"1: 'w'\"","\/\/ Prints \"2: 'i'\"","\/\/ Prints \"3: 'f'\"","\/\/ Prints \"4: 't'\""],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you enumerate a collection, the integer part of each pair is a counter"},{"type":"text","text":" "},{"type":"text","text":"for the enumeration, but is not necessarily the index of the paired value."},{"type":"text","text":" "},{"text":"These counters can be used as indices only in instances of zero-based,","type":"text"},{"text":" ","type":"text"},{"text":"integer-indexed collections, such as ","type":"text"},{"type":"codeVoice","code":"Array"},{"type":"text","text":" and "},{"code":"ContiguousArray","type":"codeVoice"},{"type":"text","text":". For"},{"type":"text","text":" "},{"text":"other collections the counters may be out of range or of the wrong type","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use as an index. To iterate over the elements of a collection with its"},{"type":"text","text":" "},{"type":"text","text":"indices, use the "},{"code":"zip(_:_:)","type":"codeVoice"},{"type":"text","text":" function."}]},{"inlineContent":[{"text":"This example iterates over the indices and elements of a set, building a","type":"text"},{"text":" ","type":"text"},{"text":"list consisting of indices of names with five or fewer letters.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]","var shorterIndices: [Set<String>.Index] = []","for (i, name) in zip(names.indices, names) {","    if name.count <= 5 {","        shorterIndices.append(i)","    }","}"]},{"inlineContent":[{"type":"text","text":"Now that the "},{"code":"shorterIndices","type":"codeVoice"},{"type":"text","text":" array holds the indices of the shorter"},{"text":" ","type":"text"},{"text":"names in the ","type":"text"},{"code":"names","type":"codeVoice"},{"type":"text","text":" set, you can use those indices to access elements in"},{"text":" ","type":"text"},{"type":"text","text":"the set."}],"type":"paragraph"},{"type":"codeListing","code":["for i in shorterIndices {","    print(names[i])","}","\/\/ Prints \"Sofia\"","\/\/ Prints \"Mateo\""],"syntax":null},{"type":"aside","name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}]}],"kind":"content"}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/enumerated()":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"enumerated"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s18EnumeratedSequenceV","text":"EnumeratedSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"url":"\/documentation\/potentasn1\/anystring\/enumerated()","abstract":[{"text":"Returns a sequence of pairs (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"x","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" represents a"},{"type":"text","text":" "},{"type":"text","text":"consecutive integer starting at zero and "},{"type":"emphasis","inlineContent":[{"text":"x","type":"text"}]},{"text":" represents an element of","type":"text"},{"type":"text","text":" "},{"text":"the sequence.","type":"text"}],"title":"enumerated()","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/enumerated()","role":"symbol"},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","title":"PotentASN1","role":"collection","type":"topic","url":"\/documentation\/potentasn1"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"title":"Sequence Implementations","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","type":"topic","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"kind":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"text":" ","type":"text"},{"text":"specific ASN.1 tag.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","title":"AnyString","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyString"}],"type":"topic","url":"\/documentation\/potentasn1\/anystring"}}}
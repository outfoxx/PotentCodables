{"sections":[],"abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"topicSections":[{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"]},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"],"generated":true},{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"],"title":"Type Properties","anchor":"Type-Properties"},{"anchor":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"generated":true,"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"metadata":{"role":"symbol","externalID":"s:10PotentJSON11JSONDecoderC","title":"JSONDecoder","modules":[{"name":"PotentJSON"}],"roleHeading":"Class","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/potentjson\/jsondecoder"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"],"kind":"relationships","type":"inheritsFrom"},{"title":"Conforms To","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"],"type":"conformsTo","kind":"relationships"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"title":"DecodesFromData","role":"symbol","url":"\/documentation\/potentcodables\/decodesfromdata","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromData"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","kind":"symbol","navigatorTitle":[{"text":"DecodesFromData","kind":"identifier"}],"abstract":[{"text":"Decoders for binary formats support decoding from data.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/TopLevelDecoder":{"abstract":[{"type":"text","text":"A type that defines methods for decoding."}],"navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"url":"\/documentation\/potentcodables\/topleveldecoder","title":"TopLevelDecoder","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"kind":"symbol","type":"topic","role":"symbol","title":"DecodesFromString","abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"type":"text","text":" "},{"text":"data using a string encoding.","type":"text"}],"navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromstring","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","title":"nonConformingFloatDecodingStrategy","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","abstract":[{"text":"The strategy to use in decoding non-conforming numbers. Defaults to ","type":"text"},{"type":"codeVoice","code":".throw"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","title":"JSONDecoder.NonConformingFloatDecodingStrategy"},"doc://PotentCodables/documentation/PotentJSON":{"type":"topic","url":"\/documentation\/potentjson","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","role":"collection","title":"PotentJSON","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"title":"options","url":"\/documentation\/potentjson\/jsondecoder\/options","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options","abstract":[{"type":"text","text":"The options set on the top-level decoder."}],"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV","kind":"typeIdentifier","text":"JSONDecoderTransform"},{"kind":"text","text":"."},{"text":"Options","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dateDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"code":".deferredToDate","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","title":"dateDecodingStrategy"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"url":"\/documentation\/potentjson\/jsondecoder","type":"topic","role":"symbol","title":"JSONDecoder","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DataDecodingStrategy","kind":"identifier"}],"title":"JSONDecoder.DataDecodingStrategy","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"title":"JSONDecoder.DateDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" values."}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateDecodingStrategy","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/init()","title":"init()","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"title":"ValueDecoder","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables\/valuedecoder","abstract":[{"code":"ValueDecoder","type":"codeVoice"},{"text":" facilitates the decoding of","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" values into semantic "},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ValueDecoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","navigatorTitle":[{"kind":"identifier","text":"ValueDecoder"}],"role":"symbol"},"doc://PotentCodables/s8CopyableP":{"identifier":"doc:\/\/PotentCodables\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"role":"collectionGroup","url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations","title":"TopLevelDecoder Implementations","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations","abstract":[],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"dataDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DataDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property","role":"symbol","type":"topic","abstract":[{"text":"The strategy to use in decoding binary data. Defaults to ","type":"text"},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","title":"dataDecodingStrategy"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/default","title":"default","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"kind":"symbol","type":"topic","role":"symbol","title":"DecodesFromTree","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"url":"\/documentation\/potentcodables\/decodesfromtree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromTree","kind":"identifier"}]}}}
{"metadata":{"title":"JSONEncoder.NonConformingFloatEncodingStrategy","roleHeading":"Enumeration","modules":[{"name":"PotentJSON"}],"role":"symbol","symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"externalID":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"},"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"]]},"variants":[{"paths":["\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Enumeration Cases","anchor":"Enumeration-Cases","generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw"]}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"url":"\/documentation\/potentjson\/jsonencoder","type":"topic","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into JSON values."}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"title":"JSONEncoder","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"type":"topic","url":"\/documentation\/potentjson","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","role":"collection","title":"PotentJSON","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/convertToString(positiveInfinity:negativeInfinity:nan:)":{"kind":"symbol","title":"JSONEncoder.NonConformingFloatEncodingStrategy.convertToString(positiveInfinity:negativeInfinity:nan:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"convertToString","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"positiveInfinity"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"negativeInfinity"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nan"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/converttostring(positiveinfinity:negativeinfinity:nan:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)","abstract":[{"text":"Encode the values using the given representation strings.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","type":"topic","abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","title":"JSONEncoder.NonConformingFloatEncodingStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum"}}}
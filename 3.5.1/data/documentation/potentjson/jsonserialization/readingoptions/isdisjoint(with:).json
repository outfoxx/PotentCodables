{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/isDisjoint(with:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Swift","roleHeading":"Instance Method","title":"isDisjoint(with:)","symbolKind":"method","role":"symbol","externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isDisjoint"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations"]]},"abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"common with the given set."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A set of the same type as the current set.","type":"text"}],"type":"paragraph"}],"name":"other"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the set has no elements in common with ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":";"},{"text":" ","type":"text"},{"type":"text","text":"otherwise, "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, the "},{"type":"codeVoice","code":"employees"},{"text":" set is disjoint with the","type":"text"},{"type":"text","text":" "},{"code":"visitors","type":"codeVoice"},{"type":"text","text":" set because no name appears in both sets."}]},{"syntax":null,"type":"codeListing","code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/isdisjoint(with:)"]}],"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","kind":"symbol","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"kind":"symbol","abstract":[],"type":"topic","role":"symbol","navigatorTitle":[{"text":"ReadingOptions","kind":"identifier"}],"title":"JSONSerialization.ReadingOptions","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ReadingOptions","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/isDisjoint(with:)":{"title":"isDisjoint(with:)","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/isDisjoint(with:)","kind":"symbol","role":"symbol","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/isdisjoint(with:)","abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"text":" ","type":"text"},{"text":"common with the given set.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://PotentCodables/documentation/PotentJSON":{"type":"topic","url":"\/documentation\/potentjson","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","role":"collection","title":"PotentJSON","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/SetAlgebra-Implementations":{"kind":"article","abstract":[],"type":"topic","role":"collectionGroup","title":"SetAlgebra Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/setalgebra-implementations"}}}
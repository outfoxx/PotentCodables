{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing"},{"type":"text","text":" "},{"type":"text","text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and"},{"type":"text","text":" "},{"type":"text","text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"type":"text","text":"framework."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following list of steps can be followed to easily implement a new serialization format."}]},{"anchor":"1-Define-a-native-value-tree-representation","level":3,"type":"heading","text":"1. Define a native value tree representation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"while CBOR uses "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},{"type":"text","text":". Examining any of the provided native value trees will reveal they closely mimic"},{"type":"text","text":" "},{"type":"text","text":"their serialized format."}]},{"anchor":"Required-Protocols","level":4,"type":"heading","text":"Required Protocols"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The native value tree representation (usually an enum) "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" implement the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"},{"type":"text","text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"}]}}]},{"anchor":"SeeExamples","level":4,"type":"heading","text":"See\/Examples"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSON native value tree is a great example of a full featured tree."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"}]}}]},{"anchor":"2-Provide-a-serialization-type","level":3,"type":"heading","text":"2. Provide a “serialization” type"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next step requires you to provide a serialization class that can serialize native value trees into their final"},{"type":"text","text":" "},{"type":"text","text":"serialized representation and conversely deserialize the serialized representation into a native value tree."}]},{"anchor":"Required-Protocols","level":4,"type":"heading","text":"Required Protocols"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"type":"text","text":" "},{"type":"text","text":"encoder and decoder implementations."}]},{"anchor":"SeeExample","level":4,"type":"heading","text":"See\/Example"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values. Also, because JSON is a text based format, it supports serialization to\/from "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBORSerialization type serializes "},{"type":"codeVoice","code":"CBOR"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"}]}}]},{"anchor":"3-Provide-transformer-types","level":3,"type":"heading","text":"3. Provide “transformer” types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"type":"text","text":" "},{"type":"text","text":"trees to\/from "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with "},{"type":"codeVoice","code":"Internal"},{"type":"text","text":" to denote that they are"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}]},{"anchor":"Required-Protocols-Encoding","level":4,"type":"heading","text":"Required Protocols (Encoding)"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" instances."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier"}]}}]},{"anchor":"Required-Protocols-Decoding","level":4,"type":"heading","text":"Required Protocols (Decoding)"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"}]}}]},{"anchor":"SeeExample","level":4,"type":"heading","text":"See\/Example"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform"},{"type":"text","text":"\/"},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform"}]}]}]},{"anchor":"4-Create-an-Encoder-and-a-Decoder","level":3,"type":"heading","text":"4. Create an “Encoder” and a “Decoder”"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Encoders are created in the following manner:"}]},{"type":"codeListing","syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Decoders are created in the following manner:"}]},{"type":"codeListing","syntax":"swift","code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to implement new "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" data formats easily."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Implementing New Data Formats","role":"article","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"seeAlsoSections":[{"title":"Advanced","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"generated":true}],"references":{"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"role":"symbol","title":"InternalDecoderTransform","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalDecoderTransform"}],"abstract":[{"type":"text","text":"A decoder transform provides required functionality to unbox instances of"},{"type":"text","text":" "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" into Swift\/Foundation primitives."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InternalDecoderTransform"}],"url":"\/documentation\/potentcodables\/internaldecodertransform"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"role":"symbol","title":"JSONSerialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"url":"\/documentation\/potentjson\/jsonserialization"},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"role":"article","title":"Custom References","abstract":[{"type":"text","text":"Polymorphic references tailored to your data."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/custom-references"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"role":"symbol","title":"JSONDecoderTransform","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoderTransform"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONDecoderTransform"}],"url":"\/documentation\/potentjson\/jsondecodertransform"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"role":"symbol","title":"InternalValueStringifier","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueStringifier"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InternalValueStringifier"}],"url":"\/documentation\/potentcodables\/internalvaluestringifier"},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"role":"article","title":"Polymorphic Encoding & Decoding","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/polymorphicencodingdecoding"},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"role":"symbol","title":"InternalValueParser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueParser"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InternalValueParser"}],"url":"\/documentation\/potentcodables\/internalvalueparser"},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"role":"symbol","title":"InternalValueSerializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueSerializer"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InternalValueSerializer"}],"url":"\/documentation\/potentcodables\/internalvalueserializer"},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"role":"symbol","title":"InternalValueDeserializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueDeserializer"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}],"url":"\/documentation\/potentcodables\/internalvaluedeserializer"},"doc://PotentCodables/documentation/PotentCodables/Value":{"role":"symbol","title":"Value","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"abstract":[{"type":"codeVoice","code":"Value"},{"type":"text","text":"s are the intermediary representation that"},{"type":"text","text":" "},{"type":"text","text":"allows querying the structure in memory, decoding"},{"type":"text","text":" "},{"type":"text","text":"it to a compatible "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type, or serializing"},{"type":"text","text":" "},{"type":"text","text":"it to "},{"type":"codeVoice","code":"Data"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Value"}],"url":"\/documentation\/potentcodables\/value"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"role":"symbol","title":"CBORSerialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBORSerialization"}],"abstract":[{"type":"text","text":"Convenience API for serializing and deserialization CBOR items."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"url":"\/documentation\/potentcbor\/cborserialization"},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"role":"symbol","title":"InternalEncoderTransform","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalEncoderTransform"}],"abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"type":"text","text":" "},{"type":"text","text":"Swift\/Foundation primitives into instances of "},{"type":"codeVoice","code":"Value"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InternalEncoderTransform"}],"url":"\/documentation\/potentcodables\/internalencodertransform"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"role":"symbol","title":"JSON","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"type":"text","text":"General JSON value."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"url":"\/documentation\/potentjson\/json"},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"role":"symbol","title":"CBOR","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBOR"}],"abstract":[{"type":"text","text":"General CBOR value."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"url":"\/documentation\/potentcbor\/cbor"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"role":"symbol","title":"JSONEncoderTransform","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoderTransform"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONEncoderTransform"}],"url":"\/documentation\/potentjson\/jsonencodertransform"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"role":"article","title":"Encoder\/Decoder Protocols","abstract":[{"type":"text","text":"Details of all the protocols PotentCodables "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s implement."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/protocols"}}}
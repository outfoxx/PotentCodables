{"variants":[{"paths":["\/documentation\/potentcodables\/anyvalue\/init(booleanliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/ExpressibleByBooleanLiteral-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"booleanLiteral","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"BooleanLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s18BooleanLiteralTypea"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value of the new instance."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Do not call this initializer directly. Instead, initialize a variable or","type":"text"},{"type":"text","text":" "},{"text":"constant using one of the Boolean literals ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" and "},{"type":"codeVoice","code":"false"},{"type":"text","text":". For"},{"type":"text","text":" "},{"text":"example:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let twasBrillig = true"],"type":"codeListing"},{"inlineContent":[{"text":"In this example, the assignment to the ","type":"text"},{"type":"codeVoice","code":"twasBrillig"},{"type":"text","text":" constant calls this"},{"text":" ","type":"text"},{"text":"Boolean literal initializer behind the scenes.","type":"text"}],"type":"paragraph"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/init(booleanLiteral:)"},"metadata":{"role":"symbol","modules":[{"name":"PotentCodables"}],"roleHeading":"Initializer","externalID":"s:14PotentCodables8AnyValueO14booleanLiteralACSb_tcfc","extendedModule":"PotentCodables","title":"init(booleanLiteral:)","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"booleanLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"BooleanLiteralType","preciseIdentifier":"s:s18BooleanLiteralTypea","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"kind":"symbol","abstract":[{"text":"Creates an instance initialized to the given Boolean value.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentCodables/AnyValue/init(booleanLiteral:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"booleanLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"BooleanLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s18BooleanLiteralTypea"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/potentcodables\/anyvalue\/init(booleanliteral:)","abstract":[{"type":"text","text":"Creates an instance initialized to the given Boolean value."}],"title":"init(booleanLiteral:)","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/init(booleanLiteral:)","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","url":"\/documentation\/potentcodables\/anyvalue","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"role":"symbol","title":"AnyValue","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}]},"doc://PotentCodables/documentation/PotentCodables/AnyValue/ExpressibleByBooleanLiteral-Implementations":{"kind":"article","url":"\/documentation\/potentcodables\/anyvalue\/expressiblebybooleanliteral-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/ExpressibleByBooleanLiteral-Implementations","title":"ExpressibleByBooleanLiteral Implementations","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"title":"PotentCodables","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables","role":"collection"}}}
{"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"metadata":{"modules":[{"name":"PotentCodables","relatedModules":["Swift"]}],"roleHeading":"Operator","symbolKind":"op","role":"symbol","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:14PotentCodables9ZonedDateV"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]}]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/!=(_:_:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate","doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/Equatable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/zoneddate\/!=(_:_:)"]}],"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic","url":"\/documentation\/potentcodables","role":"collection","title":"PotentCodables"},"doc://PotentCodables/documentation/PotentCodables/ZonedDate/!=(_:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/!=(_:_:)","title":"!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"kind":"symbol","url":"\/documentation\/potentcodables\/zoneddate\/!=(_:_:)","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/ZonedDate":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ZonedDate"}],"role":"symbol","title":"ZonedDate","navigatorTitle":[{"kind":"identifier","text":"ZonedDate"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate","url":"\/documentation\/potentcodables\/zoneddate","type":"topic","abstract":[{"text":"Date and explicit specific time zone.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/ZonedDate/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/potentcodables\/zoneddate\/equatable-implementations","abstract":[],"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/Equatable-Implementations"}}}
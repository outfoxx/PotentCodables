{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:14PotentCodables9ZonedDateV","title":"!=(_:_:)","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"PotentCodables"}],"symbolKind":"op","roleHeading":"Operator"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/potentcodables\/zoneddate\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate","doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/Equatable-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/!=(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"references":{"doc://PotentCodables/documentation/PotentCodables/ZonedDate":{"abstract":[{"type":"text","text":"Date and explicit specific time zone."}],"type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate","url":"\/documentation\/potentcodables\/zoneddate","kind":"symbol","title":"ZonedDate","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZonedDate","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ZonedDate"}]},"doc://PotentCodables/documentation/PotentCodables/ZonedDate/!=(_:_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/!=(_:_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"url":"\/documentation\/potentcodables\/zoneddate\/!=(_:_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables":{"title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/potentcodables","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables"},"doc://PotentCodables/documentation/PotentCodables/ZonedDate/Equatable-Implementations":{"title":"Equatable Implementations","kind":"article","role":"collectionGroup","type":"topic","url":"\/documentation\/potentcodables\/zoneddate\/equatable-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ZonedDate\/Equatable-Implementations","abstract":[]}}}
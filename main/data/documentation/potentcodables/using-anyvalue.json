{"kind":"article","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","interfaceLanguage":"swift"},"abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Sometimes it is necessary to decode values of any type or that can take on any structure; unfortunately Swift’s","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" is not well suited for this purpose. PotentCodables provides "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" to fill the gap."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"},{"text":" is simple, just use it wherever you would normally use an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":". Since","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true},{"text":" supports ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" everything else works as normal including Swift’s automatic codable"},{"type":"text","text":" "},{"type":"text","text":"generation."}]},{"code":["struct Account : Codable {","  let name: String","  let data: AnyValue                  \/\/ `data` can store and scalar or complex value","  let dataDict: [String: AnyValue]    \/\/ `dataDict` is required to be a dictionary of name to any values","  let dataArray: [AnyValue]           \/\/ `dataArray` is required to be an array of any values","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The example "},{"code":"Account","type":"codeVoice"},{"type":"text","text":" struct above has a "},{"code":"data","type":"codeVoice"},{"type":"text","text":" property that can take on any value supported by the codable system."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example when decoding from JSON, any value or tree of values (including "},{"type":"emphasis","inlineContent":[{"text":"null","type":"text"}]},{"text":", ","type":"text"},{"inlineContent":[{"type":"text","text":"bool"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"string","type":"text"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"number","type":"text"}],"type":"emphasis"},{"type":"text","text":","},{"text":" ","type":"text"},{"inlineContent":[{"text":"arrray","type":"text"}],"type":"emphasis"},{"text":" or ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"object"}]},{"type":"text","text":") could be saved in the "},{"code":"data","type":"codeVoice"},{"type":"text","text":" property. Encoding the same "},{"type":"codeVoice","code":"Account"},{"type":"text","text":" value back to JSON will produce"},{"text":" ","type":"text"},{"text":"equivalent serialized JSON regardless of the contents of the ","type":"text"},{"type":"codeVoice","code":"data"},{"text":" field.","type":"text"}]},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" has lots of features to make building and using them natural in Swift, like “dynamic member"},{"type":"text","text":" "},{"text":"lookup” to access fields of a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","type":"reference"},{"type":"text","text":". See the documentation for complete details."}]},{"text":"Performance","type":"heading","level":3,"anchor":"Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"text":" is compatible with any conformant ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" encoder or decoder, PotentCodables"},{"text":" ","type":"text"},{"text":"decoders specifically have shortcuts to decode the proper values in a more performant fashion and should be used when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"possible."}]}]}],"metadata":{"roleHeading":"Article","modules":[{"name":"PotentCodables"}],"title":"Using AnyValue","role":"article"},"seeAlsoSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"generated":true,"title":"Usage","anchor":"Usage"}],"references":{"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AnyValue","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"url":"\/documentation\/potentcodables\/anyvalue"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","title":"Data Formats","url":"\/documentation\/potentcodables\/data-formats","role":"article","kind":"article","type":"topic","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}]},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"kind":"article","url":"\/documentation\/potentcodables\/gettingstarted","abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"CBOR","type":"text"}],"type":"strong"},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"text":".","type":"text"}],"title":"Getting Started with Potent Codables","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","role":"article"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"role":"article","abstract":[{"text":"What are “tree values”?","type":"text"}],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"topic","url":"\/documentation\/potentcodables\/treevalues","title":"Tree Values"},"doc://PotentCodables/documentation/PotentCodables/AnyValue/dictionary(_:)":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dictionary"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables8AnyValueO0C10Dictionarya","text":"AnyDictionary"},{"text":")","kind":"text"}],"title":"AnyValue.dictionary(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","abstract":[],"role":"symbol","url":"\/documentation\/potentcodables\/anyvalue\/dictionary(_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables"}}}
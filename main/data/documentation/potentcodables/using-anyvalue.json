{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Sometimes it is necessary to decode values of any type or that can take on any structure; unfortunately Swift’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"Codable"},{"text":" is not well suited for this purpose. PotentCodables provides ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference","isActive":true},{"text":" to fill the gap.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Using ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"},{"type":"text","text":" is simple, just use it wherever you would normally use an "},{"type":"codeVoice","code":"Any"},{"type":"text","text":". Since"},{"type":"text","text":" "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"},{"type":"text","text":" supports "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" everything else works as normal including Swift’s automatic codable"},{"type":"text","text":" "},{"text":"generation.","type":"text"}]},{"syntax":"swift","code":["struct Account : Codable {","  let name: String","  let data: AnyValue                  \/\/ `data` can store and scalar or complex value","  let dataDict: [String: AnyValue]    \/\/ `dataDict` is required to be a dictionary of name to any values","  let dataArray: [AnyValue]           \/\/ `dataArray` is required to be an array of any values","}"],"type":"codeListing"},{"inlineContent":[{"text":"The example ","type":"text"},{"code":"Account","type":"codeVoice"},{"type":"text","text":" struct above has a "},{"code":"data","type":"codeVoice"},{"text":" property that can take on any value supported by the codable system.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example when decoding from JSON, any value or tree of values (including ","type":"text"},{"inlineContent":[{"text":"null","type":"text"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"bool","type":"text"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"string","type":"text"}],"type":"emphasis"},{"type":"text","text":", "},{"inlineContent":[{"text":"number","type":"text"}],"type":"emphasis"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"arrray"}]},{"text":" or ","type":"text"},{"inlineContent":[{"text":"object","type":"text"}],"type":"emphasis"},{"text":") could be saved in the ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":" property. Encoding the same "},{"type":"codeVoice","code":"Account"},{"text":" value back to JSON will produce","type":"text"},{"text":" ","type":"text"},{"text":"equivalent serialized JSON regardless of the contents of the ","type":"text"},{"type":"codeVoice","code":"data"},{"type":"text","text":" field."}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"},{"text":" has lots of features to make building and using them natural in Swift, like “dynamic member","type":"text"},{"text":" ","type":"text"},{"text":"lookup” to access fields of a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)"},{"text":". See the documentation for complete details.","type":"text"}],"type":"paragraph"},{"text":"Performance","anchor":"Performance","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Although ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"},{"text":" is compatible with any conformant ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" encoder or decoder, PotentCodables","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"decoders specifically have shortcuts to decode the proper values in a more performant fashion and should be used when"},{"type":"text","text":" "},{"type":"text","text":"possible."}]}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage","anchor":"Usage"}],"kind":"article","sections":[],"abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"article","modules":[{"name":"PotentCodables"}],"roleHeading":"Article","title":"Using AnyValue"},"references":{"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"title":"AnyValue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","url":"\/documentation\/potentcodables\/anyvalue","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyValue"}],"navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"title":"Data Formats","kind":"article","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"url":"\/documentation\/potentcodables\/data-formats","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"url":"\/documentation\/potentcodables\/treevalues","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","role":"article","abstract":[{"type":"text","text":"What are “tree values”?"}],"title":"Tree Values","type":"topic","kind":"article"},"doc://PotentCodables/documentation/PotentCodables/AnyValue/dictionary(_:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dictionary"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"AnyDictionary","preciseIdentifier":"s:14PotentCodables8AnyValueO0C10Dictionarya"},{"text":")","kind":"text"}],"abstract":[],"kind":"symbol","url":"\/documentation\/potentcodables\/anyvalue\/dictionary(_:)","title":"AnyValue.dictionary(_:)","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"kind":"article","role":"article","title":"Getting Started with Potent Codables","type":"topic","url":"\/documentation\/potentcodables\/gettingstarted","abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"text":"JSON","type":"text"}]},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"YAML"}],"type":"strong"},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"text":"CBOR","type":"text"}]},{"type":"text","text":" & "},{"inlineContent":[{"type":"text","text":"ASN.1"}],"type":"strong"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted"},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic"}}}
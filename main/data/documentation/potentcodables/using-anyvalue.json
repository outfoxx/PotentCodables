{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"seeAlsoSections":[{"generated":true,"title":"Usage","anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"]}],"sections":[],"abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference","isActive":true}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Sometimes it is necessary to decode values of any type or that can take on any structure; unfortunately Swift’s"},{"text":" ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" is not well suited for this purpose. PotentCodables provides ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"text":" to fill the gap.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"text":" is simple, just use it wherever you would normally use an ","type":"text"},{"type":"codeVoice","code":"Any"},{"type":"text","text":". Since"},{"text":" ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"},{"text":" supports ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" everything else works as normal including Swift’s automatic codable"},{"text":" ","type":"text"},{"type":"text","text":"generation."}]},{"syntax":"swift","type":"codeListing","code":["struct Account : Codable {","  let name: String","  let data: AnyValue                  \/\/ `data` can store and scalar or complex value","  let dataDict: [String: AnyValue]    \/\/ `dataDict` is required to be a dictionary of name to any values","  let dataArray: [AnyValue]           \/\/ `dataArray` is required to be an array of any values","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The example "},{"type":"codeVoice","code":"Account"},{"type":"text","text":" struct above has a "},{"type":"codeVoice","code":"data"},{"type":"text","text":" property that can take on any value supported by the codable system."}]},{"inlineContent":[{"text":"For example when decoding from JSON, any value or tree of values (including ","type":"text"},{"inlineContent":[{"text":"null","type":"text"}],"type":"emphasis"},{"text":", ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"bool"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"string","type":"text"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"number","type":"text"}]},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"arrray"}]},{"type":"text","text":" or "},{"inlineContent":[{"type":"text","text":"object"}],"type":"emphasis"},{"text":") could be saved in the ","type":"text"},{"code":"data","type":"codeVoice"},{"text":" property. Encoding the same ","type":"text"},{"type":"codeVoice","code":"Account"},{"type":"text","text":" value back to JSON will produce"},{"text":" ","type":"text"},{"type":"text","text":"equivalent serialized JSON regardless of the contents of the "},{"code":"data","type":"codeVoice"},{"type":"text","text":" field."}],"type":"paragraph"},{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"},{"type":"text","text":" has lots of features to make building and using them natural in Swift, like “dynamic member"},{"text":" ","type":"text"},{"type":"text","text":"lookup” to access fields of a "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","isActive":true},{"type":"text","text":". See the documentation for complete details."}],"type":"paragraph"},{"level":3,"anchor":"Performance","type":"heading","text":"Performance"},{"type":"paragraph","inlineContent":[{"text":"Although ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" is compatible with any conformant "},{"type":"codeVoice","code":"Codable"},{"text":" encoder or decoder, PotentCodables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoders specifically have shortcuts to decode the proper values in a more performant fashion and should be used when"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}]}],"kind":"content"}],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Article","modules":[{"name":"PotentCodables"}],"title":"Using AnyValue","role":"article"},"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic","url":"\/documentation\/potentcodables","role":"collection","title":"PotentCodables"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"url":"\/documentation\/potentcodables\/treevalues","kind":"article","abstract":[{"type":"text","text":"What are “tree values”?"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","role":"article","title":"Tree Values","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/AnyValue/dictionary(_:)":{"abstract":[],"url":"\/documentation\/potentcodables\/anyvalue\/dictionary(_:)","title":"AnyValue.dictionary(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dictionary"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:14PotentCodables8AnyValueO0C10Dictionarya","text":"AnyDictionary","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","url":"\/documentation\/potentcodables\/gettingstarted","role":"article","title":"Getting Started with Potent Codables","abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"type":"strong","inlineContent":[{"text":"JSON","type":"text"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"YAML","type":"text"}],"type":"strong"},{"type":"text","text":", "},{"inlineContent":[{"text":"CBOR","type":"text"}],"type":"strong"},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"ASN.1"}]},{"type":"text","text":"."}],"kind":"article","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"abstract":[{"text":"A ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"title":"AnyValue","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyValue"}],"kind":"symbol","url":"\/documentation\/potentcodables\/anyvalue","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"kind":"article","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","url":"\/documentation\/potentcodables\/data-formats","title":"Data Formats","type":"topic","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}]}}}
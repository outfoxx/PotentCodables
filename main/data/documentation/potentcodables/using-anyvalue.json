{"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"Sometimes it is necessary to decode values of any type or that can take on any structure; unfortunately Swift’s","type":"text"},{"type":"text","text":" "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" is not well suited for this purpose. PotentCodables provides "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" to fill the gap."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Using "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"},{"text":" is simple, just use it wherever you would normally use an ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":". Since","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"},{"text":" supports ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" everything else works as normal including Swift’s automatic codable","type":"text"},{"type":"text","text":" "},{"type":"text","text":"generation."}],"type":"paragraph"},{"type":"codeListing","code":["struct Account : Codable {","  let name: String","  let data: AnyValue                  \/\/ `data` can store and scalar or complex value","  let dataDict: [String: AnyValue]    \/\/ `dataDict` is required to be a dictionary of name to any values","  let dataArray: [AnyValue]           \/\/ `dataArray` is required to be an array of any values","}"],"syntax":"swift"},{"inlineContent":[{"text":"The example ","type":"text"},{"code":"Account","type":"codeVoice"},{"type":"text","text":" struct above has a "},{"type":"codeVoice","code":"data"},{"type":"text","text":" property that can take on any value supported by the codable system."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example when decoding from JSON, any value or tree of values (including "},{"type":"emphasis","inlineContent":[{"text":"null","type":"text"}]},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"bool"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"type":"text","text":"string"}]},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"number"}],"type":"emphasis"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"arrray"}]},{"text":" or ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"object"}]},{"text":") could be saved in the ","type":"text"},{"code":"data","type":"codeVoice"},{"text":" property. Encoding the same ","type":"text"},{"code":"Account","type":"codeVoice"},{"text":" value back to JSON will produce","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equivalent serialized JSON regardless of the contents of the "},{"code":"data","type":"codeVoice"},{"text":" field.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"},{"text":" has lots of features to make building and using them natural in Swift, like “dynamic member","type":"text"},{"type":"text","text":" "},{"text":"lookup” to access fields of a ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","isActive":true},{"type":"text","text":". See the documentation for complete details."}]},{"anchor":"Performance","level":3,"type":"heading","text":"Performance"},{"type":"paragraph","inlineContent":[{"text":"Although ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" is compatible with any conformant "},{"code":"Codable","type":"codeVoice"},{"text":" encoder or decoder, PotentCodables","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoders specifically have shortcuts to decode the proper values in a more performant fashion and should be used when"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"seeAlsoSections":[{"generated":true,"title":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"anchor":"Usage"}],"metadata":{"modules":[{"name":"PotentCodables"}],"roleHeading":"Article","role":"article","title":"Using AnyValue"},"references":{"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"url":"\/documentation\/potentcodables","role":"collection"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/anyvalue","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"title":"AnyValue","kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AnyValue","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},"doc://PotentCodables/documentation/PotentCodables/AnyValue/dictionary(_:)":{"type":"topic","title":"AnyValue.dictionary(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","url":"\/documentation\/potentcodables\/anyvalue\/dictionary(_:)","role":"symbol","abstract":[],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dictionary"},{"kind":"text","text":"("},{"text":"AnyDictionary","kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables8AnyValueO0C10Dictionarya"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","title":"Tree Values","type":"topic","url":"\/documentation\/potentcodables\/treevalues","abstract":[{"text":"What are “tree values”?","type":"text"}],"role":"article","kind":"article"},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"url":"\/documentation\/potentcodables\/gettingstarted","title":"Getting Started with Potent Codables","kind":"article","abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"inlineContent":[{"text":"JSON","type":"text"}],"type":"strong"},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"CBOR"}],"type":"strong"},{"type":"text","text":" & "},{"inlineContent":[{"type":"text","text":"ASN.1"}],"type":"strong"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","role":"article"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"kind":"article","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","title":"Data Formats","role":"article","url":"\/documentation\/potentcodables\/data-formats","type":"topic"}}}
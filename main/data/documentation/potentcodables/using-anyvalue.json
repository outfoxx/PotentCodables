{"kind":"article","sections":[],"metadata":{"role":"article","roleHeading":"Article","title":"Using AnyValue","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"anchor":"Usage","generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage"}],"abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Sometimes it is necessary to decode values of any type or that can take on any structure; unfortunately Swift’s"},{"type":"text","text":" "},{"code":"Codable","type":"codeVoice"},{"text":" is not well suited for this purpose. PotentCodables provides ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"text":" to fill the gap.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" is simple, just use it wherever you would normally use an "},{"code":"Any","type":"codeVoice"},{"type":"text","text":". Since"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"},{"text":" supports ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" everything else works as normal including Swift’s automatic codable"},{"text":" ","type":"text"},{"type":"text","text":"generation."}]},{"type":"codeListing","syntax":"swift","code":["struct Account : Codable {","  let name: String","  let data: AnyValue                  \/\/ `data` can store and scalar or complex value","  let dataDict: [String: AnyValue]    \/\/ `dataDict` is required to be a dictionary of name to any values","  let dataArray: [AnyValue]           \/\/ `dataArray` is required to be an array of any values","}"]},{"type":"paragraph","inlineContent":[{"text":"The example ","type":"text"},{"type":"codeVoice","code":"Account"},{"text":" struct above has a ","type":"text"},{"code":"data","type":"codeVoice"},{"type":"text","text":" property that can take on any value supported by the codable system."}]},{"inlineContent":[{"type":"text","text":"For example when decoding from JSON, any value or tree of values (including "},{"type":"emphasis","inlineContent":[{"type":"text","text":"null"}]},{"text":", ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"bool","type":"text"}]},{"text":", ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"string"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"number","type":"text"}],"type":"emphasis"},{"type":"text","text":","},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"arrray"}],"type":"emphasis"},{"text":" or ","type":"text"},{"inlineContent":[{"type":"text","text":"object"}],"type":"emphasis"},{"text":") could be saved in the ","type":"text"},{"type":"codeVoice","code":"data"},{"text":" property. Encoding the same ","type":"text"},{"type":"codeVoice","code":"Account"},{"type":"text","text":" value back to JSON will produce"},{"type":"text","text":" "},{"type":"text","text":"equivalent serialized JSON regardless of the contents of the "},{"code":"data","type":"codeVoice"},{"type":"text","text":" field."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"type":"text","text":" has lots of features to make building and using them natural in Swift, like “dynamic member"},{"type":"text","text":" "},{"type":"text","text":"lookup” to access fields of a "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","isActive":true},{"type":"text","text":". See the documentation for complete details."}]},{"type":"heading","text":"Performance","anchor":"Performance","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true},{"text":" is compatible with any conformant ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" encoder or decoder, PotentCodables"},{"type":"text","text":" "},{"type":"text","text":"decoders specifically have shortcuts to decode the proper values in a more performant fashion and should be used when"},{"type":"text","text":" "},{"type":"text","text":"possible."}]}]}],"references":{"doc://PotentCodables/documentation/PotentCodables/AnyValue/dictionary(_:)":{"kind":"symbol","url":"\/documentation\/potentcodables\/anyvalue\/dictionary(_:)","type":"topic","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","title":"AnyValue.dictionary(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"dictionary","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"AnyDictionary","preciseIdentifier":"s:14PotentCodables8AnyValueO0C10Dictionarya"},{"kind":"text","text":")"}]},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"title":"PotentCodables","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables","role":"collection"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","url":"\/documentation\/potentcodables\/anyvalue","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"role":"symbol","title":"AnyValue","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}]},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"CBOR"}],"type":"strong"},{"text":" & ","type":"text"},{"inlineContent":[{"text":"ASN.1","type":"text"}],"type":"strong"},{"type":"text","text":"."}],"title":"Getting Started with Potent Codables","url":"\/documentation\/potentcodables\/gettingstarted","kind":"article","type":"topic","role":"article"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"kind":"article","title":"Data Formats","url":"\/documentation\/potentcodables\/data-formats","role":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}]},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","abstract":[{"type":"text","text":"What are “tree values”?"}],"title":"Tree Values","url":"\/documentation\/potentcodables\/treevalues","kind":"article","type":"topic","role":"article"}}}
{"metadata":{"roleHeading":"Article","title":"Data Formats","modules":[{"name":"PotentCodables"}],"role":"article"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"seeAlsoSections":[{"anchor":"Usage","title":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"generated":true}],"kind":"article","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"YAML 1.2 support for handling YAML and JSON."}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"Advanced JSON support in pure Swift.","type":"text"}]}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"RFC 8949 Concise Binary Object Representation support.","type":"text"}]}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"text":"ASN.1 support with schema based encoding\/decoding.","type":"text"}],"type":"paragraph"}]}}],"type":"termList"}]}],"references":{"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"title":"Tree Values","url":"\/documentation\/potentcodables\/treevalues","kind":"article","abstract":[{"text":"What are “tree values”?","type":"text"}],"role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"url":"\/documentation\/potentcodables\/anyvalue","title":"AnyValue","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"abstract":[{"type":"text","text":"A "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCBOR":{"abstract":[{"text":"Complete support for Concise Binary Object Representation encoded data in pure Swift.","type":"text"}],"type":"topic","url":"\/documentation\/potentcbor","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","kind":"symbol","title":"PotentCBOR","role":"collection"},"doc://PotentCodables/documentation/PotentYAML":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","type":"topic","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentJSON":{"type":"topic","url":"\/documentation\/potentjson","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"title":"Getting Started with Potent Codables","url":"\/documentation\/potentcodables\/gettingstarted","kind":"article","abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"inlineContent":[{"text":"JSON","type":"text"}],"type":"strong"},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"text":"YAML","type":"text"}]},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"text":"CBOR","type":"text"}]},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"text":".","type":"text"}],"role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","type":"topic"},"doc://PotentCodables/documentation/PotentASN1":{"abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","title":"PotentASN1","url":"\/documentation\/potentasn1"},"doc://PotentCodables/documentation/PotentCodables":{"title":"PotentCodables","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"url":"\/documentation\/potentcodables\/using-anyvalue","type":"topic","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","title":"Using AnyValue","kind":"article"}}}
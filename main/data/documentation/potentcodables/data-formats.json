{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"type":"termList","items":[{"definition":{"content":[{"inlineContent":[{"text":"YAML 1.2 support for handling YAML and JSON.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","isActive":true,"type":"reference"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"reference","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Advanced JSON support in pure Swift."}]}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"RFC 8949 Concise Binary Object Representation support."}]}]}},{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"ASN.1 support with schema based encoding\/decoding.","type":"text"}]}]}}]}]}],"kind":"article","sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"generated":true,"anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage"}],"metadata":{"roleHeading":"Article","title":"Data Formats","role":"article","modules":[{"name":"PotentCodables"}]},"abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"url":"\/documentation\/potentcodables","title":"PotentCodables","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"}],"title":"Using AnyValue","kind":"article","type":"topic","role":"article","url":"\/documentation\/potentcodables\/using-anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"type":"strong","inlineContent":[{"text":"JSON","type":"text"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"YAML","type":"text"}],"type":"strong"},{"text":", ","type":"text"},{"inlineContent":[{"type":"text","text":"CBOR"}],"type":"strong"},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"ASN.1"}]},{"type":"text","text":"."}],"title":"Getting Started with Potent Codables","kind":"article","type":"topic","role":"article","url":"\/documentation\/potentcodables\/gettingstarted","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","role":"collection","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"abstract":[{"text":"What are “tree values”?","type":"text"}],"title":"Tree Values","type":"topic","kind":"article","role":"article","url":"\/documentation\/potentcodables\/treevalues","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"},"doc://PotentCodables/documentation/PotentYAML":{"type":"topic","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","role":"collection","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentCBOR":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","title":"PotentCBOR","type":"topic","abstract":[{"type":"text","text":"Complete support for Concise Binary Object Representation encoded data in pure Swift."}],"url":"\/documentation\/potentcbor","role":"collection"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"url":"\/documentation\/potentcodables\/anyvalue","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"topic","navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"title":"AnyValue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","title":"PotentASN1","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"}}}
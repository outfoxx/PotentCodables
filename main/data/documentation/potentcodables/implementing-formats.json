{"kind":"article","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats"},"metadata":{"title":"Implementing New Data Formats","modules":[{"name":"PotentCodables"}],"role":"article","roleHeading":"Article"},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"title":"Advanced","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"generated":true,"anchor":"Advanced"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing"},{"text":" ","type":"text"},{"text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and","type":"text"},{"type":"text","text":" "},{"text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"framework."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following list of steps can be followed to easily implement a new serialization format."}],"type":"paragraph"},{"anchor":"1-Define-a-native-value-tree-representation","text":"1. Define a native value tree representation","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"while CBOR uses ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},{"text":". Examining any of the provided native value trees will reveal they closely mimic","type":"text"},{"type":"text","text":" "},{"type":"text","text":"their serialized format."}],"type":"paragraph"},{"type":"heading","level":4,"anchor":"Required-Protocols","text":"Required Protocols"},{"items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The native value tree representation (usually an enum) ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"text":" implement the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"},{"text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree.","type":"text"}]}]}}],"type":"termList"},{"type":"heading","level":4,"anchor":"SeeExamples","text":"See\/Examples"},{"type":"termList","items":[{"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSON native value tree is a great example of a full featured tree."}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}]}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","type":"reference"}]}}]},{"type":"heading","level":3,"text":"2. Provide a “serialization” type","anchor":"2-Provide-a-serialization-type"},{"type":"paragraph","inlineContent":[{"text":"The next step requires you to provide a serialization class that can serialize native value trees into their final","type":"text"},{"type":"text","text":" "},{"text":"serialized representation and conversely deserialize the serialized representation into a native value tree.","type":"text"}]},{"type":"heading","level":4,"text":"Required Protocols","anchor":"Required-Protocols"},{"type":"paragraph","inlineContent":[{"text":"There are no required protocols for the serialization type to timplement because it will be used privately in the","type":"text"},{"type":"text","text":" "},{"text":"encoder and decoder implementations.","type":"text"}]},{"type":"heading","level":4,"text":"See\/Example","anchor":"SeeExample"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The JSONSerialization type serializes ","type":"text"},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" values to\/from "},{"code":"Data","type":"codeVoice"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values."}]}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The CBORSerialization type serializes ","type":"text"},{"code":"CBOR","type":"codeVoice"},{"text":" values to\/from ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values.","type":"text"}]}]}}]},{"anchor":"3-Provide-transformer-types","text":"3. Provide “transformer” types","level":3,"type":"heading"},{"inlineContent":[{"text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value","type":"text"},{"text":" ","type":"text"},{"text":"trees to\/from ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":"\/","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}],"type":"paragraph"},{"inlineContent":[{"text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with ","type":"text"},{"type":"codeVoice","code":"Internal"},{"type":"text","text":" to denote that they are"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}],"type":"paragraph"},{"anchor":"Required-Protocols-Encoding","text":"Required Protocols (Encoding)","level":4,"type":"heading"},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"Provides the boxing of Swift primitives generated by ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" instances.","type":"text"}]}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}},{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}}]},{"type":"heading","anchor":"Required-Protocols-Decoding","level":4,"text":"Required Protocols (Decoding)"},{"items":[{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","type":"reference"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]}}],"type":"termList"},{"type":"heading","level":4,"text":"See\/Example","anchor":"SeeExample"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","isActive":true},{"text":"\/","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","type":"reference"}],"type":"paragraph"}]}]},{"type":"heading","text":"4. Create an “Encoder” and a “Decoder”","anchor":"4-Create-an-Encoder-and-a-Decoder","level":3},{"inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}],"type":"paragraph"},{"inlineContent":[{"text":"Encoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Decoders are created in the following manner:"}]},{"syntax":"swift","type":"codeListing","code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"]}]}],"abstract":[{"type":"text","text":"Learn how to implement new "},{"type":"codeVoice","code":"Codable"},{"text":" data formats easily.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"role":"symbol","title":"InternalValueStringifier","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalValueStringifier","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalvaluestringifier","type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","abstract":[],"navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"type":"topic","abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"type":"text","text":" "},{"type":"text","text":"Swift\/Foundation primitives into instances of "},{"code":"Value","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","title":"InternalEncoderTransform","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalEncoderTransform","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalencodertransform","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"type":"topic","role":"symbol","title":"InternalValueParser","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalValueParser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalValueParser"}],"url":"\/documentation\/potentcodables\/internalvalueparser","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueDeserializer"}],"url":"\/documentation\/potentcodables\/internalvaluedeserializer","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"InternalValueDeserializer","kind":"identifier"}],"title":"InternalValueDeserializer"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}],"title":"JSONSerialization","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"url":"\/documentation\/potentjson\/jsonserialization","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","kind":"symbol","role":"collection","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","role":"symbol","title":"CBORSerialization","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}],"navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentcbor\/cborserialization","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBORSerialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"url":"\/documentation\/potentcbor\/cbor","type":"topic","abstract":[{"text":"General CBOR value.","type":"text"}],"title":"CBOR","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CBOR","kind":"identifier"}],"navigatorTitle":[{"text":"CBOR","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"title":"Encoder\/Decoder Protocols","type":"topic","url":"\/documentation\/potentcodables\/protocols","kind":"article","abstract":[{"text":"Details of all the protocols PotentCodables ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"text":"s implement.","type":"text"}],"role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"title":"Polymorphic Encoding & Decoding","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","type":"topic","abstract":[{"text":"Utilities to simplify polymorphic encoding and decoding.","type":"text"}],"url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","kind":"article","role":"article"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"type":"topic","url":"\/documentation\/potentjson\/json","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"kind":"symbol","role":"symbol","title":"JSON","abstract":[{"type":"text","text":"General JSON value."}]},"doc://PotentCodables/documentation/PotentCodables/Value":{"navigatorTitle":[{"kind":"identifier","text":"Value"}],"title":"Value","abstract":[{"type":"codeVoice","code":"Value"},{"type":"text","text":"s are the intermediary representation that"},{"type":"text","text":" "},{"text":"allows querying the structure in memory, decoding","type":"text"},{"type":"text","text":" "},{"text":"it to a compatible ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" type, or serializing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it to "},{"type":"codeVoice","code":"Data"}],"role":"symbol","url":"\/documentation\/potentcodables\/value","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"abstract":[],"url":"\/documentation\/potentcodables\/internalvalueserializer","navigatorTitle":[{"kind":"identifier","text":"InternalValueSerializer"}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueSerializer"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","kind":"symbol","title":"InternalValueSerializer"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"url":"\/documentation\/potentjson\/jsondecodertransform","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"JSONDecoderTransform"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoderTransform"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","kind":"symbol","title":"JSONDecoderTransform"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","title":"InternalDecoderTransform","url":"\/documentation\/potentcodables\/internaldecodertransform","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalDecoderTransform","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A decoder transform provides required functionality to unbox instances of","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Value"},{"text":" into Swift\/Foundation primitives.","type":"text"}],"navigatorTitle":[{"text":"InternalDecoderTransform","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"role":"symbol","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONEncoderTransform","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonencodertransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","navigatorTitle":[{"text":"JSONEncoderTransform","kind":"identifier"}],"title":"JSONEncoderTransform"},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"kind":"article","url":"\/documentation\/potentcodables\/custom-references","abstract":[{"text":"Polymorphic references tailored to your data.","type":"text"}],"role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","title":"Custom References","type":"topic"}}}
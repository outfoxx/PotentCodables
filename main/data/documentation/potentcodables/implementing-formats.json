{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Article","title":"Implementing New Data Formats","role":"article","modules":[{"name":"PotentCodables"}]},"kind":"article","seeAlsoSections":[{"generated":true,"anchor":"Advanced","title":"Advanced","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing"},{"type":"text","text":" "},{"text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and","type":"text"},{"text":" ","type":"text"},{"text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" ","type":"text"},{"type":"text","text":"framework."}],"type":"paragraph"},{"inlineContent":[{"text":"The following list of steps can be followed to easily implement a new serialization format.","type":"text"}],"type":"paragraph"},{"level":3,"text":"1. Define a native value tree representation","type":"heading","anchor":"1-Define-a-native-value-tree-representation"},{"inlineContent":[{"text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"text":"while CBOR uses ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},{"text":". Examining any of the provided native value trees will reveal they closely mimic","type":"text"},{"text":" ","type":"text"},{"text":"their serialized format.","type":"text"}],"type":"paragraph"},{"level":4,"anchor":"Required-Protocols","type":"heading","text":"Required Protocols"},{"type":"termList","items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The native value tree representation (usually an enum) ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" implement the "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"reference"},{"type":"text","text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree."}]}]}}]},{"anchor":"SeeExamples","text":"See\/Examples","type":"heading","level":4},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The JSON native value tree is a great example of a full featured tree.","type":"text"}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}]}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"}]}}]},{"type":"heading","anchor":"2-Provide-a-serialization-type","text":"2. Provide a “serialization” type","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next step requires you to provide a serialization class that can serialize native value trees into their final"},{"type":"text","text":" "},{"type":"text","text":"serialized representation and conversely deserialize the serialized representation into a native value tree."}]},{"level":4,"type":"heading","text":"Required Protocols","anchor":"Required-Protocols"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"text":" ","type":"text"},{"text":"encoder and decoder implementations.","type":"text"}]},{"level":4,"type":"heading","text":"See\/Example","anchor":"SeeExample"},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"reference","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"code":"JSON","type":"codeVoice"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" values.","type":"text"}]}]}},{"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBORSerialization type serializes "},{"code":"CBOR","type":"codeVoice"},{"text":" values to\/from ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}]}]}}]},{"text":"3. Provide “transformer” types","anchor":"3-Provide-transformer-types","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"trees to\/from "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}]},{"type":"paragraph","inlineContent":[{"text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with ","type":"text"},{"code":"Internal","type":"codeVoice"},{"text":" to denote that they are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}]},{"text":"Required Protocols (Encoding)","type":"heading","anchor":"Required-Protocols-Encoding","level":4},{"items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","type":"reference","isActive":true}]},"definition":{"content":[{"inlineContent":[{"text":"Provides the boxing of Swift primitives generated by ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" instances.","type":"text"}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","isActive":true}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}}],"type":"termList"},{"type":"heading","level":4,"anchor":"Required-Protocols-Decoding","text":"Required Protocols (Decoding)"},{"items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","type":"reference","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}},{"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","type":"reference"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]}}],"type":"termList"},{"type":"heading","level":4,"anchor":"SeeExample","text":"See\/Example"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","isActive":true},{"text":"\/","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","isActive":true}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"4-Create-an-Encoder-and-a-Decoder","text":"4. Create an “Encoder” and a “Decoder”"},{"inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Encoders are created in the following manner:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"]},{"inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"syntax":"swift","type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to implement new "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" data formats easily."}],"references":{"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"abstract":[],"type":"topic","url":"\/documentation\/potentcodables\/internalvaluedeserializer","role":"symbol","kind":"symbol","title":"InternalValueDeserializer","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalValueDeserializer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}]},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"url":"\/documentation\/potentcodables\/custom-references","abstract":[{"text":"Polymorphic references tailored to your data.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","role":"article","kind":"article","title":"Custom References","type":"topic"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"url":"\/documentation\/potentjson\/jsonencodertransform","title":"JSONEncoderTransform","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONEncoderTransform","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONEncoderTransform"}],"abstract":[],"role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"abstract":[{"type":"text","text":"A decoder transform provides required functionality to unbox instances of"},{"type":"text","text":" "},{"code":"Value","type":"codeVoice"},{"text":" into Swift\/Foundation primitives.","type":"text"}],"role":"symbol","title":"InternalDecoderTransform","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalDecoderTransform"}],"type":"topic","navigatorTitle":[{"text":"InternalDecoderTransform","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internaldecodertransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"abstract":[],"type":"topic","url":"\/documentation\/potentcodables\/internalvalueserializer","role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","title":"InternalValueSerializer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalValueSerializer","kind":"identifier"}],"navigatorTitle":[{"text":"InternalValueSerializer","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"navigatorTitle":[{"text":"JSONDecoderTransform","kind":"identifier"}],"title":"JSONDecoderTransform","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoderTransform"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","kind":"symbol","url":"\/documentation\/potentjson\/jsondecodertransform"},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","url":"\/documentation\/potentcodables\/internalencodertransform","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalEncoderTransform"}],"title":"InternalEncoderTransform","type":"topic","navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"An encoder transform provides required functionality to box instances of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Swift\/Foundation primitives into instances of "},{"code":"Value","type":"codeVoice"},{"text":".","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueParser"}],"title":"InternalValueParser","navigatorTitle":[{"text":"InternalValueParser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentcodables\/internalvalueparser"},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","role":"article","kind":"article","title":"Polymorphic Encoding & Decoding","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}],"navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Value":{"navigatorTitle":[{"text":"Value","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"Value"},{"text":"s are the intermediary representation that","type":"text"},{"text":" ","type":"text"},{"text":"allows querying the structure in memory, decoding","type":"text"},{"text":" ","type":"text"},{"text":"it to a compatible ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type, or serializing"},{"text":" ","type":"text"},{"text":"it to ","type":"text"},{"type":"codeVoice","code":"Data"}],"url":"\/documentation\/potentcodables\/value","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"topic","role":"symbol","kind":"symbol","title":"Value","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"abstract":[{"type":"text","text":"General CBOR value."}],"title":"CBOR","url":"\/documentation\/potentcbor\/cbor","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBOR","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/json","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","title":"JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"text":"General JSON value.","type":"text"}]},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBORSerialization"}],"title":"CBORSerialization","abstract":[{"type":"text","text":"Convenience API for serializing and deserialization CBOR items."}],"kind":"symbol","url":"\/documentation\/potentcbor\/cborserialization","navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueStringifier"}],"title":"InternalValueStringifier","navigatorTitle":[{"kind":"identifier","text":"InternalValueStringifier"}],"kind":"symbol","url":"\/documentation\/potentcodables\/internalvaluestringifier"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"abstract":[{"type":"text","text":"Details of all the protocols PotentCodables "},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"text":"s implement.","type":"text"}],"type":"topic","url":"\/documentation\/potentcodables\/protocols","role":"article","kind":"article","title":"Encoder\/Decoder Protocols","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"}}}
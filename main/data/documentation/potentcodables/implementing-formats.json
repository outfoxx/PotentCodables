{"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing"},{"text":" ","type":"text"},{"type":"text","text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and"},{"type":"text","text":" "},{"type":"text","text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"type":"text","text":"framework."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following list of steps can be followed to easily implement a new serialization format."}]},{"type":"heading","anchor":"1-Define-a-native-value-tree-representation","level":3,"text":"1. Define a native value tree representation"},{"inlineContent":[{"text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"while CBOR uses "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},{"type":"text","text":". Examining any of the provided native value trees will reveal they closely mimic"},{"type":"text","text":" "},{"text":"their serialized format.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Required Protocols","anchor":"Required-Protocols","level":4},{"type":"termList","items":[{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The native value tree representation (usually an enum) ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"type":"text","text":" implement the "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true},{"text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree.","type":"text"}]}]}}]},{"text":"See\/Examples","anchor":"SeeExamples","level":4,"type":"heading"},{"items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The JSON native value tree is a great example of a full featured tree."}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}]}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true}]}}],"type":"termList"},{"type":"heading","level":3,"anchor":"2-Provide-a-serialization-type","text":"2. Provide a “serialization” type"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next step requires you to provide a serialization class that can serialize native value trees into their final"},{"text":" ","type":"text"},{"type":"text","text":"serialized representation and conversely deserialize the serialized representation into a native value tree."}]},{"anchor":"Required-Protocols","level":4,"text":"Required Protocols","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"text":" ","type":"text"},{"type":"text","text":"encoder and decoder implementations."}]},{"level":4,"type":"heading","anchor":"SeeExample","text":"See\/Example"},{"type":"termList","items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"code":"JSON","type":"codeVoice"},{"text":" values to\/from ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" values.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"reference","isActive":true}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The CBORSerialization type serializes ","type":"text"},{"type":"codeVoice","code":"CBOR"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","isActive":true,"type":"reference"}]}}]},{"type":"heading","level":3,"text":"3. Provide “transformer” types","anchor":"3-Provide-transformer-types"},{"inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"type":"text","text":" "},{"type":"text","text":"trees to\/from "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with ","type":"text"},{"code":"Internal","type":"codeVoice"},{"type":"text","text":" to denote that they are"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}]},{"type":"heading","anchor":"Required-Protocols-Encoding","text":"Required Protocols (Encoding)","level":4},{"type":"termList","items":[{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"type":"codeVoice","code":"Encodable"},{"text":" instances.","type":"text"}]}]}},{"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","type":"reference"}]},"definition":{"content":[{"inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}}]},{"level":4,"text":"Required Protocols (Decoding)","type":"heading","anchor":"Required-Protocols-Decoding"},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"text":"Provides the unboxing of native value tree types.","type":"text"}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","isActive":true}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"String","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]}}]},{"level":4,"type":"heading","anchor":"SeeExample","text":"See\/Example"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","type":"reference"},{"type":"text","text":"\/"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","isActive":true,"type":"reference"}],"type":"paragraph"}]}]},{"text":"4. Create an “Encoder” and a “Decoder”","anchor":"4-Create-an-Encoder-and-a-Decoder","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}],"type":"paragraph"},{"inlineContent":[{"text":"Encoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"],"syntax":"swift"},{"inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"type":"codeListing"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","metadata":{"role":"article","modules":[{"name":"PotentCodables"}],"title":"Implementing New Data Formats","roleHeading":"Article"},"abstract":[{"text":"Learn how to implement new ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" data formats easily.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Advanced","generated":true,"anchor":"Advanced","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"references":{"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"role":"symbol","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalValueParser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalValueParser"}],"title":"InternalValueParser","url":"\/documentation\/potentcodables\/internalvalueparser","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"abstract":[{"type":"text","text":"Details of all the protocols PotentCodables "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"text":"s implement.","type":"text"}],"url":"\/documentation\/potentcodables\/protocols","title":"Encoder\/Decoder Protocols","role":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","kind":"article"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"abstract":[{"text":"General JSON value.","type":"text"}],"url":"\/documentation\/potentjson\/json","title":"JSON","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSON","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"abstract":[{"text":"Polymorphic references tailored to your data.","type":"text"}],"kind":"article","url":"\/documentation\/potentcodables\/custom-references","type":"topic","role":"article","title":"Custom References","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoderTransform"}],"navigatorTitle":[{"text":"JSONDecoderTransform","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsondecodertransform","kind":"symbol","role":"symbol","title":"JSONDecoderTransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","type":"topic","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalValueSerializer","kind":"identifier"}],"navigatorTitle":[{"text":"InternalValueSerializer","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalvalueserializer","kind":"symbol","role":"symbol","title":"InternalValueSerializer","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"type":"text","text":" "},{"type":"text","text":"Swift\/Foundation primitives into instances of "},{"type":"codeVoice","code":"Value"},{"text":".","type":"text"}],"title":"InternalEncoderTransform","url":"\/documentation\/potentcodables\/internalencodertransform","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalEncoderTransform","kind":"identifier"}],"navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSerialization","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","title":"JSONSerialization","role":"symbol","url":"\/documentation\/potentjson\/jsonserialization"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalValueStringifier","kind":"identifier"}],"navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalvaluestringifier","kind":"symbol","role":"symbol","title":"InternalValueStringifier","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","abstract":[]},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"CBORSerialization","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"url":"\/documentation\/potentcbor\/cborserialization","kind":"symbol","role":"symbol","title":"CBORSerialization","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","abstract":[{"type":"text","text":"Convenience API for serializing and deserialization CBOR items."}]},"doc://PotentCodables/documentation/PotentCodables/Value":{"kind":"symbol","url":"\/documentation\/potentcodables\/value","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"abstract":[{"code":"Value","type":"codeVoice"},{"text":"s are the intermediary representation that","type":"text"},{"type":"text","text":" "},{"text":"allows querying the structure in memory, decoding","type":"text"},{"text":" ","type":"text"},{"text":"it to a compatible ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type, or serializing"},{"text":" ","type":"text"},{"type":"text","text":"it to "},{"code":"Data","type":"codeVoice"}],"title":"Value","navigatorTitle":[{"kind":"identifier","text":"Value"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"abstract":[],"url":"\/documentation\/potentjson\/jsonencodertransform","title":"JSONEncoderTransform","role":"symbol","navigatorTitle":[{"text":"JSONEncoderTransform","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONEncoderTransform"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueDeserializer"}],"abstract":[],"title":"InternalValueDeserializer","kind":"symbol","url":"\/documentation\/potentcodables\/internalvaluedeserializer","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"url":"\/documentation\/potentcodables\/internaldecodertransform","navigatorTitle":[{"kind":"identifier","text":"InternalDecoderTransform"}],"abstract":[{"text":"A decoder transform provides required functionality to unbox instances of","type":"text"},{"type":"text","text":" "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" into Swift\/Foundation primitives."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalDecoderTransform","kind":"identifier"}],"title":"InternalDecoderTransform","role":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","kind":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"type":"topic","abstract":[{"text":"General CBOR value.","type":"text"}],"role":"symbol","url":"\/documentation\/potentcbor\/cbor","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","title":"CBOR","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBOR"}],"navigatorTitle":[{"kind":"identifier","text":"CBOR"}]},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"kind":"article","url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","role":"article","title":"Polymorphic Encoding & Decoding","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}]},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"title":"PotentCodables","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables","role":"collection"}}}
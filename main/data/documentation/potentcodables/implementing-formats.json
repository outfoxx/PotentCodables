{"seeAlsoSections":[{"anchor":"Advanced","title":"Advanced","generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"]}],"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"PotentCodables"}],"title":"Implementing New Data Formats"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"kind":"article","abstract":[{"text":"Learn how to implement new ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" data formats easily.","type":"text"}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing","type":"text"},{"type":"text","text":" "},{"text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and","type":"text"},{"type":"text","text":" "},{"text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"text":"framework.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following list of steps can be followed to easily implement a new serialization format."}]},{"type":"heading","level":3,"text":"1. Define a native value tree representation","anchor":"1-Define-a-native-value-tree-representation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"while CBOR uses "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","type":"reference"},{"text":". Examining any of the provided native value trees will reveal they closely mimic","type":"text"},{"type":"text","text":" "},{"text":"their serialized format.","type":"text"}]},{"anchor":"Required-Protocols","text":"Required Protocols","type":"heading","level":4},{"items":[{"definition":{"content":[{"inlineContent":[{"text":"The native value tree representation (usually an enum) ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"type":"text","text":" implement the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"},{"type":"text","text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree."}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true,"type":"reference"}]}}],"type":"termList"},{"level":4,"anchor":"SeeExamples","text":"See\/Examples","type":"heading"},{"type":"termList","items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The JSON native value tree is a great example of a full featured tree."}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"}]}},{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"}]}}]},{"text":"2. Provide a “serialization” type","level":3,"anchor":"2-Provide-a-serialization-type","type":"heading"},{"inlineContent":[{"text":"The next step requires you to provide a serialization class that can serialize native value trees into their final","type":"text"},{"type":"text","text":" "},{"type":"text","text":"serialized representation and conversely deserialize the serialized representation into a native value tree."}],"type":"paragraph"},{"level":4,"text":"Required Protocols","type":"heading","anchor":"Required-Protocols"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"text":" ","type":"text"},{"type":"text","text":"encoder and decoder implementations."}]},{"type":"heading","anchor":"SeeExample","text":"See\/Example","level":4},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"type":"codeVoice","code":"JSON"},{"text":" values to\/from ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values."}]}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization"}]}},{"definition":{"content":[{"inlineContent":[{"text":"The CBORSerialization type serializes ","type":"text"},{"type":"codeVoice","code":"CBOR"},{"type":"text","text":" values to\/from "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"}]}}]},{"level":3,"text":"3. Provide “transformer” types","anchor":"3-Provide-transformer-types","type":"heading"},{"inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"type":"text","text":" "},{"text":"trees to\/from ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with "},{"code":"Internal","type":"codeVoice"},{"type":"text","text":" to denote that they are"},{"text":" ","type":"text"},{"type":"text","text":"not intended for public use."}]},{"type":"heading","level":4,"text":"Required Protocols (Encoding)","anchor":"Required-Protocols-Encoding"},{"type":"termList","items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"type":"codeVoice","code":"Encodable"},{"text":" instances.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","isActive":true}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","isActive":true}]}}]},{"text":"Required Protocols (Decoding)","type":"heading","level":4,"anchor":"Required-Protocols-Decoding"},{"type":"termList","items":[{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}]}]}},{"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"Data","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","isActive":true}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"}]}}]},{"text":"See\/Example","type":"heading","anchor":"SeeExample","level":4},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","isActive":true,"type":"reference"},{"text":"\/","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"},{"text":"4. Create an “Encoder” and a “Decoder”","level":3,"anchor":"4-Create-an-Encoder-and-a-Decoder","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The final step is to implement the public encoder and decoder by deriving from the base implementations.","type":"text"}]},{"inlineContent":[{"text":"Encoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"]},{"type":"paragraph","inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}]},{"type":"codeListing","code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"syntax":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBORSerialization","kind":"identifier"}],"title":"CBORSerialization","url":"\/documentation\/potentcbor\/cborserialization","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"role":"symbol","kind":"symbol","url":"\/documentation\/potentjson\/jsondecodertransform","navigatorTitle":[{"kind":"identifier","text":"JSONDecoderTransform"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoderTransform"}],"abstract":[],"title":"JSONDecoderTransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"url":"\/documentation\/potentcodables\/internalvaluedeserializer","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalValueDeserializer","kind":"identifier"}],"navigatorTitle":[{"text":"InternalValueDeserializer","kind":"identifier"}],"title":"InternalValueDeserializer","abstract":[],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"kind":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","url":"\/documentation\/potentcodables\/custom-references","abstract":[{"type":"text","text":"Polymorphic references tailored to your data."}],"title":"Custom References","role":"article"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","abstract":[{"type":"text","text":"General CBOR value."}],"kind":"symbol","navigatorTitle":[{"text":"CBOR","kind":"identifier"}],"role":"symbol","title":"CBOR","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBOR"}],"url":"\/documentation\/potentcbor\/cbor","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","type":"topic","title":"InternalEncoderTransform","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalEncoderTransform","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalencodertransform","navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"text":" ","type":"text"},{"type":"text","text":"Swift\/Foundation primitives into instances of "},{"type":"codeVoice","code":"Value"},{"type":"text","text":"."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalValueParser","kind":"identifier"}],"title":"InternalValueParser","type":"topic","abstract":[],"navigatorTitle":[{"text":"InternalValueParser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentcodables\/internalvalueparser","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"kind":"article","abstract":[{"text":"Details of all the protocols PotentCodables ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"s implement."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","type":"topic","url":"\/documentation\/potentcodables\/protocols","title":"Encoder\/Decoder Protocols","role":"article"},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","abstract":[],"url":"\/documentation\/potentcodables\/internalvalueserializer","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalValueSerializer","kind":"identifier"}],"title":"InternalValueSerializer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InternalValueSerializer"}]},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}],"role":"article","type":"topic","url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","kind":"article","title":"Polymorphic Encoding & Decoding"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"url":"\/documentation\/potentcodables","role":"collection"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"navigatorTitle":[{"text":"JSONEncoderTransform","kind":"identifier"}],"title":"JSONEncoderTransform","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONEncoderTransform","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/potentjson\/jsonencodertransform","abstract":[]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}],"navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"JSONSerialization"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"role":"symbol","kind":"symbol","url":"\/documentation\/potentcodables\/internaldecodertransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","abstract":[{"text":"A decoder transform provides required functionality to unbox instances of","type":"text"},{"type":"text","text":" "},{"code":"Value","type":"codeVoice"},{"text":" into Swift\/Foundation primitives.","type":"text"}],"type":"topic","title":"InternalDecoderTransform","navigatorTitle":[{"text":"InternalDecoderTransform","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalDecoderTransform"}]},"doc://PotentCodables/documentation/PotentCodables/Value":{"url":"\/documentation\/potentcodables\/value","title":"Value","navigatorTitle":[{"kind":"identifier","text":"Value"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","abstract":[{"code":"Value","type":"codeVoice"},{"text":"s are the intermediary representation that","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"allows querying the structure in memory, decoding"},{"type":"text","text":" "},{"text":"it to a compatible ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" type, or serializing"},{"type":"text","text":" "},{"type":"text","text":"it to "},{"code":"Data","type":"codeVoice"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"url":"\/documentation\/potentjson\/json","title":"JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","abstract":[{"type":"text","text":"General JSON value."}],"type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"kind":"symbol","role":"symbol","title":"InternalValueStringifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","abstract":[],"url":"\/documentation\/potentcodables\/internalvaluestringifier","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueStringifier"}],"navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}],"type":"topic"}}}
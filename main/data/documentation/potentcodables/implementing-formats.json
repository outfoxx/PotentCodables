{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"title":"Advanced","anchor":"Advanced","generated":true}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats"},"abstract":[{"type":"text","text":"Learn how to implement new "},{"type":"codeVoice","code":"Codable"},{"text":" data formats easily.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and"},{"type":"text","text":" "},{"text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"type":"text","text":"framework."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The following list of steps can be followed to easily implement a new serialization format."}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"1-Define-a-native-value-tree-representation","text":"1. Define a native value tree representation"},{"inlineContent":[{"type":"text","text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"while CBOR uses ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true},{"text":". Examining any of the provided native value trees will reveal they closely mimic","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"their serialized format."}],"type":"paragraph"},{"level":4,"text":"Required Protocols","anchor":"Required-Protocols","type":"heading"},{"type":"termList","items":[{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The native value tree representation (usually an enum) "},{"type":"strong","inlineContent":[{"text":"must","type":"text"}]},{"type":"text","text":" implement the "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true,"type":"reference"},{"text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree.","type":"text"}]}]}}]},{"level":4,"text":"See\/Examples","type":"heading","anchor":"SeeExamples"},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSON native value tree is a great example of a full featured tree."}]}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}]}]}}]},{"text":"2. Provide a “serialization” type","level":3,"type":"heading","anchor":"2-Provide-a-serialization-type"},{"inlineContent":[{"text":"The next step requires you to provide a serialization class that can serialize native value trees into their final","type":"text"},{"text":" ","type":"text"},{"text":"serialized representation and conversely deserialize the serialized representation into a native value tree.","type":"text"}],"type":"paragraph"},{"level":4,"type":"heading","text":"Required Protocols","anchor":"Required-Protocols"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"type":"text","text":" "},{"text":"encoder and decoder implementations.","type":"text"}]},{"level":4,"text":"See\/Example","anchor":"SeeExample","type":"heading"},{"items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" values to\/from "},{"code":"Data","type":"codeVoice"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values."}]}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","isActive":true}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBORSerialization type serializes "},{"type":"codeVoice","code":"CBOR"},{"text":" values to\/from ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}]}]}}],"type":"termList"},{"anchor":"3-Provide-transformer-types","text":"3. Provide “transformer” types","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"type":"text","text":" "},{"text":"trees to\/from ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Decodable"},{"text":". The good news here is that only the boxing and unboxing code is requried.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with ","type":"text"},{"code":"Internal","type":"codeVoice"},{"type":"text","text":" to denote that they are"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}]},{"level":4,"text":"Required Protocols (Encoding)","type":"heading","anchor":"Required-Protocols-Encoding"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"type":"codeVoice","code":"Encodable"},{"text":" instances.","type":"text"}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","type":"reference","isActive":true}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]}},{"definition":{"content":[{"inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","type":"reference"}]}}]},{"type":"heading","level":4,"anchor":"Required-Protocols-Decoding","text":"Required Protocols (Decoding)"},{"items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}]}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]}}],"type":"termList"},{"anchor":"SeeExample","text":"See\/Example","level":4,"type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform"},{"text":"\/","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","isActive":true}]}]}],"type":"unorderedList"},{"type":"heading","level":3,"anchor":"4-Create-an-Encoder-and-a-Decoder","text":"4. Create an “Encoder” and a “Decoder”"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Encoders are created in the following manner:"}]},{"syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Decoders are created in the following manner:"}]},{"code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"syntax":"swift","type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"metadata":{"roleHeading":"Article","title":"Implementing New Data Formats","role":"article","modules":[{"name":"PotentCodables"}]},"references":{"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"title":"CBORSerialization","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBORSerialization","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"url":"\/documentation\/potentcbor\/cborserialization","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InternalValueSerializer"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueSerializer"}],"url":"\/documentation\/potentcodables\/internalvalueserializer","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","title":"InternalValueSerializer","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","url":"\/documentation\/potentcodables\/internalvaluedeserializer","title":"InternalValueDeserializer","abstract":[],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueDeserializer"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}]},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalEncoderTransform","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalEncoderTransform"}],"abstract":[{"text":"An encoder transform provides required functionality to box instances of","type":"text"},{"type":"text","text":" "},{"text":"Swift\/Foundation primitives into instances of ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/potentcodables\/internalencodertransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","title":"InternalEncoderTransform","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"title":"Encoder\/Decoder Protocols","type":"topic","url":"\/documentation\/potentcodables\/protocols","role":"article","kind":"article","abstract":[{"type":"text","text":"Details of all the protocols PotentCodables "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"text":"s implement.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"title":"InternalValueParser","url":"\/documentation\/potentcodables\/internalvalueparser","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueParser"}],"role":"symbol","abstract":[],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"InternalValueParser","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InternalValueStringifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueStringifier"}],"url":"\/documentation\/potentcodables\/internalvaluestringifier","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","title":"InternalValueStringifier","type":"topic"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"kind":"symbol","abstract":[{"type":"text","text":"General CBOR value."}],"url":"\/documentation\/potentcbor\/cbor","title":"CBOR","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBOR"}],"navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","title":"PotentCodables","role":"collection","type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JSONDecoderTransform","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsondecodertransform","navigatorTitle":[{"kind":"identifier","text":"JSONDecoderTransform"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","title":"JSONDecoderTransform","type":"topic","kind":"symbol","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","abstract":[{"text":"Utilities to simplify polymorphic encoding and decoding.","type":"text"}],"role":"article","title":"Polymorphic Encoding & Decoding","kind":"article","url":"\/documentation\/potentcodables\/polymorphicencodingdecoding"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JSONEncoderTransform","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/potentjson\/jsonencodertransform","navigatorTitle":[{"text":"JSONEncoderTransform","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","type":"topic","title":"JSONEncoderTransform"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"title":"InternalDecoderTransform","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalDecoderTransform"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","kind":"symbol","url":"\/documentation\/potentcodables\/internaldecodertransform","abstract":[{"type":"text","text":"A decoder transform provides required functionality to unbox instances of"},{"type":"text","text":" "},{"code":"Value","type":"codeVoice"},{"text":" into Swift\/Foundation primitives.","type":"text"}],"navigatorTitle":[{"text":"InternalDecoderTransform","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"role":"symbol","url":"\/documentation\/potentjson\/jsonserialization","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"topic","abstract":[],"kind":"symbol","title":"JSONSerialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"JSONSerialization","kind":"identifier"}],"navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Value":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Value"}],"title":"Value","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/potentcodables\/value","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","abstract":[{"code":"Value","type":"codeVoice"},{"type":"text","text":"s are the intermediary representation that"},{"text":" ","type":"text"},{"type":"text","text":"allows querying the structure in memory, decoding"},{"type":"text","text":" "},{"type":"text","text":"it to a compatible "},{"type":"codeVoice","code":"Decodable"},{"text":" type, or serializing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it to "},{"type":"codeVoice","code":"Data"}]},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"role":"article","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","type":"topic","title":"Custom References","abstract":[{"type":"text","text":"Polymorphic references tailored to your data."}],"url":"\/documentation\/potentcodables\/custom-references"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"title":"JSON","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","kind":"symbol","url":"\/documentation\/potentjson\/json","abstract":[{"type":"text","text":"General JSON value."}],"navigatorTitle":[{"text":"JSON","kind":"identifier"}]}}}
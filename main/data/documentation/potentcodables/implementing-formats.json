{"seeAlsoSections":[{"generated":true,"title":"Advanced","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"anchor":"Advanced"}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing"},{"text":" ","type":"text"},{"text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and","type":"text"},{"text":" ","type":"text"},{"text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"type":"text","text":"framework."}]},{"type":"paragraph","inlineContent":[{"text":"The following list of steps can be followed to easily implement a new serialization format.","type":"text"}]},{"level":3,"anchor":"1-Define-a-native-value-tree-representation","type":"heading","text":"1. Define a native value tree representation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference","isActive":true},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"while CBOR uses ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","type":"reference","isActive":true},{"type":"text","text":". Examining any of the provided native value trees will reveal they closely mimic"},{"type":"text","text":" "},{"type":"text","text":"their serialized format."}]},{"type":"heading","level":4,"anchor":"Required-Protocols","text":"Required Protocols"},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"reference","isActive":true}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"The native value tree representation (usually an enum) "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"text":" implement the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"},{"type":"text","text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree."}],"type":"paragraph"}]}}]},{"level":4,"type":"heading","anchor":"SeeExamples","text":"See\/Examples"},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The JSON native value tree is a great example of a full featured tree.","type":"text"}]}]}},{"definition":{"content":[{"inlineContent":[{"text":"The CBOR native value tree is another great example of a full featured tree.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true}]}}]},{"level":3,"anchor":"2-Provide-a-serialization-type","type":"heading","text":"2. Provide a “serialization” type"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next step requires you to provide a serialization class that can serialize native value trees into their final"},{"type":"text","text":" "},{"text":"serialized representation and conversely deserialize the serialized representation into a native value tree.","type":"text"}]},{"anchor":"Required-Protocols","level":4,"text":"Required Protocols","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"There are no required protocols for the serialization type to timplement because it will be used privately in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"encoder and decoder implementations."}]},{"type":"heading","anchor":"SeeExample","level":4,"text":"See\/Example"},{"items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" values to\/from "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values. Also, because JSON is a text based format, it supports serialization to\/from "},{"type":"codeVoice","code":"String"},{"text":" values.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","isActive":true}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBORSerialization type serializes "},{"type":"codeVoice","code":"CBOR"},{"text":" values to\/from ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","type":"reference","isActive":true}]}}],"type":"termList"},{"text":"3. Provide “transformer” types","anchor":"3-Provide-transformer-types","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"type":"text","text":" "},{"type":"text","text":"trees to\/from "},{"code":"Encodable","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}],"type":"paragraph"},{"inlineContent":[{"text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with ","type":"text"},{"type":"codeVoice","code":"Internal"},{"text":" to denote that they are","type":"text"},{"text":" ","type":"text"},{"text":"not intended for public use.","type":"text"}],"type":"paragraph"},{"type":"heading","level":4,"anchor":"Required-Protocols-Encoding","text":"Required Protocols (Encoding)"},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"type":"codeVoice","code":"Encodable"},{"text":" instances.","type":"text"}]}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","isActive":true}]}},{"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"String","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","isActive":true,"type":"reference"}]}}]},{"type":"heading","level":4,"anchor":"Required-Protocols-Decoding","text":"Required Protocols (Decoding)"},{"items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}],"type":"paragraph"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer"}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}}],"type":"termList"},{"text":"See\/Example","type":"heading","level":4,"anchor":"SeeExample"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","type":"reference","isActive":true},{"text":"\/","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform"}]}]}],"type":"unorderedList"},{"text":"4. Create an “Encoder” and a “Decoder”","type":"heading","level":3,"anchor":"4-Create-an-Encoder-and-a-Decoder"},{"type":"paragraph","inlineContent":[{"text":"The final step is to implement the public encoder and decoder by deriving from the base implementations.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Encoders are created in the following manner:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"]},{"type":"paragraph","inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}]},{"code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"kind":"article","abstract":[{"type":"text","text":"Learn how to implement new "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" data formats easily."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats"},"metadata":{"roleHeading":"Article","modules":[{"name":"PotentCodables"}],"title":"Implementing New Data Formats","role":"article"},"sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"type":"topic","abstract":[],"navigatorTitle":[{"text":"InternalValueParser","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalvalueparser","title":"InternalValueParser","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueParser"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"type":"text","text":" "},{"type":"text","text":"Swift\/Foundation primitives into instances of "},{"code":"Value","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/internalencodertransform","title":"InternalEncoderTransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalEncoderTransform"}],"navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","role":"symbol","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueStringifier"}],"role":"symbol","navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}],"title":"InternalValueStringifier","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/internalvaluestringifier"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoderTransform"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","type":"topic","kind":"symbol","title":"JSONDecoderTransform","abstract":[],"url":"\/documentation\/potentjson\/jsondecodertransform","navigatorTitle":[{"kind":"identifier","text":"JSONDecoderTransform"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONEncoderTransform"}],"abstract":[],"url":"\/documentation\/potentjson\/jsonencodertransform","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JSONEncoderTransform","kind":"identifier"}],"title":"JSONEncoderTransform"},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"type":"topic","abstract":[{"type":"text","text":"Polymorphic references tailored to your data."}],"url":"\/documentation\/potentcodables\/custom-references","title":"Custom References","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","kind":"article"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"type":"topic","role":"symbol","url":"\/documentation\/potentcbor\/cbor","abstract":[{"type":"text","text":"General CBOR value."}],"title":"CBOR","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBOR"}],"navigatorTitle":[{"text":"CBOR","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"url":"\/documentation\/potentcodables\/protocols","kind":"article","type":"topic","title":"Encoder\/Decoder Protocols","role":"article","abstract":[{"type":"text","text":"Details of all the protocols PotentCodables "},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":"s implement.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"url":"\/documentation\/potentcbor\/cborserialization","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBORSerialization"}],"navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}],"type":"topic","title":"CBORSerialization","role":"symbol","abstract":[{"type":"text","text":"Convenience API for serializing and deserialization CBOR items."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"navigatorTitle":[{"text":"JSON","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","url":"\/documentation\/potentjson\/json","abstract":[{"type":"text","text":"General JSON value."}],"role":"symbol","kind":"symbol","type":"topic","title":"JSON","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}]},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"title":"InternalDecoderTransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","role":"symbol","navigatorTitle":[{"text":"InternalDecoderTransform","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalDecoderTransform"}],"url":"\/documentation\/potentcodables\/internaldecodertransform","type":"topic","abstract":[{"text":"A decoder transform provides required functionality to unbox instances of","type":"text"},{"text":" ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" into Swift\/Foundation primitives."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/internalvalueserializer","title":"InternalValueSerializer","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalValueSerializer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalValueSerializer"}]},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"abstract":[{"text":"Utilities to simplify polymorphic encoding and decoding.","type":"text"}],"role":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","title":"Polymorphic Encoding & Decoding","url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","kind":"article"},"doc://PotentCodables/documentation/PotentCodables/Value":{"type":"topic","url":"\/documentation\/potentcodables\/value","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"}],"title":"Value","abstract":[{"type":"codeVoice","code":"Value"},{"text":"s are the intermediary representation that","type":"text"},{"type":"text","text":" "},{"text":"allows querying the structure in memory, decoding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it to a compatible "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" type, or serializing"},{"type":"text","text":" "},{"type":"text","text":"it to "},{"type":"codeVoice","code":"Data"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Value"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}],"kind":"symbol","url":"\/documentation\/potentcodables\/internalvaluedeserializer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueDeserializer"}],"role":"symbol","title":"InternalValueDeserializer","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","abstract":[]},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","role":"collection","url":"\/documentation\/potentcodables"}}}
{"metadata":{"modules":[{"name":"PotentCodables"}],"role":"article","roleHeading":"Article","title":"Implementing New Data Formats"},"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"title":"Advanced","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"generated":true,"anchor":"Advanced"}],"abstract":[{"text":"Learn how to implement new ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" data formats easily.","type":"text"}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing"},{"type":"text","text":" "},{"text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s "},{"type":"codeVoice","code":"Codable"},{"text":" ","type":"text"},{"type":"text","text":"framework."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following list of steps can be followed to easily implement a new serialization format."}]},{"type":"heading","level":3,"text":"1. Define a native value tree representation","anchor":"1-Define-a-native-value-tree-representation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"while CBOR uses ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true},{"text":". Examining any of the provided native value trees will reveal they closely mimic","type":"text"},{"type":"text","text":" "},{"text":"their serialized format.","type":"text"}]},{"type":"heading","level":4,"text":"Required Protocols","anchor":"Required-Protocols"},{"type":"termList","items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true}]},"definition":{"content":[{"inlineContent":[{"text":"The native value tree representation (usually an enum) ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"text":" implement the ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true},{"type":"text","text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree."}],"type":"paragraph"}]}}]},{"level":4,"text":"See\/Examples","anchor":"SeeExamples","type":"heading"},{"items":[{"definition":{"content":[{"inlineContent":[{"text":"The JSON native value tree is a great example of a full featured tree.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The CBOR native value tree is another great example of a full featured tree.","type":"text"}]}]}}],"type":"termList"},{"text":"2. Provide a “serialization” type","type":"heading","anchor":"2-Provide-a-serialization-type","level":3},{"type":"paragraph","inlineContent":[{"text":"The next step requires you to provide a serialization class that can serialize native value trees into their final","type":"text"},{"type":"text","text":" "},{"type":"text","text":"serialized representation and conversely deserialize the serialized representation into a native value tree."}]},{"text":"Required Protocols","level":4,"type":"heading","anchor":"Required-Protocols"},{"type":"paragraph","inlineContent":[{"text":"There are no required protocols for the serialization type to timplement because it will be used privately in the","type":"text"},{"text":" ","type":"text"},{"text":"encoder and decoder implementations.","type":"text"}]},{"text":"See\/Example","anchor":"SeeExample","level":4,"type":"heading"},{"items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"reference","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"type":"codeVoice","code":"JSON"},{"text":" values to\/from ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" values."}]}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The CBORSerialization type serializes ","type":"text"},{"type":"codeVoice","code":"CBOR"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}]}]}}],"type":"termList"},{"level":3,"anchor":"3-Provide-transformer-types","text":"3. Provide “transformer” types","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"type":"text","text":" "},{"text":"trees to\/from ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":". The good news here is that only the boxing and unboxing code is requried.","type":"text"}]},{"inlineContent":[{"text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with ","type":"text"},{"code":"Internal","type":"codeVoice"},{"type":"text","text":" to denote that they are"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}],"type":"paragraph"},{"level":4,"type":"heading","anchor":"Required-Protocols-Encoding","text":"Required Protocols (Encoding)"},{"items":[{"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","type":"reference"}]},"definition":{"content":[{"inlineContent":[{"text":"Provides the boxing of Swift primitives generated by ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" instances.","type":"text"}],"type":"paragraph"}]}},{"definition":{"content":[{"inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","isActive":true}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"String","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}}],"type":"termList"},{"type":"heading","level":4,"text":"Required Protocols (Decoding)","anchor":"Required-Protocols-Decoding"},{"items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}]}]}},{"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","type":"reference"}]},"definition":{"content":[{"inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"}]}}],"type":"termList"},{"type":"heading","text":"See\/Example","anchor":"SeeExample","level":4},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","type":"reference","isActive":true},{"text":"\/","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","isActive":true}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"4-Create-an-Encoder-and-a-Decoder","text":"4. Create an “Encoder” and a “Decoder”"},{"inlineContent":[{"text":"The final step is to implement the public encoder and decoder by deriving from the base implementations.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Encoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}]},{"type":"codeListing","code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"syntax":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"type":"topic","abstract":[],"url":"\/documentation\/potentjson\/jsonserialization","kind":"symbol","title":"JSONSerialization","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}]},"doc://PotentCodables/documentation/PotentCodables/Value":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"role":"symbol","title":"Value","kind":"symbol","url":"\/documentation\/potentcodables\/value","navigatorTitle":[{"text":"Value","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"Value"},{"type":"text","text":"s are the intermediary representation that"},{"type":"text","text":" "},{"type":"text","text":"allows querying the structure in memory, decoding"},{"text":" ","type":"text"},{"text":"it to a compatible ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" type, or serializing","type":"text"},{"text":" ","type":"text"},{"text":"it to ","type":"text"},{"code":"Data","type":"codeVoice"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueStringifier"}],"abstract":[],"kind":"symbol","url":"\/documentation\/potentcodables\/internalvaluestringifier","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","title":"InternalValueStringifier","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InternalValueStringifier"}]},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic","url":"\/documentation\/potentcodables","role":"collection","title":"PotentCodables"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"title":"CBORSerialization","kind":"symbol","type":"topic","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBORSerialization","kind":"identifier"}],"url":"\/documentation\/potentcbor\/cborserialization","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"type":"text","text":" "},{"text":"Swift\/Foundation primitives into instances of ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalEncoderTransform","kind":"identifier"}],"title":"InternalEncoderTransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","url":"\/documentation\/potentcodables\/internalencodertransform"},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"url":"\/documentation\/potentcodables\/internalvaluedeserializer","navigatorTitle":[{"text":"InternalValueDeserializer","kind":"identifier"}],"title":"InternalValueDeserializer","kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueDeserializer"}],"type":"topic","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"navigatorTitle":[{"text":"InternalValueSerializer","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","url":"\/documentation\/potentcodables\/internalvalueserializer","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalValueSerializer","kind":"identifier"}],"title":"InternalValueSerializer","abstract":[],"kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"type":"topic","abstract":[{"text":"General JSON value.","type":"text"}],"title":"JSON","kind":"symbol","url":"\/documentation\/potentjson\/json","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSON"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueParser"}],"title":"InternalValueParser","url":"\/documentation\/potentcodables\/internalvalueparser","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","abstract":[],"role":"symbol","type":"topic","navigatorTitle":[{"text":"InternalValueParser","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"title":"JSONDecoderTransform","role":"symbol","url":"\/documentation\/potentjson\/jsondecodertransform","type":"topic","navigatorTitle":[{"text":"JSONDecoderTransform","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONDecoderTransform","kind":"identifier"}],"abstract":[]},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","url":"\/documentation\/potentcodables\/custom-references","abstract":[{"text":"Polymorphic references tailored to your data.","type":"text"}],"type":"topic","role":"article","kind":"article","title":"Custom References"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"abstract":[],"title":"JSONEncoderTransform","type":"topic","kind":"symbol","url":"\/documentation\/potentjson\/jsonencodertransform","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","navigatorTitle":[{"kind":"identifier","text":"JSONEncoderTransform"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JSONEncoderTransform","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"kind":"symbol","url":"\/documentation\/potentcbor\/cbor","abstract":[{"type":"text","text":"General CBOR value."}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBOR"}],"type":"topic","navigatorTitle":[{"text":"CBOR","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","title":"CBOR"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"url":"\/documentation\/potentcodables\/internaldecodertransform","title":"InternalDecoderTransform","abstract":[{"text":"A decoder transform provides required functionality to unbox instances of","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" into Swift\/Foundation primitives."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"InternalDecoderTransform","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalDecoderTransform"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}],"type":"topic","role":"article","kind":"article","title":"Polymorphic Encoding & Decoding"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"title":"Encoder\/Decoder Protocols","abstract":[{"type":"text","text":"Details of all the protocols PotentCodables "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"text":"s implement.","type":"text"}],"kind":"article","type":"topic","url":"\/documentation\/potentcodables\/protocols","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","role":"article"}}}
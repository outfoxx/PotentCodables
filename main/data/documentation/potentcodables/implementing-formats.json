{"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and"},{"text":" ","type":"text"},{"text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" "},{"text":"framework.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following list of steps can be followed to easily implement a new serialization format.","type":"text"}]},{"text":"1. Define a native value tree representation","level":3,"type":"heading","anchor":"1-Define-a-native-value-tree-representation"},{"type":"paragraph","inlineContent":[{"text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"while CBOR uses "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR"},{"type":"text","text":". Examining any of the provided native value trees will reveal they closely mimic"},{"type":"text","text":" "},{"text":"their serialized format.","type":"text"}]},{"text":"Required Protocols","type":"heading","anchor":"Required-Protocols","level":4},{"items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The native value tree representation (usually an enum) "},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"text":" implement the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value"},{"type":"text","text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree."}]}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"reference"}]}}],"type":"termList"},{"text":"See\/Examples","anchor":"SeeExamples","type":"heading","level":4},{"items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSON native value tree is a great example of a full featured tree."}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference","isActive":true}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The CBOR native value tree is another great example of a full featured tree.","type":"text"}]}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","type":"reference"}]}}],"type":"termList"},{"text":"2. Provide a “serialization” type","level":3,"anchor":"2-Provide-a-serialization-type","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The next step requires you to provide a serialization class that can serialize native value trees into their final","type":"text"},{"type":"text","text":" "},{"text":"serialized representation and conversely deserialize the serialized representation into a native value tree.","type":"text"}]},{"text":"Required Protocols","anchor":"Required-Protocols","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"text":" ","type":"text"},{"type":"text","text":"encoder and decoder implementations."}],"type":"paragraph"},{"level":4,"anchor":"SeeExample","type":"heading","text":"See\/Example"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The JSONSerialization type serializes ","type":"text"},{"code":"JSON","type":"codeVoice"},{"text":" values to\/from ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values."}]}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","isActive":true}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","isActive":true}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"The CBORSerialization type serializes "},{"code":"CBOR","type":"codeVoice"},{"text":" values to\/from ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}],"type":"paragraph"}]}}]},{"text":"3. Provide “transformer” types","anchor":"3-Provide-transformer-types","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value","type":"text"},{"type":"text","text":" "},{"text":"trees to\/from ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":". The good news here is that only the boxing and unboxing code is requried."}]},{"inlineContent":[{"type":"text","text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with "},{"type":"codeVoice","code":"Internal"},{"text":" to denote that they are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}],"type":"paragraph"},{"type":"heading","anchor":"Required-Protocols-Encoding","text":"Required Protocols (Encoding)","level":4},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" instances."}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","type":"reference","isActive":true}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","type":"reference","isActive":true}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}}]},{"level":4,"anchor":"Required-Protocols-Decoding","type":"heading","text":"Required Protocols (Decoding)"},{"items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"Provides the unboxing of native value tree types."}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true}]}},{"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","isActive":true,"type":"reference"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]}}],"type":"termList"},{"text":"See\/Example","type":"heading","level":4,"anchor":"SeeExample"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","isActive":true},{"type":"text","text":"\/"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","type":"reference","isActive":true}],"type":"paragraph"}]}]},{"level":3,"anchor":"4-Create-an-Encoder-and-a-Decoder","text":"4. Create an “Encoder” and a “Decoder”","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}]},{"type":"paragraph","inlineContent":[{"text":"Encoders are created in the following manner:","type":"text"}]},{"syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"],"type":"codeListing"},{"inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"type":"codeListing","syntax":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"metadata":{"roleHeading":"Article","modules":[{"name":"PotentCodables"}],"role":"article","title":"Implementing New Data Formats"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"title":"Advanced","anchor":"Advanced"}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats","interfaceLanguage":"swift"},"kind":"article","abstract":[{"type":"text","text":"Learn how to implement new "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" data formats easily."}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"abstract":[],"type":"topic","kind":"symbol","title":"JSONDecoderTransform","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","navigatorTitle":[{"kind":"identifier","text":"JSONDecoderTransform"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONDecoderTransform","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsondecodertransform"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBOR","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"title":"CBOR","url":"\/documentation\/potentcbor\/cbor","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","type":"topic","abstract":[{"text":"General CBOR value.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"url":"\/documentation\/potentcodables\/custom-references","type":"topic","abstract":[{"type":"text","text":"Polymorphic references tailored to your data."}],"role":"article","kind":"article","title":"Custom References","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"url":"\/documentation\/potentcodables\/internalvaluestringifier","type":"topic","title":"InternalValueStringifier","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueStringifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"title":"CBORSerialization","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBORSerialization","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentcbor\/cborserialization","navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}],"type":"topic","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","abstract":[],"role":"symbol","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalDecoderTransform"}],"url":"\/documentation\/potentcodables\/internaldecodertransform","navigatorTitle":[{"kind":"identifier","text":"InternalDecoderTransform"}],"abstract":[{"type":"text","text":"A decoder transform provides required functionality to unbox instances of"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" into Swift\/Foundation primitives."}],"type":"topic","role":"symbol","kind":"symbol","title":"InternalDecoderTransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform"},"doc://PotentCodables/documentation/PotentCodables/Value":{"url":"\/documentation\/potentcodables\/value","type":"topic","title":"Value","abstract":[{"type":"codeVoice","code":"Value"},{"type":"text","text":"s are the intermediary representation that"},{"type":"text","text":" "},{"type":"text","text":"allows querying the structure in memory, decoding"},{"text":" ","type":"text"},{"type":"text","text":"it to a compatible "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" type, or serializing"},{"type":"text","text":" "},{"type":"text","text":"it to "},{"type":"codeVoice","code":"Data"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Value"}]},"doc://PotentCodables/documentation/PotentJSON/JSON":{"title":"JSON","url":"\/documentation\/potentjson\/json","kind":"symbol","abstract":[{"text":"General JSON value.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","role":"symbol","navigatorTitle":[{"text":"JSON","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"url":"\/documentation\/potentcodables\/internalvaluedeserializer","type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueDeserializer"}],"kind":"symbol","title":"InternalValueDeserializer","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}]},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"title":"Encoder\/Decoder Protocols","url":"\/documentation\/potentcodables\/protocols","kind":"article","type":"topic","abstract":[{"text":"Details of all the protocols PotentCodables ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s implement."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","role":"article"},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalEncoderTransform","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"abstract":[{"type":"text","text":"An encoder transform provides required functionality to box instances of"},{"type":"text","text":" "},{"text":"Swift\/Foundation primitives into instances of ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":"."}],"url":"\/documentation\/potentcodables\/internalencodertransform","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","title":"InternalEncoderTransform","type":"topic"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","url":"\/documentation\/potentcodables","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"type":"topic","role":"collection"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JSONEncoderTransform","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"JSONEncoderTransform","kind":"identifier"}],"abstract":[],"url":"\/documentation\/potentjson\/jsonencodertransform","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","title":"JSONEncoderTransform","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","type":"topic","title":"InternalValueParser","url":"\/documentation\/potentcodables\/internalvalueparser","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueParser"}],"navigatorTitle":[{"kind":"identifier","text":"InternalValueParser"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalValueSerializer","kind":"identifier"}],"abstract":[],"url":"\/documentation\/potentcodables\/internalvalueserializer","navigatorTitle":[{"kind":"identifier","text":"InternalValueSerializer"}],"type":"topic","title":"InternalValueSerializer"},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","kind":"article","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","role":"article","title":"Polymorphic Encoding & Decoding"}}}
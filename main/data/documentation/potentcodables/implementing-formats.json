{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"anchor":"Advanced","title":"Advanced"}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats"},"sections":[],"abstract":[{"text":"Learn how to implement new ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" data formats easily.","type":"text"}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and"},{"text":" ","type":"text"},{"text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"framework."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following list of steps can be followed to easily implement a new serialization format."}]},{"level":3,"text":"1. Define a native value tree representation","type":"heading","anchor":"1-Define-a-native-value-tree-representation"},{"type":"paragraph","inlineContent":[{"text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"while CBOR uses "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true,"type":"reference"},{"type":"text","text":". Examining any of the provided native value trees will reveal they closely mimic"},{"type":"text","text":" "},{"text":"their serialized format.","type":"text"}]},{"level":4,"text":"Required Protocols","anchor":"Required-Protocols","type":"heading"},{"items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"text":"The native value tree representation (usually an enum) ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"strong"},{"type":"text","text":" implement the "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"reference","isActive":true},{"text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree.","type":"text"}],"type":"paragraph"}]}}],"type":"termList"},{"level":4,"text":"See\/Examples","type":"heading","anchor":"SeeExamples"},{"items":[{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSON native value tree is a great example of a full featured tree."}]}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The CBOR native value tree is another great example of a full featured tree."}]}]}}],"type":"termList"},{"text":"2. Provide a “serialization” type","anchor":"2-Provide-a-serialization-type","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"The next step requires you to provide a serialization class that can serialize native value trees into their final"},{"text":" ","type":"text"},{"type":"text","text":"serialized representation and conversely deserialize the serialized representation into a native value tree."}],"type":"paragraph"},{"type":"heading","anchor":"Required-Protocols","level":4,"text":"Required Protocols"},{"inlineContent":[{"type":"text","text":"There are no required protocols for the serialization type to timplement because it will be used privately in the"},{"type":"text","text":" "},{"type":"text","text":"encoder and decoder implementations."}],"type":"paragraph"},{"text":"See\/Example","type":"heading","anchor":"SeeExample","level":4},{"type":"termList","items":[{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"code":"JSON","type":"codeVoice"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" values."}],"type":"paragraph"}]}},{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The CBORSerialization type serializes "},{"type":"codeVoice","code":"CBOR"},{"type":"text","text":" values to\/from "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","type":"reference","isActive":true}]}}]},{"type":"heading","text":"3. Provide “transformer” types","level":3,"anchor":"3-Provide-transformer-types"},{"type":"paragraph","inlineContent":[{"text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"trees to\/from "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":"\/"},{"code":"Decodable","type":"codeVoice"},{"text":". The good news here is that only the boxing and unboxing code is requried.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with ","type":"text"},{"code":"Internal","type":"codeVoice"},{"text":" to denote that they are","type":"text"},{"text":" ","type":"text"},{"text":"not intended for public use.","type":"text"}]},{"level":4,"text":"Required Protocols (Encoding)","type":"heading","anchor":"Required-Protocols-Encoding"},{"items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"code":"Encodable","type":"codeVoice"},{"text":" instances.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","isActive":true}]}},{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","isActive":true,"type":"reference"}]}},{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]}}],"type":"termList"},{"level":4,"type":"heading","anchor":"Required-Protocols-Decoding","text":"Required Protocols (Decoding)"},{"type":"termList","items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"Provides the unboxing of native value tree types.","type":"text"}]}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","isActive":true,"type":"reference"}]}},{"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"code":"Data","type":"codeVoice"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]}},{"definition":{"content":[{"inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser"}]}}]},{"text":"See\/Example","anchor":"SeeExample","level":4,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","isActive":true},{"text":"\/","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform"}],"type":"paragraph"}]}]},{"text":"4. Create an “Encoder” and a “Decoder”","type":"heading","level":3,"anchor":"4-Create-an-Encoder-and-a-Decoder"},{"inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Encoders are created in the following manner:","type":"text"}]},{"code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Decoders are created in the following manner:","type":"text"}]},{"syntax":"swift","code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"type":"codeListing"}],"kind":"content"}],"metadata":{"roleHeading":"Article","modules":[{"name":"PotentCodables"}],"title":"Implementing New Data Formats","role":"article"},"references":{"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"abstract":[{"type":"text","text":"Polymorphic references tailored to your data."}],"role":"article","type":"topic","url":"\/documentation\/potentcodables\/custom-references","kind":"article","title":"Custom References","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","type":"topic","url":"\/documentation\/potentcbor\/cbor","title":"CBOR","kind":"symbol","navigatorTitle":[{"text":"CBOR","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBOR","kind":"identifier"}],"abstract":[{"text":"General CBOR value.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"title":"InternalValueDeserializer","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","type":"topic","url":"\/documentation\/potentcodables\/internalvaluedeserializer","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueDeserializer"}]},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"navigatorTitle":[{"text":"InternalDecoderTransform","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internaldecodertransform","kind":"symbol","title":"InternalDecoderTransform","type":"topic","abstract":[{"text":"A decoder transform provides required functionality to unbox instances of","type":"text"},{"type":"text","text":" "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" into Swift\/Foundation primitives."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalDecoderTransform"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform"},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalValueStringifier","kind":"identifier"}],"title":"InternalValueStringifier","url":"\/documentation\/potentcodables\/internalvaluestringifier","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"abstract":[{"text":"Details of all the protocols PotentCodables ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"s implement."}],"kind":"article","type":"topic","url":"\/documentation\/potentcodables\/protocols","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","role":"article","title":"Encoder\/Decoder Protocols"},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","type":"topic","kind":"symbol","title":"InternalValueSerializer","navigatorTitle":[{"text":"InternalValueSerializer","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalvalueserializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InternalValueSerializer"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"url":"\/documentation\/potentcbor\/cborserialization","title":"CBORSerialization","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"CBORSerialization","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}],"navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSON":{"role":"symbol","title":"JSON","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"JSON","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"JSON","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"General JSON value.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","url":"\/documentation\/potentjson\/json"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","kind":"symbol","role":"symbol","abstract":[],"url":"\/documentation\/potentjson\/jsonencodertransform","navigatorTitle":[{"kind":"identifier","text":"JSONEncoderTransform"}],"title":"JSONEncoderTransform","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONEncoderTransform"}]},"doc://PotentCodables/documentation/PotentCodables/Value":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"role":"symbol","url":"\/documentation\/potentcodables\/value","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"topic","abstract":[{"type":"codeVoice","code":"Value"},{"text":"s are the intermediary representation that","type":"text"},{"type":"text","text":" "},{"type":"text","text":"allows querying the structure in memory, decoding"},{"text":" ","type":"text"},{"type":"text","text":"it to a compatible "},{"type":"codeVoice","code":"Decodable"},{"text":" type, or serializing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it to "},{"code":"Data","type":"codeVoice"}],"title":"Value","navigatorTitle":[{"text":"Value","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"type":"topic","url":"\/documentation\/potentjson\/jsonserialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","title":"JSONSerialization","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"title":"Polymorphic Encoding & Decoding","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","kind":"article","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}],"url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","role":"article"},"doc://PotentCodables/documentation/PotentCodables":{"title":"PotentCodables","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"url":"\/documentation\/potentjson\/jsondecodertransform","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoderTransform","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","kind":"symbol","title":"JSONDecoderTransform","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONDecoderTransform"}]},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"role":"symbol","kind":"symbol","url":"\/documentation\/potentcodables\/internalencodertransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InternalEncoderTransform","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"title":"InternalEncoderTransform","abstract":[{"text":"An encoder transform provides required functionality to box instances of","type":"text"},{"type":"text","text":" "},{"text":"Swift\/Foundation primitives into instances of ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":"."}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"abstract":[],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","title":"InternalValueParser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"InternalValueParser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalValueParser"}],"url":"\/documentation\/potentcodables\/internalvalueparser"}}}
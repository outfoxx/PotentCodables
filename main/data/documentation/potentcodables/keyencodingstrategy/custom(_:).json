{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyEncodingStrategy\/custom(_:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyencodingstrategy\/custom(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"codingPath"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey"},{"kind":"text","text":")"}],"languages":["swift"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyEncodingStrategy"]]},"abstract":[{"text":"Provide a custom conversion to the encoded key from the keys specified","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by the encoded types."},{"text":" ","type":"text"},{"text":"The full path to the current encoding position is provided for context","type":"text"},{"type":"text","text":" "},{"text":"(in case you need to locate this key within the payload). The returned","type":"text"},{"text":" ","type":"text"},{"text":"key is used in place of the last component in the coding path before","type":"text"},{"text":" ","type":"text"},{"text":"encoding.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the result of the conversion is a duplicate key, then only one value"},{"text":" ","type":"text"},{"text":"will be present in the result.","type":"text"}],"metadata":{"symbolKind":"case","modules":[{"name":"PotentCodables"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"custom","kind":"identifier"},{"kind":"text","text":"(("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"codingPath"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"text":"]) -> ","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","kind":"typeIdentifier","text":"CodingKey"},{"kind":"text","text":")"}],"roleHeading":"Case","title":"KeyEncodingStrategy.custom(_:)","role":"symbol","externalID":"s:14PotentCodables19KeyEncodingStrategyO6customyACs06CodingC0_pSaysAE_pGccACmF"},"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"url":"\/documentation\/potentcodables","title":"PotentCodables","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/KeyEncodingStrategy":{"url":"\/documentation\/potentcodables\/keyencodingstrategy","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"KeyEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"KeyEncodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before encoding."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyEncodingStrategy","title":"KeyEncodingStrategy"},"doc://PotentCodables/documentation/PotentCodables/KeyEncodingStrategy/custom(_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyEncodingStrategy\/custom(_:)","url":"\/documentation\/potentcodables\/keyencodingstrategy\/custom(_:)","type":"topic","kind":"symbol","title":"KeyEncodingStrategy.custom(_:)","abstract":[{"text":"Provide a custom conversion to the encoded key from the keys specified","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by the encoded types."},{"type":"text","text":" "},{"text":"The full path to the current encoding position is provided for context","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(in case you need to locate this key within the payload). The returned"},{"text":" ","type":"text"},{"type":"text","text":"key is used in place of the last component in the coding path before"},{"text":" ","type":"text"},{"type":"text","text":"encoding."},{"type":"text","text":" "},{"text":"If the result of the conversion is a duplicate key, then only one value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will be present in the result."}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"codingPath"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"kind":"text","text":"]) -> "},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}
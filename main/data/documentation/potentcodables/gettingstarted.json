{"seeAlsoSections":[{"anchor":"Usage","title":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"generated":true}],"kind":"article","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"type":"strong","inlineContent":[{"text":"JSON","type":"text"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"text":"YAML","type":"text"}]},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"text":"CBOR","type":"text"}]},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"Getting Started with Potent Codables","roleHeading":"Article","role":"article","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s for the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" framework. Additionally all"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s provide ehanched capabilities to make working with data formats easier and more"},{"text":" ","type":"text"},{"text":"powerful.","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"text":"Standard Encoders\/Decoders","anchor":"Standard-EncodersDecoders"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"type":"codeVoice","code":"Encoder"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" APIs as you would for"},{"type":"text","text":" "},{"text":"any other ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard "},{"type":"codeVoice","code":"JSONEncoder"},{"text":". You just need","type":"text"},{"text":" ","type":"text"},{"text":"to use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"}]},{"code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Produces the following YAML:","type":"text"}]},{"code":["---","name: V8","cylinders: 8","..."],"syntax":"yaml","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"]},{"name":"Note","content":[{"inlineContent":[{"text":"All provided Encoders and Decoders from a ","type":"text"},{"code":"default","type":"codeVoice"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"text":" ","type":"text"},{"type":"text","text":"with default options. These are used througout the documentation."}],"type":"paragraph"}],"style":"note","type":"aside"},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"text":"You may have noticed you can use either ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" to reference"},{"type":"text","text":" "},{"type":"text","text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with"},{"type":"text","text":" "},{"text":"other codable frameworks encoders & decoders like Foundation’s ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}]}],"type":"aside","name":"Tip"},{"type":"heading","anchor":"EcodingDecoding-from-Strings","level":3,"text":"Ecoding\/Decoding from Strings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},{"text":" can encode directly to and from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Strings in addition to the standard "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" to "},{"code":"String","type":"codeVoice"},{"type":"text","text":" in"},{"type":"text","text":" "},{"type":"text","text":"many cases."}]},{"type":"paragraph","inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" support via the following protocols.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","type":"reference","isActive":true}]}]}],"type":"unorderedList"},{"anchor":"EcodingDecoding-from-Tree-values","text":"Ecoding\/Decoding from Tree values.","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are Swift values that represent the natively encoded data. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"},{"text":" to learn more about tree values.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}]},{"type":"paragraph","inlineContent":[{"text":"Reading our previous example ","type":"text"},{"code":"Engine","type":"codeVoice"},{"text":" struct from a ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"},{"text":" tree value is easy.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"]},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables data formats provided support for tree values via the following protocols.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"reference","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"title":"DecodesFromTree","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromtree","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"kind":"symbol","type":"topic","title":"PotentJSON","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","title":"PotentCodables","role":"collection","type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","kind":"article","type":"topic","abstract":[{"type":"text","text":"What are “tree values”?"}],"url":"\/documentation\/potentcodables\/treevalues","title":"Tree Values","role":"article"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"title":"Data Formats","url":"\/documentation\/potentcodables\/data-formats","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","role":"article","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"kind":"article","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","title":"AnyValue","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"url":"\/documentation\/potentcodables\/anyvalue","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" value that allows encoding\/decoding values of any type or structure.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"role":"symbol","title":"EncodesToString","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EncodesToString"}],"url":"\/documentation\/potentcodables\/encodestostring","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToString"}],"abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"text":" ","type":"text"},{"type":"text","text":"and encoding to data using a default string encoding."}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into YAML values."}],"kind":"symbol","url":"\/documentation\/potentyaml\/yamlencoder","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"title":"YAMLEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"YAMLEncoder","kind":"identifier"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"title":"Using AnyValue","type":"topic","url":"\/documentation\/potentcodables\/using-anyvalue","role":"article","kind":"article","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"title":"JSON","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","kind":"symbol","url":"\/documentation\/potentjson\/json","abstract":[{"type":"text","text":"General JSON value."}],"navigatorTitle":[{"text":"JSON","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"role":"symbol","kind":"symbol","url":"\/documentation\/potentcodables\/encodestotree","title":"EncodesToTree","abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EncodesToTree","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodesFromString","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"text":"data using a string encoding.","type":"text"}],"type":"topic","url":"\/documentation\/potentcodables\/decodesfromstring","title":"DecodesFromString","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLDecoder"}],"navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yamldecoder","abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference","isActive":true},{"text":" facilitates the decoding of YAML into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"title":"YAMLDecoder"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"title":"YAML.Encoder","role":"symbol","abstract":[],"kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"}],"navigatorTitle":[{"kind":"identifier","text":"Encoder"}],"url":"\/documentation\/potentyaml\/yaml\/encoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder"},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","title":"PotentYAML","url":"\/documentation\/potentyaml","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"type":"topic","role":"collection"}}}
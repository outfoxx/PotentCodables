{"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"seeAlsoSections":[{"generated":true,"anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage"}],"metadata":{"role":"article","modules":[{"name":"PotentCodables"}],"title":"Getting Started with Potent Codables","roleHeading":"Article"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables provide standard "},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"text":"s for the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" framework. Additionally all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"s provide ehanched capabilities to make working with data formats easier and more"},{"type":"text","text":" "},{"text":"powerful.","type":"text"}]},{"text":"Standard Encoders\/Decoders","level":3,"anchor":"Standard-EncodersDecoders","type":"heading"},{"inlineContent":[{"text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only","type":"text"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" and "},{"code":"Decoder","type":"codeVoice"},{"text":" APIs as you would for","type":"text"},{"text":" ","type":"text"},{"text":"any other ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" framework."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"text":". You just need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"reference"}]},{"type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Produces the following YAML:"}],"type":"paragraph"},{"type":"codeListing","syntax":"yaml","code":["---","name: V8","cylinders: 8","..."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference"},{"type":"text","text":"."}]},{"code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"],"syntax":"swift","type":"codeListing"},{"style":"note","content":[{"inlineContent":[{"text":"All provided Encoders and Decoders from a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"type":"text","text":"with default options. These are used througout the documentation."}],"type":"paragraph"}],"name":"Note","type":"aside"},{"style":"tip","type":"aside","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You may have noticed you can use either "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","type":"reference","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" to reference"},{"text":" ","type":"text"},{"text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with","type":"text"},{"type":"text","text":" "},{"text":"other codable frameworks encoders & decoders like Foundation’s ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}]}]},{"type":"heading","level":3,"text":"Ecoding\/Decoding from Strings","anchor":"EcodingDecoding-from-Strings"},{"inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","isActive":true,"type":"reference"},{"type":"text","text":" can encode directly to and from"},{"text":" ","type":"text"},{"text":"Strings in addition to the standard ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"text":" in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"many cases."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}]},{"code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All of PotentCodables text based formats provided "},{"code":"String","type":"codeVoice"},{"type":"text","text":" support via the following protocols."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"EcodingDecoding-from-Tree-values","text":"Ecoding\/Decoding from Tree values."},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"text":" ","type":"text"},{"type":"text","text":"are Swift values that represent the natively encoded data. See "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"reference"},{"text":" to learn more about tree values.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"type":"codeVoice","code":"Engine"},{"type":"text","text":" struct from a "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference","isActive":true},{"text":" tree value is easy.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"]},{"inlineContent":[{"type":"text","text":"All PotentCodables data formats provided support for tree values via the following protocols."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"reference","isActive":true}],"type":"paragraph"}]}]}]}],"abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"inlineContent":[{"text":"JSON","type":"text"}],"type":"strong"},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"CBOR"}]},{"type":"text","text":" & "},{"inlineContent":[{"type":"text","text":"ASN.1"}],"type":"strong"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLDecoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"url":"\/documentation\/potentyaml\/yamldecoder","kind":"symbol","title":"YAMLDecoder","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"kind":"symbol","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","url":"\/documentation\/potentcodables\/decodesfromtree","role":"symbol","title":"DecodesFromTree","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DecodesFromTree","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSON":{"kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/json","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","title":"JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"text":"General JSON value.","type":"text"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into YAML values."}],"title":"YAMLEncoder","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"role":"symbol","abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"text":" ","type":"text"},{"text":"and encoding to data using a default string encoding.","type":"text"}],"title":"EncodesToString","navigatorTitle":[{"kind":"identifier","text":"EncodesToString"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EncodesToString","kind":"identifier"}],"url":"\/documentation\/potentcodables\/encodestostring","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AnyValue","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"url":"\/documentation\/potentcodables\/anyvalue"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"title":"Using AnyValue","kind":"article","role":"article","url":"\/documentation\/potentcodables\/using-anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","type":"topic","abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true}]},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"url":"\/documentation\/potentyaml\/yaml\/encoder","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Encoder"}],"role":"symbol","kind":"symbol","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","navigatorTitle":[{"kind":"identifier","text":"Encoder"}],"title":"YAML.Encoder","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"role":"article","abstract":[{"text":"What are “tree values”?","type":"text"}],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"topic","url":"\/documentation\/potentcodables\/treevalues","title":"Tree Values"},"doc://PotentCodables/documentation/PotentYAML":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"url":"\/documentation\/potentyaml","kind":"symbol","type":"topic","role":"collection","title":"PotentYAML"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToTree"}],"title":"EncodesToTree","url":"\/documentation\/potentcodables\/encodestotree","abstract":[{"text":"All encoders support encoding to their native values.","type":"text"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","navigatorTitle":[{"text":"EncodesToTree","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"role":"symbol","title":"DecodesFromString","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromString","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromstring","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","title":"Data Formats","url":"\/documentation\/potentcodables\/data-formats","role":"article","kind":"article","type":"topic","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}]},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","url":"\/documentation\/potentjson","type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}]}}}
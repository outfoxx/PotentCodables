{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Article","modules":[{"name":"PotentCodables"}],"role":"article","title":"Getting Started with Potent Codables"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"kind":"article","abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"text":"YAML","type":"text"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"CBOR","type":"text"}],"type":"strong"},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"text":".","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Usage","anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"code":"Encoder","type":"codeVoice"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"text":"s for the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" framework. Additionally all","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":"s provide ehanched capabilities to make working with data formats easier and more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"powerful."}],"type":"paragraph"},{"level":3,"anchor":"Standard-EncodersDecoders","text":"Standard Encoders\/Decoders","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Decoder"},{"text":" APIs as you would for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any other "},{"type":"codeVoice","code":"Codable"},{"text":" framework.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard "},{"code":"JSONEncoder","type":"codeVoice"},{"text":". You just need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true,"type":"reference"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"inlineContent":[{"text":"Produces the following YAML:","type":"text"}],"type":"paragraph"},{"code":["---","name: V8","cylinders: 8","..."],"syntax":"yaml","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference","isActive":true},{"type":"text","text":"."}]},{"syntax":"swift","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"text":"All provided Encoders and Decoders from a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"type":"text","text":"with default options. These are used througout the documentation."}]}],"type":"aside","name":"Note","style":"note"},{"name":"Tip","type":"aside","content":[{"inlineContent":[{"type":"text","text":"You may have noticed you can use either "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" to reference"},{"type":"text","text":" "},{"text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"tip"},{"anchor":"EcodingDecoding-from-Strings","type":"heading","level":3,"text":"Ecoding\/Decoding from Strings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","isActive":true},{"type":"text","text":" can encode directly to and from"},{"type":"text","text":" "},{"text":"Strings in addition to the standard ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" to "},{"code":"String","type":"codeVoice"},{"type":"text","text":" in"},{"text":" ","type":"text"},{"type":"text","text":"many cases."}]},{"type":"paragraph","inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"inlineContent":[{"type":"text","text":"All of PotentCodables text based formats provided "},{"type":"codeVoice","code":"String"},{"text":" support via the following protocols.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true,"type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"}]}]}]},{"anchor":"EcodingDecoding-from-Tree-values","type":"heading","text":"Ecoding\/Decoding from Tree values.","level":3},{"type":"paragraph","inlineContent":[{"text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values","type":"text"},{"text":" ","type":"text"},{"text":"are Swift values that represent the natively encoded data. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","isActive":true},{"text":" to learn more about tree values.","type":"text"}]},{"inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"type":"codeVoice","code":"Engine"},{"type":"text","text":" struct from a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},{"text":" tree value is easy.","type":"text"}]},{"type":"codeListing","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"],"syntax":"swift"},{"inlineContent":[{"text":"All PotentCodables data formats provided support for tree values via the following protocols.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","type":"reference"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"references":{"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"type":"topic","navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"title":"DecodesFromString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","role":"symbol","kind":"symbol","url":"\/documentation\/potentcodables\/decodesfromstring","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromString","kind":"identifier"}],"abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"type":"text","text":" "},{"type":"text","text":"data using a string encoding."}]},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"type":"topic","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","role":"article","title":"Using AnyValue","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference","isActive":true}],"url":"\/documentation\/potentcodables\/using-anyvalue"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"title":"EncodesToTree","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"url":"\/documentation\/potentcodables\/encodestotree","role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EncodesToTree","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"title":"Tree Values","role":"article","kind":"article","url":"\/documentation\/potentcodables\/treevalues","type":"topic","abstract":[{"text":"What are “tree values”?","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"title":"YAMLDecoder","navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","url":"\/documentation\/potentyaml\/yamldecoder","kind":"symbol","type":"topic","role":"symbol","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"text":" facilitates the decoding of YAML into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}]},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"type":"topic","url":"\/documentation\/potentyaml","title":"PotentYAML","role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"abstract":[{"text":"All data formats provided by PotentCodables","type":"text"}],"role":"article","type":"topic","title":"Data Formats","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","url":"\/documentation\/potentcodables\/data-formats"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"title":"AnyValue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"topic","url":"\/documentation\/potentcodables\/anyvalue","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyValue"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"role":"symbol","navigatorTitle":[{"text":"AnyValue","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","type":"topic","title":"YAML.Encoder","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yaml\/encoder","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"title":"YAMLEncoder","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLEncoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","url":"\/documentation\/potentyaml\/yamlencoder","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"abstract":[{"text":"All encoders support decoding from their native values.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","title":"DecodesFromTree","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DecodesFromTree","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromtree","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"title":"PotentJSON","type":"topic"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","url":"\/documentation\/potentcodables","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"type":"topic","role":"collection"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"role":"symbol","navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","abstract":[{"text":"Encoders that target text formats support encoding to strings","type":"text"},{"text":" ","type":"text"},{"text":"and encoding to data using a default string encoding.","type":"text"}],"url":"\/documentation\/potentcodables\/encodestostring","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToString"}],"title":"EncodesToString","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"title":"JSON","url":"\/documentation\/potentjson\/json","kind":"symbol","abstract":[{"text":"General JSON value.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","role":"symbol","navigatorTitle":[{"text":"JSON","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}]}}}
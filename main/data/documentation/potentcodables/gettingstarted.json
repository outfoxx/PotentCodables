{"kind":"article","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"s for the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" framework. Additionally all"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"text":"s provide ehanched capabilities to make working with data formats easier and more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"powerful."}]},{"type":"heading","text":"Standard Encoders\/Decoders","anchor":"Standard-EncodersDecoders","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"type":"codeVoice","code":"Encoder"},{"text":" and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"text":" APIs as you would for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any other "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" framework."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard "},{"type":"codeVoice","code":"JSONEncoder"},{"text":". You just need","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true}]},{"code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Produces the following YAML:"}]},{"syntax":"yaml","type":"codeListing","code":["---","name: V8","cylinders: 8","..."]},{"type":"paragraph","inlineContent":[{"text":"Similarly, to decode the YAML produced in the previous example you only need to use ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"codeListing","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"],"syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All provided Encoders and Decoders from a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"text":"with default options. These are used througout the documentation.","type":"text"}]}],"name":"Note","type":"aside","style":"note"},{"style":"tip","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"You may have noticed you can use either ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" to reference"},{"text":" ","type":"text"},{"type":"text","text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with"},{"type":"text","text":" "},{"text":"other codable frameworks encoders & decoders like Foundation’s ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}]}],"name":"Tip"},{"anchor":"EcodingDecoding-from-Strings","text":"Ecoding\/Decoding from Strings","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","type":"reference","isActive":true},{"type":"text","text":" can encode directly to and from"},{"type":"text","text":" "},{"text":"Strings in addition to the standard ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" encoding; this can save you the hassle of converting ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" to "},{"code":"String","type":"codeVoice"},{"text":" in","type":"text"},{"text":" ","type":"text"},{"text":"many cases.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" support via the following protocols."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString"}]}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","type":"reference"}],"type":"paragraph"}]}]},{"anchor":"EcodingDecoding-from-Tree-values","type":"heading","text":"Ecoding\/Decoding from Tree values.","level":3},{"inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"type":"text","text":" "},{"text":"are Swift values that represent the natively encoded data. See ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"reference","isActive":true},{"text":" to learn more about tree values.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}]},{"inlineContent":[{"text":"Reading our previous example ","type":"text"},{"type":"codeVoice","code":"Engine"},{"text":" struct from a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference"},{"text":" tree value is easy.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"]},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables data formats provided support for tree values via the following protocols.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"}]}]}]}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"PotentCodables"}],"roleHeading":"Article","title":"Getting Started with Potent Codables","role":"article"},"seeAlsoSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"generated":true,"anchor":"Usage","title":"Usage"}],"abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"inlineContent":[{"text":"JSON","type":"text"}],"type":"strong"},{"text":", ","type":"text"},{"inlineContent":[{"text":"YAML","type":"text"}],"type":"strong"},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"text":"CBOR","type":"text"}]},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"type":"text","text":"."}],"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"url":"\/documentation\/potentcodables","title":"PotentCodables","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentYAML":{"type":"topic","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","role":"collection","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"url":"\/documentation\/potentjson\/json","role":"symbol","type":"topic","title":"JSON","kind":"symbol","abstract":[{"type":"text","text":"General JSON value."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","navigatorTitle":[{"text":"JSON","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"title":"DecodesFromString","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DecodesFromString","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"text":" ","type":"text"},{"text":"data using a string encoding.","type":"text"}],"url":"\/documentation\/potentcodables\/decodesfromstring"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"role":"symbol","title":"EncodesToString","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToString"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"type":"text","text":" "},{"type":"text","text":"and encoding to data using a default string encoding."}],"navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"url":"\/documentation\/potentcodables\/encodestostring"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Encoder"}],"title":"YAML.Encoder","type":"topic","url":"\/documentation\/potentyaml\/yaml\/encoder","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Encoder"}]},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"}],"title":"Using AnyValue","kind":"article","type":"topic","role":"article","url":"\/documentation\/potentcodables\/using-anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","title":"DecodesFromTree","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"url":"\/documentation\/potentcodables\/decodesfromtree"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"title":"EncodesToTree","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToTree"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"EncodesToTree","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","abstract":[{"text":"All encoders support encoding to their native values.","type":"text"}],"url":"\/documentation\/potentcodables\/encodestotree"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"url":"\/documentation\/potentyaml\/yamldecoder","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLDecoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"type":"topic","title":"YAMLDecoder","abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference","isActive":true},{"text":" facilitates the decoding of YAML into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}]},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"abstract":[{"text":"What are “tree values”?","type":"text"}],"title":"Tree Values","type":"topic","kind":"article","role":"article","url":"\/documentation\/potentcodables\/treevalues","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"url":"\/documentation\/potentyaml\/yamlencoder","role":"symbol","type":"topic","title":"YAMLEncoder","kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into YAML values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLEncoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"role":"article","title":"Data Formats","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","kind":"article","type":"topic","abstract":[{"text":"All data formats provided by PotentCodables","type":"text"}],"url":"\/documentation\/potentcodables\/data-formats"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","role":"collection","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"url":"\/documentation\/potentcodables\/anyvalue","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"topic","navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"title":"AnyValue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}]}}}
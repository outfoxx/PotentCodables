{"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables provide standard "},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"s for the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" framework. Additionally all","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":"s provide ehanched capabilities to make working with data formats easier and more","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"powerful."}]},{"type":"heading","text":"Standard Encoders\/Decoders","level":3,"anchor":"Standard-EncodersDecoders"},{"inlineContent":[{"text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only","type":"text"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"code":"Encoder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"text":" APIs as you would for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any other "},{"code":"Codable","type":"codeVoice"},{"text":" framework.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"text":". You just need","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true,"type":"reference"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"Produces the following YAML:","type":"text"}]},{"syntax":"yaml","type":"codeListing","code":["---","name: V8","cylinders: 8","..."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":"."}]},{"type":"codeListing","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"],"syntax":"swift"},{"type":"aside","style":"note","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"All provided Encoders and Decoders from a ","type":"text"},{"type":"codeVoice","code":"default"},{"text":" for easy access to an encoder or decoder initialized","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with default options. These are used througout the documentation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"You may have noticed you can use either ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","isActive":true},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" to reference","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with"},{"type":"text","text":" "},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}]}],"style":"tip","name":"Tip","type":"aside"},{"anchor":"EcodingDecoding-from-Strings","type":"heading","text":"Ecoding\/Decoding from Strings","level":3},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables text based data formats like ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","isActive":true,"type":"reference"},{"type":"text","text":" can encode directly to and from"},{"text":" ","type":"text"},{"type":"text","text":"Strings in addition to the standard "},{"type":"codeVoice","code":"Data"},{"text":" encoding; this can save you the hassle of converting ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" to "},{"code":"String","type":"codeVoice"},{"text":" in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"many cases."}]},{"type":"paragraph","inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" support via the following protocols."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","isActive":true}]}]}]},{"text":"Ecoding\/Decoding from Tree values.","level":3,"type":"heading","anchor":"EcodingDecoding-from-Tree-values"},{"inlineContent":[{"text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are Swift values that represent the natively encoded data. See "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"reference"},{"text":" to learn more about tree values.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"type":"codeVoice","code":"Engine"},{"type":"text","text":" struct from a "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference"},{"text":" tree value is easy.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"]},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables data formats provided support for tree values via the following protocols.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true,"type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"reference","isActive":true}]}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"roleHeading":"Article","role":"article","title":"Getting Started with Potent Codables","modules":[{"name":"PotentCodables"}]},"seeAlsoSections":[{"generated":true,"anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"sections":[],"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"inlineContent":[{"type":"text","text":"JSON"}],"type":"strong"},{"text":", ","type":"text"},{"inlineContent":[{"type":"text","text":"YAML"}],"type":"strong"},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"CBOR"}]},{"type":"text","text":" & "},{"inlineContent":[{"type":"text","text":"ASN.1"}],"type":"strong"},{"text":".","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentYAML":{"type":"topic","url":"\/documentation\/potentyaml","title":"PotentYAML","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","role":"collection","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"role":"symbol","url":"\/documentation\/potentyaml\/yamldecoder","title":"YAMLDecoder","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"url":"\/documentation\/potentcodables\/decodesfromstring","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"type":"text","text":" "},{"type":"text","text":"data using a string encoding."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodesFromString","kind":"identifier"}],"title":"DecodesFromString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"title":"AnyValue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","url":"\/documentation\/potentcodables\/anyvalue","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyValue"}],"navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"role":"article","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/using-anyvalue","title":"Using AnyValue","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference","isActive":true}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"role":"symbol","type":"topic","title":"JSON","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSON","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentjson\/json","navigatorTitle":[{"text":"JSON","kind":"identifier"}],"abstract":[{"text":"General JSON value.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"navigatorTitle":[{"kind":"identifier","text":"Encoder"}],"kind":"symbol","url":"\/documentation\/potentyaml\/yaml\/encoder","type":"topic","title":"YAML.Encoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","abstract":[],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Encoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into YAML values."}],"type":"topic","title":"YAMLEncoder","url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLEncoder"}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"title":"EncodesToString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","role":"symbol","type":"topic","url":"\/documentation\/potentcodables\/encodestostring","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToString"}],"abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"type":"text","text":" "},{"type":"text","text":"and encoding to data using a default string encoding."}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"role":"symbol","url":"\/documentation\/potentcodables\/encodestotree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToTree"}],"navigatorTitle":[{"text":"EncodesToTree","kind":"identifier"}],"kind":"symbol","title":"EncodesToTree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"url":"\/documentation\/potentcodables\/treevalues","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","role":"article","abstract":[{"type":"text","text":"What are “tree values”?"}],"title":"Tree Values","type":"topic","kind":"article"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"kind":"symbol","url":"\/documentation\/potentcodables\/decodesfromtree","title":"DecodesFromTree","abstract":[{"text":"All encoders support decoding from their native values.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromTree","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","role":"collection","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"title":"Data Formats","kind":"article","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"url":"\/documentation\/potentcodables\/data-formats","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","type":"topic"}}}
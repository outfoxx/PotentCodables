{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"type":"strong","inlineContent":[{"text":"JSON","type":"text"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"text":"CBOR","type":"text"}]},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"ASN.1"}]},{"type":"text","text":"."}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":"s for the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework. Additionally all"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s provide ehanched capabilities to make working with data formats easier and more"},{"text":" ","type":"text"},{"text":"powerful.","type":"text"}],"type":"paragraph"},{"level":3,"text":"Standard Encoders\/Decoders","type":"heading","anchor":"Standard-EncodersDecoders"},{"inlineContent":[{"type":"text","text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only"},{"text":" ","type":"text"},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Decoder"},{"text":" APIs as you would for","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any other "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"text":". You just need","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to use "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true}]},{"code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Produces the following YAML:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"yaml","code":["---","name: V8","cylinders: 8","..."]},{"type":"paragraph","inlineContent":[{"text":"Similarly, to decode the YAML produced in the previous example you only need to use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"]},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"All provided Encoders and Decoders from a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"type":"text","text":"with default options. These are used througout the documentation."}]}]},{"name":"Tip","style":"tip","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You may have noticed you can use either "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" to reference"},{"type":"text","text":" "},{"type":"text","text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with"},{"text":" ","type":"text"},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"code":"JSONEncoder","type":"codeVoice"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}]}]},{"anchor":"EcodingDecoding-from-Strings","level":3,"type":"heading","text":"Ecoding\/Decoding from Strings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"reference","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","type":"reference","isActive":true},{"text":" can encode directly to and from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Strings in addition to the standard "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"type":"codeVoice","code":"Data"},{"text":" to ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"many cases."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The previous encoding example could be rewritten as follows:"}]},{"code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"All of PotentCodables text based formats provided "},{"type":"codeVoice","code":"String"},{"text":" support via the following protocols.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","text":"Ecoding\/Decoding from Tree values.","anchor":"EcodingDecoding-from-Tree-values"},{"inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"type":"text","text":" "},{"text":"are Swift values that represent the natively encoded data. See ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"reference","isActive":true},{"text":" to learn more about tree values.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Reading our previous example "},{"code":"Engine","type":"codeVoice"},{"type":"text","text":" struct from a "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true},{"text":" tree value is easy.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"All PotentCodables data formats provided support for tree values via the following protocols."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"}]}]}],"type":"unorderedList"}]}],"kind":"article","metadata":{"role":"article","title":"Getting Started with Potent Codables","roleHeading":"Article","modules":[{"name":"PotentCodables"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"anchor":"Usage","title":"Usage"}],"references":{"doc://PotentCodables/documentation/PotentCodables":{"title":"PotentCodables","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentJSON/JSON":{"role":"symbol","title":"JSON","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"JSON","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"JSON","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"General JSON value.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","url":"\/documentation\/potentjson\/json"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"title":"Tree Values","url":"\/documentation\/potentcodables\/treevalues","kind":"article","abstract":[{"text":"What are “tree values”?","type":"text"}],"role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"kind":"article","role":"article","url":"\/documentation\/potentcodables\/data-formats","abstract":[{"text":"All data formats provided by PotentCodables","type":"text"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","title":"Data Formats"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromString"}],"url":"\/documentation\/potentcodables\/decodesfromstring","abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"kind":"symbol","title":"DecodesFromString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON":{"type":"topic","url":"\/documentation\/potentjson","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"url":"\/documentation\/potentcodables\/anyvalue","title":"AnyValue","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"abstract":[{"type":"text","text":"A "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","kind":"symbol","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"YAMLDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}],"title":"YAMLDecoder","type":"topic","url":"\/documentation\/potentyaml\/yamldecoder"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EncodesToTree","kind":"identifier"}],"title":"EncodesToTree","url":"\/documentation\/potentcodables\/encodestotree","abstract":[{"text":"All encoders support encoding to their native values.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"kind":"symbol","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into YAML values.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLEncoder"}],"title":"YAMLEncoder","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromTree"}],"navigatorTitle":[{"text":"DecodesFromTree","kind":"identifier"}],"type":"topic","title":"DecodesFromTree","url":"\/documentation\/potentcodables\/decodesfromtree","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"url":"\/documentation\/potentcodables\/using-anyvalue","type":"topic","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","title":"Using AnyValue","kind":"article"},"doc://PotentCodables/documentation/PotentYAML":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","type":"topic","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"url":"\/documentation\/potentcodables\/encodestostring","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","title":"EncodesToString","navigatorTitle":[{"kind":"identifier","text":"EncodesToString"}],"abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"type":"text","text":" "},{"type":"text","text":"and encoding to data using a default string encoding."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EncodesToString","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","kind":"symbol","abstract":[],"title":"YAML.Encoder","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"}],"url":"\/documentation\/potentyaml\/yaml\/encoder","type":"topic"}}}
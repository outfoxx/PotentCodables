{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"PotentCodables"}],"title":"Getting Started with Potent Codables","role":"article","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"sections":[],"seeAlsoSections":[{"generated":true,"anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage"}],"abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"YAML"}],"type":"strong"},{"type":"text","text":", "},{"inlineContent":[{"type":"text","text":"CBOR"}],"type":"strong"},{"type":"text","text":" & "},{"inlineContent":[{"type":"text","text":"ASN.1"}],"type":"strong"},{"type":"text","text":"."}],"kind":"article","primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"PotentCodables provide standard "},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s for the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" framework. Additionally all","type":"text"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"text":"s provide ehanched capabilities to make working with data formats easier and more","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"powerful."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Standard Encoders\/Decoders","anchor":"Standard-EncodersDecoders"},{"inlineContent":[{"type":"text","text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"code":"Encoder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Decoder","type":"codeVoice"},{"text":" APIs as you would for","type":"text"},{"text":" ","type":"text"},{"text":"any other ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"text":". You just need","type":"text"},{"text":" ","type":"text"},{"text":"to use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"}]},{"syntax":"swift","type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"inlineContent":[{"type":"text","text":"Produces the following YAML:"}],"type":"paragraph"},{"code":["---","name: V8","cylinders: 8","..."],"type":"codeListing","syntax":"yaml"},{"inlineContent":[{"text":"Similarly, to decode the YAML produced in the previous example you only need to use ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"],"type":"codeListing","syntax":"swift"},{"name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"All provided Encoders and Decoders from a "},{"type":"codeVoice","code":"default"},{"text":" for easy access to an encoder or decoder initialized","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with default options. These are used througout the documentation."}],"type":"paragraph"}],"type":"aside"},{"name":"Tip","type":"aside","style":"tip","content":[{"inlineContent":[{"type":"text","text":"You may have noticed you can use either "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder"},{"type":"text","text":" or "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true,"type":"reference"},{"type":"text","text":" to reference"},{"type":"text","text":" "},{"text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"\/"},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"text":"Ecoding\/Decoding from Strings","anchor":"EcodingDecoding-from-Strings","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},{"type":"text","text":" can encode directly to and from"},{"type":"text","text":" "},{"type":"text","text":"Strings in addition to the standard "},{"code":"Data","type":"codeVoice"},{"text":" encoding; this can save you the hassle of converting ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" in"},{"type":"text","text":" "},{"type":"text","text":"many cases."}]},{"type":"paragraph","inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" support via the following protocols.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","type":"reference","isActive":true}]}]}]},{"type":"heading","level":3,"anchor":"EcodingDecoding-from-Tree-values","text":"Ecoding\/Decoding from Tree values."},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"type":"text","text":" "},{"type":"text","text":"are Swift values that represent the natively encoded data. See "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","isActive":true,"type":"reference"},{"type":"text","text":" to learn more about tree values."}]},{"inlineContent":[{"text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"type":"codeVoice","code":"Engine"},{"type":"text","text":" struct from a "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference","isActive":true},{"type":"text","text":" tree value is easy."}]},{"syntax":"swift","type":"codeListing","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"]},{"inlineContent":[{"type":"text","text":"All PotentCodables data formats provided support for tree values via the following protocols."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","isActive":true,"type":"reference"}],"type":"paragraph"}]}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","url":"\/documentation\/potentjson","abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"type":"topic","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"url":"\/documentation\/potentcodables\/decodesfromtree","title":"DecodesFromTree","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"kind":"symbol","url":"\/documentation\/potentcodables\/decodesfromstring","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DecodesFromString","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"title":"DecodesFromString"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"topic","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder","title":"YAMLEncoder"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"type":"topic","kind":"article","url":"\/documentation\/potentcodables\/using-anyvalue","role":"article","title":"Using AnyValue","abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference","isActive":true}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"title":"YAMLDecoder","type":"topic","abstract":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"url":"\/documentation\/potentyaml\/yamldecoder","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","role":"collection","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"kind":"symbol","url":"\/documentation\/potentcodables\/encodestotree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EncodesToTree","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"title":"EncodesToTree"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"type":"topic","abstract":[{"text":"All data formats provided by PotentCodables","type":"text"}],"url":"\/documentation\/potentcodables\/data-formats","title":"Data Formats","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","kind":"article"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","url":"\/documentation\/potentyaml","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"type":"topic","kind":"article","url":"\/documentation\/potentcodables\/treevalues","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","abstract":[{"text":"What are “tree values”?","type":"text"}],"title":"Tree Values"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"url":"\/documentation\/potentcodables\/anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyValue"}],"abstract":[{"type":"text","text":"A "},{"code":"Codable","type":"codeVoice"},{"text":" value that allows encoding\/decoding values of any type or structure.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"title":"AnyValue","role":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"type":"topic","navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentcodables\/encodestostring","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToString"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"type":"text","text":" "},{"text":"and encoding to data using a default string encoding.","type":"text"}],"title":"EncodesToString"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"navigatorTitle":[{"text":"JSON","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","url":"\/documentation\/potentjson\/json","abstract":[{"type":"text","text":"General JSON value."}],"role":"symbol","kind":"symbol","type":"topic","title":"JSON","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}]},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","role":"symbol","url":"\/documentation\/potentyaml\/yaml\/encoder","title":"YAML.Encoder","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}],"navigatorTitle":[{"text":"Encoder","kind":"identifier"}]}}}
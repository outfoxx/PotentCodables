{"abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"YAML","type":"text"}],"type":"strong"},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"CBOR"}]},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"text":".","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"anchor":"Usage","title":"Usage","generated":true}],"metadata":{"title":"Getting Started with Potent Codables","role":"article","modules":[{"name":"PotentCodables"}],"roleHeading":"Article"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"PotentCodables provide standard "},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s for the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" framework. Additionally all"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"s provide ehanched capabilities to make working with data formats easier and more"},{"type":"text","text":" "},{"type":"text","text":"powerful."}],"type":"paragraph"},{"anchor":"Standard-EncodersDecoders","level":3,"text":"Standard Encoders\/Decoders","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only"},{"text":" ","type":"text"},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" APIs as you would for"},{"type":"text","text":" "},{"type":"text","text":"any other "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework."}]},{"type":"paragraph","inlineContent":[{"text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":". You just need"},{"text":" ","type":"text"},{"text":"to use ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true,"type":"reference"}]},{"syntax":"swift","type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"Produces the following YAML:","type":"text"}]},{"syntax":"yaml","type":"codeListing","code":["---","name: V8","cylinders: 8","..."]},{"inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"],"type":"codeListing"},{"content":[{"inlineContent":[{"text":"All provided Encoders and Decoders from a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"text":"with default options. These are used througout the documentation.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You may have noticed you can use either "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder"},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"text":" to reference","type":"text"},{"text":" ","type":"text"},{"text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"\/"},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}]}],"type":"aside","style":"tip","name":"Tip"},{"level":3,"type":"heading","text":"Ecoding\/Decoding from Strings","anchor":"EcodingDecoding-from-Strings"},{"inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","type":"reference","isActive":true},{"type":"text","text":" can encode directly to and from"},{"type":"text","text":" "},{"type":"text","text":"Strings in addition to the standard "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"type":"codeVoice","code":"Data"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" in","type":"text"},{"type":"text","text":" "},{"text":"many cases.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The previous encoding example could be rewritten as follows:"}]},{"syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"type":"codeListing"},{"inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" support via the following protocols.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"}]}]}],"type":"unorderedList"},{"level":3,"text":"Ecoding\/Decoding from Tree values.","type":"heading","anchor":"EcodingDecoding-from-Tree-values"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"type":"text","text":" "},{"type":"text","text":"are Swift values that represent the natively encoded data. See "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","isActive":true,"type":"reference"},{"type":"text","text":" to learn more about tree values."}]},{"inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"code":"Engine","type":"codeVoice"},{"type":"text","text":" struct from a "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true},{"type":"text","text":" tree value is easy."}]},{"syntax":"swift","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables data formats provided support for tree values via the following protocols.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"reference","isActive":true}]}]}]}]}],"kind":"article","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"title":"DecodesFromString","url":"\/documentation\/potentcodables\/decodesfromstring","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromString"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","type":"topic","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"type":"text","text":" "},{"text":"data using a string encoding.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","title":"Tree Values","type":"topic","url":"\/documentation\/potentcodables\/treevalues","abstract":[{"text":"What are “tree values”?","type":"text"}],"role":"article","kind":"article"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"title":"YAMLEncoder","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLEncoder"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true,"type":"reference"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"text":" values into YAML values.","type":"text"}],"url":"\/documentation\/potentyaml\/yamlencoder"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/anyvalue","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"title":"AnyValue","kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AnyValue","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"role":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamldecoder","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"kind":"symbol","title":"YAMLDecoder","navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"kind":"article","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","title":"Using AnyValue","role":"article","url":"\/documentation\/potentcodables\/using-anyvalue","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"title":"DecodesFromTree","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromTree"}],"role":"symbol","navigatorTitle":[{"text":"DecodesFromTree","kind":"identifier"}],"abstract":[{"text":"All encoders support decoding from their native values.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","url":"\/documentation\/potentcodables\/decodesfromtree"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"url":"\/documentation\/potentcodables","role":"collection"},"doc://PotentCodables/documentation/PotentYAML":{"role":"collection","url":"\/documentation\/potentyaml","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","type":"topic","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","navigatorTitle":[{"kind":"identifier","text":"EncodesToString"}],"url":"\/documentation\/potentcodables\/encodestostring","type":"topic","kind":"symbol","abstract":[{"text":"Encoders that target text formats support encoding to strings","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and encoding to data using a default string encoding."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EncodesToString","kind":"identifier"}],"role":"symbol","title":"EncodesToString"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"title":"EncodesToTree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","kind":"symbol","role":"symbol","url":"\/documentation\/potentcodables\/encodestotree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"EncodesToTree","kind":"identifier"}],"navigatorTitle":[{"text":"EncodesToTree","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"kind":"article","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","title":"Data Formats","role":"article","url":"\/documentation\/potentcodables\/data-formats","type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"type":"topic","title":"YAML.Encoder","navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Encoder","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yaml\/encoder"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"url":"\/documentation\/potentjson\/json","title":"JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","abstract":[{"type":"text","text":"General JSON value."}],"type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"title":"PotentJSON","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}],"type":"topic"}}}
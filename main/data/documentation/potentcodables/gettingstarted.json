{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"code":"Encoder","type":"codeVoice"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"text":"s for the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework. Additionally all"},{"type":"text","text":" "},{"text":"of the ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"text":"s provide ehanched capabilities to make working with data formats easier and more","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"powerful."}]},{"level":3,"anchor":"Standard-EncodersDecoders","text":"Standard Encoders\/Decoders","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only","type":"text"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"code":"Encoder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" APIs as you would for"},{"type":"text","text":" "},{"text":"any other ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" framework.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard "},{"code":"JSONEncoder","type":"codeVoice"},{"text":". You just need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"}],"type":"paragraph"},{"type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"syntax":"swift"},{"inlineContent":[{"text":"Produces the following YAML:","type":"text"}],"type":"paragraph"},{"code":["---","name: V8","cylinders: 8","..."],"syntax":"yaml","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"]},{"content":[{"inlineContent":[{"text":"All provided Encoders and Decoders from a ","type":"text"},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"type":"text","text":"with default options. These are used througout the documentation."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"},{"type":"aside","style":"tip","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"You may have noticed you can use either ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","type":"reference","isActive":true},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" to reference","type":"text"},{"text":" ","type":"text"},{"text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with","type":"text"},{"type":"text","text":" "},{"text":"other codable frameworks encoders & decoders like Foundation’s ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}]}]},{"anchor":"EcodingDecoding-from-Strings","text":"Ecoding\/Decoding from Strings","level":3,"type":"heading"},{"inlineContent":[{"text":"All PotentCodables text based data formats like ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"reference","isActive":true},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","isActive":true},{"text":" can encode directly to and from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Strings in addition to the standard "},{"type":"codeVoice","code":"Data"},{"text":" encoding; this can save you the hassle of converting ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" in"},{"text":" ","type":"text"},{"type":"text","text":"many cases."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The previous encoding example could be rewritten as follows:"}]},{"syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"type":"codeListing"},{"inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" support via the following protocols."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"}]}]}]},{"type":"heading","level":3,"anchor":"EcodingDecoding-from-Tree-values","text":"Ecoding\/Decoding from Tree values."},{"type":"paragraph","inlineContent":[{"text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"are Swift values that represent the natively encoded data. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"},{"type":"text","text":" to learn more about tree values."}]},{"inlineContent":[{"text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Reading our previous example ","type":"text"},{"code":"Engine","type":"codeVoice"},{"type":"text","text":" struct from a "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true,"type":"reference"},{"text":" tree value is easy.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"]},{"inlineContent":[{"type":"text","text":"All PotentCodables data formats provided support for tree values via the following protocols."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"reference","isActive":true}]}]}],"type":"unorderedList"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"metadata":{"role":"article","modules":[{"name":"PotentCodables"}],"roleHeading":"Article","title":"Getting Started with Potent Codables"},"seeAlsoSections":[{"generated":true,"title":"Usage","anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"]}],"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"inlineContent":[{"text":"JSON","type":"text"}],"type":"strong"},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"text":", ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"CBOR"}]},{"text":" & ","type":"text"},{"inlineContent":[{"type":"text","text":"ASN.1"}],"type":"strong"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","url":"\/documentation\/potentyaml\/yaml\/encoder","navigatorTitle":[{"kind":"identifier","text":"Encoder"}],"title":"YAML.Encoder","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}],"type":"topic","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"url":"\/documentation\/potentcodables\/treevalues","kind":"article","abstract":[{"type":"text","text":"What are “tree values”?"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","role":"article","title":"Tree Values","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"kind":"article","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","url":"\/documentation\/potentcodables\/using-anyvalue","title":"Using AnyValue","type":"topic","abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"url":"\/documentation\/potentcodables\/decodesfromtree","kind":"symbol","abstract":[{"text":"All encoders support decoding from their native values.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","role":"symbol","title":"DecodesFromTree","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromTree"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"kind":"symbol","role":"symbol","url":"\/documentation\/potentyaml\/yamldecoder","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"text":" facilitates the decoding of YAML into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"title":"YAMLDecoder","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","url":"\/documentation\/potentcodables\/encodestostring","navigatorTitle":[{"kind":"identifier","text":"EncodesToString"}],"title":"EncodesToString","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToString"}],"type":"topic","abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"text":" ","type":"text"},{"type":"text","text":"and encoding to data using a default string encoding."}]},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"abstract":[{"text":"A ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"title":"AnyValue","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyValue"}],"kind":"symbol","url":"\/documentation\/potentcodables\/anyvalue","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"type":"topic","abstract":[{"text":"General JSON value.","type":"text"}],"title":"JSON","kind":"symbol","url":"\/documentation\/potentjson\/json","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSON"}]},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"kind":"symbol","url":"\/documentation\/potentjson","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic","url":"\/documentation\/potentcodables","role":"collection","title":"PotentCodables"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"url":"\/documentation\/potentcodables\/decodesfromstring","kind":"symbol","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","role":"symbol","title":"DecodesFromString","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromString"}]},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"kind":"article","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","url":"\/documentation\/potentcodables\/data-formats","title":"Data Formats","type":"topic","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}]},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","url":"\/documentation\/potentyaml","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"title":"PotentYAML","type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"url":"\/documentation\/potentyaml\/yamlencoder","kind":"symbol","abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"reference","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","role":"symbol","title":"YAMLEncoder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLEncoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"type":"topic","url":"\/documentation\/potentcodables\/encodestotree","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToTree"}],"title":"EncodesToTree","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"role":"symbol","abstract":[{"type":"text","text":"All encoders support encoding to their native values."}]}}}
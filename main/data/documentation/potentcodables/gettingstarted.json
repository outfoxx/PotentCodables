{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted"},"abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"inlineContent":[{"text":"JSON","type":"text"}],"type":"strong"},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"text":"YAML","type":"text"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"CBOR","type":"text"}],"type":"strong"},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"ASN.1"}]},{"type":"text","text":"."}],"metadata":{"role":"article","modules":[{"name":"PotentCodables"}],"roleHeading":"Article","title":"Getting Started with Potent Codables"},"seeAlsoSections":[{"title":"Usage","generated":true,"anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"text":"s for the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework. Additionally all"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"text":"s provide ehanched capabilities to make working with data formats easier and more","type":"text"},{"type":"text","text":" "},{"type":"text","text":"powerful."}],"type":"paragraph"},{"level":3,"text":"Standard Encoders\/Decoders","type":"heading","anchor":"Standard-EncodersDecoders"},{"inlineContent":[{"text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only","type":"text"},{"text":" ","type":"text"},{"text":"need to import the format you want to use and use the familiar ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"text":" and ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" APIs as you would for"},{"type":"text","text":" "},{"type":"text","text":"any other "},{"type":"codeVoice","code":"Codable"},{"text":" framework.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":". You just need"},{"type":"text","text":" "},{"type":"text","text":"to use "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true,"type":"reference"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"Produces the following YAML:","type":"text"}]},{"code":["---","name: V8","cylinders: 8","..."],"type":"codeListing","syntax":"yaml"},{"inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"],"type":"codeListing","syntax":"swift"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All provided Encoders and Decoders from a "},{"code":"default","type":"codeVoice"},{"text":" for easy access to an encoder or decoder initialized","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with default options. These are used througout the documentation."}]}],"type":"aside","style":"note"},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"text":"You may have noticed you can use either ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","type":"reference","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" to reference","type":"text"},{"text":" ","type":"text"},{"text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with","type":"text"},{"type":"text","text":" "},{"text":"other codable frameworks encoders & decoders like Foundation’s ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}]}],"type":"aside","name":"Tip"},{"anchor":"EcodingDecoding-from-Strings","level":3,"type":"heading","text":"Ecoding\/Decoding from Strings"},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables text based data formats like ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","isActive":true,"type":"reference"},{"text":" can encode directly to and from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Strings in addition to the standard "},{"type":"codeVoice","code":"Data"},{"text":" encoding; this can save you the hassle of converting ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" in"},{"type":"text","text":" "},{"type":"text","text":"many cases."}]},{"type":"paragraph","inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" support via the following protocols."}]},{"items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"Ecoding\/Decoding from Tree values.","level":3,"anchor":"EcodingDecoding-from-Tree-values"},{"type":"paragraph","inlineContent":[{"text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values","type":"text"},{"text":" ","type":"text"},{"text":"are Swift values that represent the natively encoded data. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"reference"},{"type":"text","text":" to learn more about tree values."}]},{"inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"code":"Engine","type":"codeVoice"},{"type":"text","text":" struct from a "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true},{"type":"text","text":" tree value is easy."}]},{"type":"codeListing","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables data formats provided support for tree values via the following protocols."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"reference"}]}]}]}]}],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","abstract":[{"text":"What are “tree values”?","type":"text"}],"role":"article","url":"\/documentation\/potentcodables\/treevalues","kind":"article","type":"topic","title":"Tree Values"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"reference","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"text":" values into YAML values.","type":"text"}],"navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLEncoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","title":"YAMLEncoder"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"title":"Data Formats","abstract":[{"text":"All data formats provided by PotentCodables","type":"text"}],"url":"\/documentation\/potentcodables\/data-formats","type":"topic","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","kind":"article"},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}],"role":"collection","url":"\/documentation\/potentjson","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"type":"topic","title":"DecodesFromString","role":"symbol","navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"url":"\/documentation\/potentcodables\/decodesfromstring","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodesFromString","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromTree"}],"navigatorTitle":[{"text":"DecodesFromTree","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromtree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"kind":"symbol","title":"DecodesFromTree"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"title":"Using AnyValue","type":"topic","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference","isActive":true}],"role":"article","url":"\/documentation\/potentcodables\/using-anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","kind":"article"},"doc://PotentCodables/documentation/PotentYAML":{"title":"PotentYAML","url":"\/documentation\/potentyaml","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyValue","kind":"identifier"}],"url":"\/documentation\/potentcodables\/anyvalue","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","kind":"symbol","title":"AnyValue"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EncodesToTree","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","kind":"symbol","url":"\/documentation\/potentcodables\/encodestotree","type":"topic","title":"EncodesToTree"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","kind":"symbol","role":"collection","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentJSON/JSON":{"type":"topic","url":"\/documentation\/potentjson\/json","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"kind":"symbol","role":"symbol","title":"JSON","abstract":[{"type":"text","text":"General JSON value."}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"kind":"symbol","role":"symbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLDecoder"}],"title":"YAMLDecoder","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","url":"\/documentation\/potentyaml\/yamldecoder"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Encoder","kind":"identifier"}],"type":"topic","url":"\/documentation\/potentyaml\/yaml\/encoder","kind":"symbol","role":"symbol","title":"YAML.Encoder"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"abstract":[{"text":"Encoders that target text formats support encoding to strings","type":"text"},{"type":"text","text":" "},{"text":"and encoding to data using a default string encoding.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EncodesToString","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","kind":"symbol","url":"\/documentation\/potentcodables\/encodestostring","type":"topic","title":"EncodesToString"}}}
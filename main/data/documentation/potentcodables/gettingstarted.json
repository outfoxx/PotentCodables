{"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"seeAlsoSections":[{"anchor":"Usage","generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage"}],"abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"text":"JSON","type":"text"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"text":"YAML","type":"text"}]},{"text":", ","type":"text"},{"inlineContent":[{"text":"CBOR","type":"text"}],"type":"strong"},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"text":"s for the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework. Additionally all"},{"text":" ","type":"text"},{"type":"text","text":"of the "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":"s provide ehanched capabilities to make working with data formats easier and more"},{"type":"text","text":" "},{"type":"text","text":"powerful."}],"type":"paragraph"},{"type":"heading","level":3,"text":"Standard Encoders\/Decoders","anchor":"Standard-EncodersDecoders"},{"inlineContent":[{"text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only","type":"text"},{"type":"text","text":" "},{"text":"need to import the format you want to use and use the familiar ","type":"text"},{"code":"Encoder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Decoder","type":"codeVoice"},{"text":" APIs as you would for","type":"text"},{"text":" ","type":"text"},{"text":"any other ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" framework."}],"type":"paragraph"},{"inlineContent":[{"text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":". You just need"},{"text":" ","type":"text"},{"text":"to use ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true,"type":"reference"}],"type":"paragraph"},{"type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Produces the following YAML:"}],"type":"paragraph"},{"type":"codeListing","syntax":"yaml","code":["---","name: V8","cylinders: 8","..."]},{"inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All provided Encoders and Decoders from a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"text":" ","type":"text"},{"type":"text","text":"with default options. These are used througout the documentation."}]}],"name":"Note"},{"type":"aside","content":[{"inlineContent":[{"text":"You may have noticed you can use either ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","isActive":true},{"type":"text","text":" or "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"reference","isActive":true},{"text":" to reference","type":"text"},{"text":" ","type":"text"},{"text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"Tip","style":"tip"},{"text":"Ecoding\/Decoding from Strings","anchor":"EcodingDecoding-from-Strings","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"reference","isActive":true},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},{"type":"text","text":" can encode directly to and from"},{"text":" ","type":"text"},{"text":"Strings in addition to the standard ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"code":"Data","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" in","type":"text"},{"type":"text","text":" "},{"text":"many cases.","type":"text"}]},{"inlineContent":[{"text":"The previous encoding example could be rewritten as follows:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"All of PotentCodables text based formats provided "},{"type":"codeVoice","code":"String"},{"type":"text","text":" support via the following protocols."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","type":"reference","isActive":true}]}]}],"type":"unorderedList"},{"level":3,"text":"Ecoding\/Decoding from Tree values.","type":"heading","anchor":"EcodingDecoding-from-Tree-values"},{"inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"type":"text","text":" "},{"text":"are Swift values that represent the natively encoded data. See ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"reference","isActive":true},{"text":" to learn more about tree values.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"code":"Engine","type":"codeVoice"},{"text":" struct from a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},{"type":"text","text":" tree value is easy."}]},{"type":"codeListing","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables data formats provided support for tree values via the following protocols."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"}],"type":"paragraph"}]}]}]}],"metadata":{"roleHeading":"Article","title":"Getting Started with Potent Codables","role":"article","modules":[{"name":"PotentCodables"}]},"references":{"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"role":"symbol","url":"\/documentation\/potentcodables\/decodesfromtree","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","title":"DecodesFromTree","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromTree","kind":"identifier"}],"abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"role":"article","title":"Using AnyValue","url":"\/documentation\/potentcodables\/using-anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true}],"kind":"article","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"kind":"article","title":"Tree Values","role":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","abstract":[{"type":"text","text":"What are “tree values”?"}],"type":"topic","url":"\/documentation\/potentcodables\/treevalues"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"type":"topic","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YAMLEncoder","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","title":"YAMLEncoder","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromString","kind":"identifier"}],"navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"role":"symbol","title":"DecodesFromString","url":"\/documentation\/potentcodables\/decodesfromstring","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EncodesToTree","kind":"identifier"}],"abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"url":"\/documentation\/potentcodables\/encodestotree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","kind":"symbol","title":"EncodesToTree","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","type":"topic","role":"collection","abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}],"kind":"symbol","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","title":"JSON","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSON"}],"navigatorTitle":[{"kind":"identifier","text":"JSON"}],"role":"symbol","url":"\/documentation\/potentjson\/json","type":"topic","abstract":[{"text":"General JSON value.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables":{"title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/potentcodables","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","title":"PotentYAML","role":"collection","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","abstract":[{"text":"A ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" value that allows encoding\/decoding values of any type or structure.","type":"text"}],"kind":"symbol","url":"\/documentation\/potentcodables\/anyvalue","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","title":"AnyValue","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyValue"}],"navigatorTitle":[{"kind":"identifier","text":"AnyValue"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"url":"\/documentation\/potentyaml\/yamldecoder","navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLDecoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","kind":"symbol","title":"YAMLDecoder","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true},{"text":" facilitates the decoding of YAML into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"role":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"title":"Data Formats","url":"\/documentation\/potentcodables\/data-formats","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","type":"topic","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"role":"article"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"text":" ","type":"text"},{"type":"text","text":"and encoding to data using a default string encoding."}],"role":"symbol","type":"topic","url":"\/documentation\/potentcodables\/encodestostring","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToString"}],"title":"EncodesToString","navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"}],"navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"role":"symbol","title":"YAML.Encoder","url":"\/documentation\/potentyaml\/yaml\/encoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","abstract":[],"kind":"symbol","type":"topic"}}}
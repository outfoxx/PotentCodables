{"kind":"article","seeAlsoSections":[{"anchor":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"generated":true,"title":"Usage"}],"metadata":{"title":"Getting Started with Potent Codables","role":"article","modules":[{"name":"PotentCodables"}],"roleHeading":"Article"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"abstract":[{"text":"Get started using the powerful potent data formats ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"text":"YAML","type":"text"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"CBOR"}]},{"text":" & ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"ASN.1"}]},{"type":"text","text":"."}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"PotentCodables provide standard ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s for the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" framework. Additionally all","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"code":"Encoder","type":"codeVoice"},{"type":"text","text":"s and "},{"code":"Decoder","type":"codeVoice"},{"text":"s provide ehanched capabilities to make working with data formats easier and more","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"powerful."}]},{"text":"Standard Encoders\/Decoders","type":"heading","anchor":"Standard-EncodersDecoders","level":3},{"type":"paragraph","inlineContent":[{"text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only","type":"text"},{"type":"text","text":" "},{"text":"need to import the format you want to use and use the familiar ","type":"text"},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" and "},{"code":"Decoder","type":"codeVoice"},{"text":" APIs as you would for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any other "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" framework."}]},{"inlineContent":[{"type":"text","text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard "},{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":". You just need"},{"text":" ","type":"text"},{"type":"text","text":"to use "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"reference"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Produces the following YAML:"}]},{"type":"codeListing","syntax":"yaml","code":["---","name: V8","cylinders: 8","..."]},{"inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All provided Encoders and Decoders from a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"text":"with default options. These are used througout the documentation.","type":"text"}]}],"name":"Note"},{"type":"aside","style":"tip","name":"Tip","content":[{"type":"paragraph","inlineContent":[{"text":"You may have noticed you can use either ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder"},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" to reference"},{"type":"text","text":" "},{"type":"text","text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with"},{"type":"text","text":" "},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"type":"codeVoice","code":"JSONEncoder"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"JSONDecoder"},{"text":".","type":"text"}]}]},{"type":"heading","anchor":"EcodingDecoding-from-Strings","level":3,"text":"Ecoding\/Decoding from Strings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","isActive":true,"type":"reference"},{"type":"text","text":" can encode directly to and from"},{"text":" ","type":"text"},{"type":"text","text":"Strings in addition to the standard "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":" in"},{"text":" ","type":"text"},{"type":"text","text":"many cases."}]},{"inlineContent":[{"type":"text","text":"The previous encoding example could be rewritten as follows:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"text":"All of PotentCodables text based formats provided ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" support via the following protocols.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","isActive":true,"type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"},{"level":3,"text":"Ecoding\/Decoding from Tree values.","anchor":"EcodingDecoding-from-Tree-values","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"text":" ","type":"text"},{"text":"are Swift values that represent the natively encoded data. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"},{"text":" to learn more about tree values.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}]},{"inlineContent":[{"type":"text","text":"Reading our previous example "},{"type":"codeVoice","code":"Engine"},{"type":"text","text":" struct from a "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true},{"text":" tree value is easy.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"All PotentCodables data formats provided support for tree values via the following protocols.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"reference","isActive":true}],"type":"paragraph"}]}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","url":"\/documentation\/potentcodables\/anyvalue","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"role":"symbol","title":"AnyValue","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}]},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","url":"\/documentation\/potentjson","role":"collection","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}]},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","abstract":[{"type":"text","text":"What are “tree values”?"}],"title":"Tree Values","url":"\/documentation\/potentcodables\/treevalues","kind":"article","type":"topic","role":"article"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"title":"EncodesToTree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","role":"symbol","url":"\/documentation\/potentcodables\/encodestotree","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToTree"}],"abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"EncodesToTree","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"url":"\/documentation\/potentcodables\/decodesfromstring","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"role":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","kind":"symbol","title":"DecodesFromString","abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"type":"text","text":" "},{"text":"data using a string encoding.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromString"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromtree","title":"DecodesFromTree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","url":"\/documentation\/potentyaml\/yaml\/encoder","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Encoder","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"}],"title":"YAML.Encoder"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"abstract":[{"text":"General JSON value.","type":"text"}],"url":"\/documentation\/potentjson\/json","title":"JSON","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSON","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"title":"Using AnyValue","abstract":[{"text":"Decode and encode “any” structured value using ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","type":"reference"}],"kind":"article","type":"topic","url":"\/documentation\/potentcodables\/using-anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","role":"article"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamldecoder","title":"YAMLDecoder","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"kind":"article","title":"Data Formats","url":"\/documentation\/potentcodables\/data-formats","role":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}]},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"title":"PotentCodables","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables","role":"collection"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"kind":"symbol","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yamlencoder","type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","title":"YAMLEncoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YAMLEncoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"kind":"symbol","url":"\/documentation\/potentcodables\/encodestostring","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","type":"topic","title":"EncodesToString","abstract":[{"text":"Encoders that target text formats support encoding to strings","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and encoding to data using a default string encoding."}],"navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EncodesToString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML":{"type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"url":"\/documentation\/potentyaml","title":"PotentYAML"}}}
{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables provide standard "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s for the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework. Additionally all"},{"type":"text","text":" "},{"type":"text","text":"of the "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":"s and "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s provide ehanched capabilities to make working with data formats easier and more"},{"type":"text","text":" "},{"type":"text","text":"powerful."}]},{"anchor":"Standard-EncodersDecoders","level":3,"type":"heading","text":"Standard Encoders\/Decoders"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are looking to use one of the powerful PotentCodables provided formats for encoding & decoding you only"},{"type":"text","text":" "},{"type":"text","text":"need to import the format you want to use and use the familiar "},{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" APIs as you would for"},{"type":"text","text":" "},{"type":"text","text":"any other "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" framework."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example encoding to YAML is essentially the same as encoding with Swift’s standard "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":". You just need"},{"type":"text","text":" "},{"type":"text","text":"to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encode(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Produces the following YAML:"}]},{"type":"codeListing","syntax":"yaml","code":["---","name: V8","cylinders: 8","..."]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, to decode the YAML produced in the previous example you only need to use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","let someEngine = YAML.Encoder.default.decode(yamlData)"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All provided Encoders and Decoders from a "},{"type":"codeVoice","code":"default"},{"type":"text","text":" for easy access to an encoder or decoder initialized"},{"type":"text","text":" "},{"type":"text","text":"with default options. These are used througout the documentation."}]}],"type":"aside","name":"Note"},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You may have noticed you can use either "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" to reference"},{"type":"text","text":" "},{"type":"text","text":"the YAML encoder’s type. This is true for all PotentCodables formats and allows easy disambiguation when mixing with"},{"type":"text","text":" "},{"type":"text","text":"other codable frameworks encoders & decoders like Foundation’s "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}]}],"type":"aside","name":"Tip"},{"anchor":"EcodingDecoding-from-Strings","level":3,"type":"heading","text":"Ecoding\/Decoding from Strings"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables text based data formats like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},{"type":"text","text":" can encode directly to and from"},{"type":"text","text":" "},{"type":"text","text":"Strings in addition to the standard "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" encoding; this can save you the hassle of converting "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":" in"},{"type":"text","text":" "},{"type":"text","text":"many cases."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The previous encoding example could be rewritten as follows:"}]},{"type":"codeListing","syntax":"swift","code":["import PotentYAML","","struct Engine {","  var name: String","  var cylinders: Int","}","","let v8Engine = Engine(name: \"V8\", cylinders: 8)","","let yamlData = try YAML.Encoder.default.encodeString(v8Engine)","print(String(data: yamlData, encoding: .utf8)!)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All of PotentCodables text based formats provided "},{"type":"codeVoice","code":"String"},{"type":"text","text":" support via the following protocols."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"}]}]}]},{"anchor":"EcodingDecoding-from-Tree-values","level":3,"type":"heading","text":"Ecoding\/Decoding from Tree values."},{"type":"paragraph","inlineContent":[{"type":"text","text":"PotentCodables data formats are required to provide an in-memory representation known as a “tree value”. Tree values"},{"type":"text","text":" "},{"type":"text","text":"are Swift values that represent the natively encoded data. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"},{"type":"text","text":" to learn more about tree values."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables encoders and decoders have the ability to encode to or decode from tree values."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Reading our previous example "},{"type":"codeVoice","code":"Engine"},{"type":"text","text":" struct from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},{"type":"text","text":" tree value is easy."}]},{"type":"codeListing","syntax":"swift","code":["import PotentJSON","","struct Engine {","  var name: String","  var cylinders: Int","}","","let json: JSON = [","  \"name\": \"V8\",","  \"cylinders\": 8","]","","let someEngine = JSON.Decoder.default.decodeTree(Engine.self, from: json)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All PotentCodables data formats provided support for tree values via the following protocols."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"CBOR"}]},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"type":"text","text":"ASN.1"}]},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Getting Started with Potent Codables","role":"article","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"seeAlsoSections":[{"title":"Usage","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"generated":true}],"references":{"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"role":"symbol","title":"DecodesFromString","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromString"}],"abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"type":"text","text":" "},{"type":"text","text":"data using a string encoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"url":"\/documentation\/potentcodables\/decodesfromstring"},"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"role":"article","title":"Using AnyValue","abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/using-anyvalue"},"doc://PotentCodables/documentation/PotentJSON":{"role":"collection","title":"PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","kind":"symbol","type":"topic","url":"\/documentation\/potentjson"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"role":"article","title":"Tree Values","abstract":[{"type":"text","text":"What are “tree values”?"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/treevalues"},"doc://PotentCodables/documentation/PotentJSON/JSON":{"role":"symbol","title":"JSON","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"type":"text","text":"General JSON value."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"url":"\/documentation\/potentjson\/json"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"role":"symbol","title":"DecodesFromTree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromTree"}],"abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"url":"\/documentation\/potentcodables\/decodesfromtree"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"role":"symbol","title":"EncodesToString","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToString"}],"abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"type":"text","text":" "},{"type":"text","text":"and encoding to data using a default string encoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodesToString"}],"url":"\/documentation\/potentcodables\/encodestostring"},"doc://PotentCodables/documentation/PotentYAML":{"role":"collection","title":"PotentYAML","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","type":"topic","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"role":"symbol","title":"YAMLDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLDecoder"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"url":"\/documentation\/potentyaml\/yamldecoder"},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"role":"symbol","title":"YAMLEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLEncoder"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into YAML values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"role":"article","title":"Data Formats","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","kind":"article","type":"topic","url":"\/documentation\/potentcodables\/data-formats"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"role":"symbol","title":"AnyValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyValue"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"url":"\/documentation\/potentcodables\/anyvalue"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"role":"symbol","title":"EncodesToTree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToTree"}],"abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"url":"\/documentation\/potentcodables\/encodestotree"},"doc://PotentCodables/documentation/PotentYAML/YAML/Encoder":{"role":"symbol","title":"YAML.Encoder","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/Encoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Encoder"}],"url":"\/documentation\/potentyaml\/yaml\/encoder"}}}
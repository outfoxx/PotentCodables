{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The value to encode.","type":"text"}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"text":" if the given value is invalid in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the current context for this format."}],"type":"paragraph"}],"name":"Throws","style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"code":"self.encode(_:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}],"type":"aside","style":"note","name":"Precondition"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","title":"encode(_:)","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt32VKF","modules":[{"name":"PotentCodables"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol"},"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-787p6":{"type":"topic","role":"symbol","title":"encode(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"url":"\/documentation\/potentcodables","title":"PotentCodables","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"type":"topic","title":"KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","kind":"symbol"}}}
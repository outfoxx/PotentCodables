{"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"inlineContent":[{"text":"The value to encode.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"text":" if the given value is invalid in","type":"text"},{"type":"text","text":" "},{"text":"the current context for this format.","type":"text"}]}],"name":"Throws","type":"aside"},{"style":"note","content":[{"inlineContent":[{"text":"May not be called after a previous ","type":"text"},{"code":"self.encode(_:)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"call.","type":"text"}],"type":"paragraph"}],"name":"Precondition","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"roleHeading":"Instance Method","role":"symbol","title":"encode(_:)","symbolKind":"method","modules":[{"name":"PotentCodables"}],"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt32VKF"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-787p6":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","title":"encode(_:)","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"role":"symbol","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/keyednestedencoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"title":"KeyedNestedEncoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","url":"\/documentation\/potentcodables","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"type":"topic","role":"collection"}}}
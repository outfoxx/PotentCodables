{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","text":"UInt32","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"type":"text","text":"the current context for this format."}]}],"style":"note","name":"Throws","type":"aside"},{"content":[{"inlineContent":[{"text":"May not be called after a previous ","type":"text"},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"type":"text","text":"call."}],"type":"paragraph"}],"name":"Precondition","style":"note","type":"aside"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","interfaceLanguage":"swift"},"metadata":{"title":"encode(_:)","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"PotentCodables"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt32VKF","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"variants":[{"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-787p6":{"role":"symbol","title":"encode(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"kind":"symbol","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"KeyedNestedEncoder","kind":"identifier"}],"role":"symbol","title":"KeyedNestedEncoder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}]},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"url":"\/documentation\/potentcodables","role":"collection"}}}
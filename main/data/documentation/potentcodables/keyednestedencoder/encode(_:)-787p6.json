{"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","interfaceLanguage":"swift"},"sections":[],"metadata":{"title":"encode(_:)","modules":[{"name":"PotentCodables"}],"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt32VKF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"name":"Throws","style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"text":"the current context for this format.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"text":" ","type":"text"},{"type":"text","text":"call."}],"type":"paragraph"}],"name":"Precondition","type":"aside","style":"note"}],"kind":"content"}],"references":{"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-787p6":{"title":"encode(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"abstract":[],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"title":"KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"}}}
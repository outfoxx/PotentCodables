{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]}]},{"parameters":[{"name":"value","content":[{"inlineContent":[{"text":"The value to encode.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"text":"the current context for this format.","type":"text"}]}]},{"type":"aside","name":"Precondition","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"text":" ","type":"text"},{"type":"text","text":"call."}]}],"style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3"},"kind":"symbol","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"metadata":{"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt64VKF","roleHeading":"Instance Method","modules":[{"name":"PotentCodables"}],"title":"encode(_:)","symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","title":"PotentCodables","role":"collection","type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"url":"\/documentation\/potentcodables\/keyednestedencoder","type":"topic","kind":"symbol","navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyedNestedEncoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","title":"KeyedNestedEncoder","role":"symbol","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-90tu3":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","title":"encode(_:)","kind":"symbol","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"}}}
{"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"]}],"metadata":{"title":"encode(_:)","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt64VKF","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to encode."}]}],"name":"value"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"text":" if the given value is invalid in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the current context for this format."}],"type":"paragraph"}],"type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}],"type":"aside","style":"note","name":"Precondition"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3"},"kind":"symbol","sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"KeyedNestedEncoder","kind":"identifier"}],"role":"symbol","title":"KeyedNestedEncoder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-90tu3":{"title":"encode(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","role":"symbol","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"kind":"symbol","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"url":"\/documentation\/potentcodables","role":"collection"}}}
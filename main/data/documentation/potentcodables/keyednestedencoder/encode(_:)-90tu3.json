{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"encode(_:)","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt64VKF","role":"symbol","modules":[{"name":"PotentCodables"}],"symbolKind":"method","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to encode.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"type":"text","text":" "},{"type":"text","text":"the current context for this format."}],"type":"paragraph"}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}],"name":"Precondition"}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"role":"symbol","navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"title":"KeyedNestedEncoder","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"url":"\/documentation\/potentcodables\/keyednestedencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","kind":"symbol","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-90tu3":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","title":"encode(_:)","type":"topic","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"}}}
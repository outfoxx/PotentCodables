{"variants":[{"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"PotentCodables"}],"title":"encode(_:)","roleHeading":"Instance Method","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt64VKF","symbolKind":"method"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to encode."}]}],"name":"value"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"type":"text","text":" "},{"text":"the current context for this format.","type":"text"}]}],"name":"Throws","style":"note","type":"aside"},{"name":"Precondition","content":[{"inlineContent":[{"text":"May not be called after a previous ","type":"text"},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"type":"text","text":"call."}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"type":"topic","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","role":"collection","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-90tu3":{"kind":"symbol","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","type":"topic","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"encode(_:)"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","type":"topic","title":"KeyedNestedEncoder","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyedNestedEncoder"}]}}}
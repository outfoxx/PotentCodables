{"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"modules":[{"name":"PotentCodables"}],"title":"encode(_:)","symbolKind":"method","role":"symbol","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt64VKF"},"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to encode.","type":"text"}]}],"name":"value"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"type":"text","text":"the current context for this format."}]}],"name":"Throws"},{"name":"Precondition","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"May not be called after a previous ","type":"text"},{"code":"self.encode(_:)","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"call."}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3"},"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-90tu3":{"type":"topic","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"role":"symbol","title":"encode(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3"},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"abstract":[],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"title":"KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"}}}
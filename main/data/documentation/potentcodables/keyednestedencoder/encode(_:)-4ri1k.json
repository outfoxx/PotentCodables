{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k"},"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"]}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to encode.","type":"text"}]}],"name":"value"}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"text":" if the given value is invalid in","type":"text"},{"text":" ","type":"text"},{"text":"the current context for this format.","type":"text"}]}],"type":"aside"},{"type":"aside","name":"Precondition","style":"note","content":[{"inlineContent":[{"text":"May not be called after a previous ","type":"text"},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"type":"text","text":"call."}],"type":"paragraph"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"PotentCodables"}],"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","title":"encode(_:)"},"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"KeyedNestedEncoder","kind":"identifier"}],"role":"symbol","title":"KeyedNestedEncoder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"title":"encode(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier","text":"UInt16"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"url":"\/documentation\/potentcodables","role":"collection"}}}
{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"sections":[],"metadata":{"role":"symbol","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"encode(_:)","symbolKind":"method","modules":[{"name":"PotentCodables"}],"roleHeading":"Instance Method"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to encode.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"text":"the current context for this format.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"},{"type":"aside","name":"Precondition","content":[{"inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"text":" ","type":"text"},{"text":"call.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","interfaceLanguage":"swift"},"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"]}],"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","type":"topic","title":"encode(_:)","kind":"symbol","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"role":"symbol","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/keyednestedencoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"title":"KeyedNestedEncoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","url":"\/documentation\/potentcodables","title":"PotentCodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"type":"topic","role":"collection"}}}
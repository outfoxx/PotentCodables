{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"text":" if the given value is invalid in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the current context for this format."}]}]},{"type":"aside","style":"note","name":"Precondition","content":[{"inlineContent":[{"type":"text","text":"May not be called after a previous "},{"code":"self.encode(_:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"call.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"]}],"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"encode(_:)","symbolKind":"method","modules":[{"name":"PotentCodables"}],"role":"symbol","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","title":"encode(_:)","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"abstract":[],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"title":"KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic"}}}
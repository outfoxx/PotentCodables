{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","role":"symbol","modules":[{"name":"PotentCodables"}],"title":"encode(_:)","roleHeading":"Instance Method","symbolKind":"method"},"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to encode."}]}],"name":"value"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"text":"the current context for this format.","type":"text"}]}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"text":" ","type":"text"},{"type":"text","text":"call."}],"type":"paragraph"}],"name":"Precondition","style":"note"}],"kind":"content"}],"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"title":"KeyedNestedEncoder","role":"symbol","navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"url":"\/documentation\/potentcodables\/keyednestedencoder","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"UInt16","preciseIdentifier":"s:s6UInt16V"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","title":"encode(_:)"},"doc://PotentCodables/documentation/PotentCodables":{"title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/potentcodables","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables"}}}
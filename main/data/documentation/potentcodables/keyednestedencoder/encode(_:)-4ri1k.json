{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"type":"text","text":"the current context for this format."}]}]},{"name":"Precondition","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"code":"self.encode(_:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","title":"encode(_:)","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s6UInt16V","text":"UInt16","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"PotentCodables"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k"},"sections":[],"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"kind":"symbol","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","role":"symbol","title":"encode(_:)","abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic","url":"\/documentation\/potentcodables","role":"collection","title":"PotentCodables"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","type":"topic","title":"KeyedNestedEncoder","abstract":[],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyedNestedEncoder"}],"navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"url":"\/documentation\/potentcodables\/keyednestedencoder"}}}
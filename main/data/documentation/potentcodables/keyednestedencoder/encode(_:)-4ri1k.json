{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k"},"kind":"symbol","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"text":"UInt16","preciseIdentifier":"s:s6UInt16V","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to encode."}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"aside","style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"type":"text","text":" if the given value is invalid in"},{"text":" ","type":"text"},{"text":"the current context for this format.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"type":"codeVoice","code":"self.encode(_:)"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}],"type":"aside","style":"note","name":"Precondition"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"metadata":{"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","symbolKind":"method","title":"encode(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"roleHeading":"Instance Method","modules":[{"name":"PotentCodables"}]},"sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"title":"encode(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","role":"symbol","url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encodes a single value of the given type."}]},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","title":"PotentCodables","role":"collection","type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"url":"\/documentation\/potentcodables\/keyednestedencoder","type":"topic","kind":"symbol","navigatorTitle":[{"text":"KeyedNestedEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyedNestedEncoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","title":"KeyedNestedEncoder","role":"symbol","abstract":[]}}}
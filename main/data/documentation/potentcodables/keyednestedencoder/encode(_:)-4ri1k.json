{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k"},"sections":[],"metadata":{"symbolKind":"method","title":"encode(_:)","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt16VKF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","modules":[{"name":"PotentCodables"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V","text":"UInt16"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}]},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to encode."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EncodingError.invalidValue"},{"type":"text","text":" if the given value is invalid in"},{"type":"text","text":" "},{"text":"the current context for this format.","type":"text"}]}],"name":"Throws"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"code":"self.encode(_:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}],"name":"Precondition"}]}],"variants":[{"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-4ri1k":{"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-4ri1k","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"kind":"symbol","type":"topic","title":"encode(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-4ri1k","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"UInt16","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt16V"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}],"title":"PotentCodables","type":"topic","kind":"symbol","url":"\/documentation\/potentcodables","role":"collection"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","kind":"symbol","role":"symbol","url":"\/documentation\/potentcodables\/keyednestedencoder","navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}],"type":"topic","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyedNestedEncoder","kind":"identifier"}],"title":"KeyedNestedEncoder"}}}
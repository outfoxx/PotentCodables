{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"((["},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/potentcodables\/keydecodingstrategy\/custom(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyDecodingStrategy\/custom(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Provide a custom conversion from the key in the encoded "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" to the"},{"type":"text","text":" "},{"type":"text","text":"keys specified by the decoded types."},{"type":"text","text":" "},{"type":"text","text":"The full path to the current decoding position is provided for context"},{"type":"text","text":" "},{"type":"text","text":"(in case you need to locate this key within the payload). The returned"},{"type":"text","text":" "},{"type":"text","text":"key is used in place of the last component in the coding path before"},{"type":"text","text":" "},{"type":"text","text":"decoding."},{"type":"text","text":" "},{"type":"text","text":"If the result of the conversion is a duplicate key, then only one value"},{"type":"text","text":" "},{"type":"text","text":"will be present in the container for the type to decode from."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"((["},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"kind":"text","text":")"}],"title":"KeyDecodingStrategy.custom(_:)","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:14PotentCodables19KeyDecodingStrategyO6customyACs06CodingC0_pSaysAE_pGccACmF","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyDecodingStrategy"]]},"references":{"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentCodables/KeyDecodingStrategy/custom(_:)":{"role":"symbol","title":"KeyDecodingStrategy.custom(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"((["},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"CodingKey","preciseIdentifier":"s:s9CodingKeyP"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Provide a custom conversion from the key in the encoded "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" to the"},{"type":"text","text":" "},{"type":"text","text":"keys specified by the decoded types."},{"type":"text","text":" "},{"type":"text","text":"The full path to the current decoding position is provided for context"},{"type":"text","text":" "},{"type":"text","text":"(in case you need to locate this key within the payload). The returned"},{"type":"text","text":" "},{"type":"text","text":"key is used in place of the last component in the coding path before"},{"type":"text","text":" "},{"type":"text","text":"decoding."},{"type":"text","text":" "},{"type":"text","text":"If the result of the conversion is a duplicate key, then only one value"},{"type":"text","text":" "},{"type":"text","text":"will be present in the container for the type to decode from."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyDecodingStrategy\/custom(_:)","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/keydecodingstrategy\/custom(_:)"},"doc://PotentCodables/documentation/PotentCodables/KeyDecodingStrategy":{"role":"symbol","title":"KeyDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyDecodingStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"url":"\/documentation\/potentcodables\/keydecodingstrategy"}}}
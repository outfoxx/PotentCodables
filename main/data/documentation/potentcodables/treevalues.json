{"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each decoder has an in memory representation known as the “tree” value. The great thing about tree values is that they"},{"type":"text","text":" "},{"text":"hold the values in their exact serialized representation.  For example, ","type":"text"},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" tree values store numbers as a"},{"type":"text","text":" "},{"text":"specialized ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON\/Number","isActive":true},{"type":"text","text":" that stores the exact number value as a string along with a number of other"},{"type":"text","text":" "},{"type":"text","text":"properties for helping the conversion of strings to integer or floating point numbers. Accessing this"},{"type":"text","text":" "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON\/Number","isActive":true,"type":"reference"},{"text":" and reading the exact decimal value serialized in JSON is available from tree values.","type":"text"}]},{"inlineContent":[{"text":"The decoders support accessing the tree value using specializations of the protocol","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValueDecodingContainer","isActive":true,"type":"reference"},{"type":"text","text":" which extends the  "},{"type":"codeVoice","code":"SingleValueDecodingContainer"},{"text":" protocol.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Decoding "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","type":"reference","isActive":true},{"type":"text","text":" values using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValueDecodingContainer"},{"text":" as follows:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["func init(from decoder: Decoder) throws {","  let treeContainer = try decoder.singleValuedContainer() as! TreeValueDecodingContainer","  self.jsonValue = try treeContainer.decodeTreeValue() as! JSON","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each tree value has the ability to “unwrap” itself (using it’s "},{"type":"codeVoice","code":"unwrapped"},{"text":" property) into it’s the best available","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"standard Swift type, returned as an  "},{"code":"Any","type":"codeVoice"},{"type":"text","text":". As an example, unwrappingthe the JSON value "},{"type":"codeVoice","code":"123.456"},{"type":"text","text":" result in a Swift"},{"type":"text","text":" "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Tree values are returned as an "},{"type":"codeVoice","code":"Any"},{"text":" to allow easy support any possible tree value. For this reason the","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValueDecodingContainer","isActive":true},{"text":" has a convenience method to access the unwrapped tree value without","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"excessive casting."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Decoding unwrapped "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},{"type":"text","text":" values using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValueDecodingContainer"},{"text":" as follows:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["func init(from decoder: Decoder) throws {","  let treeContainer = try decoder.singleValuedContainer() as! TreeValueDecodingContainer","  self.value = try treeContainer.decodeUnwrappedValue()","}"]}],"kind":"content"}],"abstract":[{"type":"text","text":"What are “tree values”?"}],"seeAlsoSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue"],"anchor":"Usage","generated":true,"title":"Usage"}],"kind":"article","sections":[],"metadata":{"title":"Tree Values","roleHeading":"Article","role":"article","modules":[{"name":"PotentCodables"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentCodables/Using-AnyValue":{"title":"Using AnyValue","kind":"article","role":"article","url":"\/documentation\/potentcodables\/using-anyvalue","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","type":"topic","abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true}]},"doc://PotentCodables/documentation/PotentJSON/JSON/Number":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Number"}],"kind":"symbol","url":"\/documentation\/potentjson\/json\/number","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON\/Number","role":"symbol","abstract":[],"title":"JSON.Number","navigatorTitle":[{"text":"Number","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","title":"Data Formats","url":"\/documentation\/potentcodables\/data-formats","role":"article","kind":"article","type":"topic","abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}]},"doc://PotentCodables/documentation/PotentJSON/JSON":{"kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/json","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","title":"JSON","navigatorTitle":[{"kind":"identifier","text":"JSON"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSON"}],"abstract":[{"text":"General JSON value.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"navigatorTitle":[{"text":"AnyValue","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"AnyValue","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"url":"\/documentation\/potentcodables\/anyvalue"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables"},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"kind":"article","url":"\/documentation\/potentcodables\/gettingstarted","abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"type":"strong","inlineContent":[{"type":"text","text":"JSON"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"YAML"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"CBOR","type":"text"}],"type":"strong"},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"text":".","type":"text"}],"title":"Getting Started with Potent Codables","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","role":"article"},"doc://PotentCodables/documentation/PotentCodables/TreeValueDecodingContainer":{"kind":"symbol","navigatorTitle":[{"text":"TreeValueDecodingContainer","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValueDecodingContainer","type":"topic","url":"\/documentation\/potentcodables\/treevaluedecodingcontainer","title":"TreeValueDecodingContainer","role":"symbol","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TreeValueDecodingContainer","kind":"identifier"}]}}}
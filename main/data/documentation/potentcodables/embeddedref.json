{"abstract":[{"type":"text","text":"A decodable type for decoding polymorphic types that include an embedded type name value."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"EmbeddedRef","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV","kind":"typeIdentifier","text":"CustomEmbeddedRef","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:14PotentCodables14DefaultTypeKeyV","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","text":"DefaultTypeKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables16DefaultTypeIndexV","text":"DefaultTypeIndex"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},{"type":"text","text":" relies upon the encoded value including a type name embedded in the keyed"},{"type":"text","text":" "},{"type":"text","text":"container it is decoding. By default the key "},{"type":"codeVoice","code":"@type"},{"text":" is used but this can be customized.","type":"text"}]},{"level":1,"anchor":"Expected-Encoded-Structure-JSON","text":"Expected Encoded Structure (JSON):","type":"heading"},{"code":["{\"@type\" : \"MyValue\", \"name\" : \"Foo\"}"],"type":"codeListing","syntax":"javascript"},{"inlineContent":[{"text":"Decoding an ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","isActive":true,"type":"reference"},{"type":"text","text":" instance will decode the value to its "},{"type":"codeVoice","code":"value"},{"type":"text","text":" property,"},{"type":"text","text":" "},{"type":"text","text":"which can then be accesed in a number of ways."}],"type":"paragraph"},{"level":1,"anchor":"Example","type":"heading","text":"Example:"},{"type":"codeListing","code":["DefaultTypeIndex.setAllowedTypes([MyValue.self])","","myValue = container.decode(EmbeddedRef.self).value as! MyValue"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the example, "},{"code":"MyValue","type":"codeVoice"},{"type":"text","text":" can be a concrete type or protocol, either works fine. Alternatively, the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)"},{"type":"text","text":" method can be used to require the value be of a specific type and throw"},{"type":"text","text":" "},{"text":"a decoding related error if it is not, as in:","type":"text"}]},{"code":["myValue = container.decode(EmbeddedRef.self).as(MyValue.self)"],"type":"codeListing","syntax":null},{"anchor":"Requires","level":1,"type":"heading","text":"Requires:"},{"type":"paragraph","inlineContent":[{"text":"Keyed Container","type":"text"}]},{"inlineContent":[{"text":"Due to the type name being embedded in the key-value pairs of value’s container, the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"encoded value "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be a keyed container, it cannot be an unkeyed or"},{"text":" ","type":"text"},{"type":"text","text":"single-value container."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","isActive":true,"type":"reference"},{"text":" is provided to support encoding\/decoding of “general” values of any","type":"text"},{"type":"text","text":" "},{"text":"structure.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Type Alias","title":"EmbeddedRef","symbolKind":"typealias","modules":[{"name":"PotentCodables"}],"externalID":"s:14PotentCodables11EmbeddedRefa","role":"symbol","navigatorTitle":[{"text":"EmbeddedRef","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmbeddedRef"}]},"variants":[{"paths":["\/documentation\/potentcodables\/embeddedref"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCodables/Ref":{"abstract":[{"type":"text","text":"A decodable type for decoding general polymorphic types."}],"title":"Ref","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Ref","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Ref","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","url":"\/documentation\/potentcodables\/ref"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","abstract":[{"type":"text","text":"Default type key provider using "},{"code":"@type","type":"codeVoice"},{"type":"text","text":" as the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey"}],"role":"symbol","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypekey","title":"DefaultTypeKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultTypeKey"}],"navigatorTitle":[{"text":"DefaultTypeKey","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef/as(_:)":{"type":"topic","kind":"symbol","title":"as(_:)","abstract":[{"type":"text","text":"Method attempts a conversion to the provided type "},{"type":"codeVoice","code":"V"},{"type":"text","text":" and throws a"},{"type":"text","text":" "},{"text":"related ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error","isActive":true},{"text":" if it fails.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"V"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp","kind":"typeIdentifier","text":"V"},{"kind":"text","text":".Type) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp","text":"V"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)","role":"symbol","url":"\/documentation\/potentcodables\/customembeddedref\/as(_:)"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey/typeKey":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"typeKey","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14PotentCodables12AnyCodingKeyV","text":"AnyCodingKey","kind":"typeIdentifier"}],"url":"\/documentation\/potentcodables\/defaulttypekey\/typekey","title":"typeKey","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey"},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomEmbeddedRef"}],"navigatorTitle":[{"text":"CustomEmbeddedRef","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","url":"\/documentation\/potentcodables\/customembeddedref","title":"CustomEmbeddedRef","abstract":[{"type":"text","text":"The implementation type for "},{"type":"codeVoice","code":"EmbeddedRef"},{"text":" types.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Refs/Error":{"type":"topic","kind":"symbol","title":"Refs.Error","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error","role":"symbol","url":"\/documentation\/potentcodables\/refs\/error","navigatorTitle":[{"kind":"identifier","text":"Error"}]},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/embeddedref","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmbeddedRef","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedRef"}],"title":"EmbeddedRef","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","abstract":[{"type":"text","text":"Default type index that uses a simple global map that can be updated"},{"text":" ","type":"text"},{"text":"by clients.","type":"text"}],"url":"\/documentation\/potentcodables\/defaulttypeindex","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DefaultTypeIndex"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DefaultTypeIndex","kind":"identifier"}],"title":"DefaultTypeIndex"}}}
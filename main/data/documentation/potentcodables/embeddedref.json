{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A decodable type for decoding polymorphic types that include an embedded type name value."}],"metadata":{"modules":[{"name":"PotentCodables"}],"title":"EmbeddedRef","roleHeading":"Type Alias","externalID":"s:14PotentCodables11EmbeddedRefa","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmbeddedRef","kind":"identifier"}],"navigatorTitle":[{"text":"EmbeddedRef","kind":"identifier"}],"role":"symbol","symbolKind":"typealias"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmbeddedRef"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"CustomEmbeddedRef","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV"},{"kind":"text","text":"<"},{"text":"DefaultTypeKey","preciseIdentifier":"s:14PotentCodables14DefaultTypeKeyV","kind":"typeIdentifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"DefaultTypeIndex","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","preciseIdentifier":"s:14PotentCodables16DefaultTypeIndexV"},{"text":">","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","isActive":true},{"text":" relies upon the encoded value including a type name embedded in the keyed","type":"text"},{"type":"text","text":" "},{"text":"container it is decoding. By default the key ","type":"text"},{"code":"@type","type":"codeVoice"},{"type":"text","text":" is used but this can be customized."}]},{"level":1,"type":"heading","text":"Expected Encoded Structure (JSON):","anchor":"Expected-Encoded-Structure-JSON"},{"type":"codeListing","syntax":"javascript","code":["{\"@type\" : \"MyValue\", \"name\" : \"Foo\"}"]},{"inlineContent":[{"text":"Decoding an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},{"text":" instance will decode the value to its ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" property,","type":"text"},{"text":" ","type":"text"},{"text":"which can then be accesed in a number of ways.","type":"text"}],"type":"paragraph"},{"anchor":"Example","type":"heading","level":1,"text":"Example:"},{"code":["DefaultTypeIndex.setAllowedTypes([MyValue.self])","","myValue = container.decode(EmbeddedRef.self).value as! MyValue"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the example, "},{"type":"codeVoice","code":"MyValue"},{"text":" can be a concrete type or protocol, either works fine. Alternatively, the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)","type":"reference"},{"type":"text","text":" method can be used to require the value be of a specific type and throw"},{"text":" ","type":"text"},{"text":"a decoding related error if it is not, as in:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["myValue = container.decode(EmbeddedRef.self).as(MyValue.self)"]},{"anchor":"Requires","level":1,"text":"Requires:","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Keyed Container","type":"text"}]},{"inlineContent":[{"type":"text","text":"Due to the type name being embedded in the key-value pairs of value’s container, the"},{"text":" ","type":"text"},{"text":"encoded value ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"type":"text","text":" be a keyed container, it cannot be an unkeyed or"},{"type":"text","text":" "},{"type":"text","text":"single-value container."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","isActive":true},{"type":"text","text":" is provided to support encoding\/decoding of “general” values of any"},{"type":"text","text":" "},{"type":"text","text":"structure."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/embeddedref"]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef/as(_:)":{"url":"\/documentation\/potentcodables\/customembeddedref\/as(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)","title":"as(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Method attempts a conversion to the provided type ","type":"text"},{"code":"V","type":"codeVoice"},{"text":" and throws a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"related "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error"},{"type":"text","text":" if it fails."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`as`"},{"text":"<","kind":"text"},{"text":"V","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp","text":"V"},{"kind":"text","text":".Type) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"V","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp","kind":"typeIdentifier"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey":{"navigatorTitle":[{"kind":"identifier","text":"DefaultTypeKey"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultTypeKey","kind":"identifier"}],"type":"topic","url":"\/documentation\/potentcodables\/defaulttypekey","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","kind":"symbol","abstract":[{"text":"Default type key provider using ","type":"text"},{"code":"@type","type":"codeVoice"},{"text":" as the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey"}],"title":"DefaultTypeKey"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultTypeIndex"}],"url":"\/documentation\/potentcodables\/defaulttypeindex","navigatorTitle":[{"text":"DefaultTypeIndex","kind":"identifier"}],"title":"DefaultTypeIndex","role":"symbol","abstract":[{"type":"text","text":"Default type index that uses a simple global map that can be updated"},{"type":"text","text":" "},{"type":"text","text":"by clients."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef":{"role":"symbol","navigatorTitle":[{"text":"CustomEmbeddedRef","kind":"identifier"}],"kind":"symbol","title":"CustomEmbeddedRef","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","abstract":[{"type":"text","text":"The implementation type for "},{"type":"codeVoice","code":"EmbeddedRef"},{"text":" types.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomEmbeddedRef"}],"type":"topic","url":"\/documentation\/potentcodables\/customembeddedref"},"doc://PotentCodables/documentation/PotentCodables/Refs/Error":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Error"}],"kind":"symbol","title":"Refs.Error","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}],"type":"topic","url":"\/documentation\/potentcodables\/refs\/error"},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","kind":"symbol","role":"collection","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey/typeKey":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"typeKey","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14PotentCodables12AnyCodingKeyV","text":"AnyCodingKey","kind":"typeIdentifier"}],"type":"topic","abstract":[],"url":"\/documentation\/potentcodables\/defaulttypekey\/typekey","title":"typeKey","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey"},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EmbeddedRef"}],"kind":"symbol","title":"EmbeddedRef","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmbeddedRef"}],"type":"topic","url":"\/documentation\/potentcodables\/embeddedref"},"doc://PotentCodables/documentation/PotentCodables/Ref":{"navigatorTitle":[{"text":"Ref","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Ref"}],"title":"Ref","abstract":[{"text":"A decodable type for decoding general polymorphic types.","type":"text"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","kind":"symbol","url":"\/documentation\/potentcodables\/ref"}}}
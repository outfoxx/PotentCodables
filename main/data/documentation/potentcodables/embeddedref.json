{"abstract":[{"type":"text","text":"A decodable type for decoding polymorphic types that include an embedded type name value."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/potentcodables\/embeddedref"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedRef","kind":"identifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","text":"CustomEmbeddedRef"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:14PotentCodables14DefaultTypeKeyV","kind":"typeIdentifier","text":"DefaultTypeKey","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables16DefaultTypeIndexV","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","text":"DefaultTypeIndex"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},{"text":" relies upon the encoded value including a type name embedded in the keyed","type":"text"},{"type":"text","text":" "},{"text":"container it is decoding. By default the key ","type":"text"},{"type":"codeVoice","code":"@type"},{"type":"text","text":" is used but this can be customized."}],"type":"paragraph"},{"text":"Expected Encoded Structure (JSON):","level":1,"anchor":"Expected-Encoded-Structure-JSON","type":"heading"},{"code":["{\"@type\" : \"MyValue\", \"name\" : \"Foo\"}"],"type":"codeListing","syntax":"javascript"},{"type":"paragraph","inlineContent":[{"text":"Decoding an ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","isActive":true,"type":"reference"},{"text":" instance will decode the value to its ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" property,"},{"text":" ","type":"text"},{"type":"text","text":"which can then be accesed in a number of ways."}]},{"level":1,"text":"Example:","type":"heading","anchor":"Example"},{"syntax":null,"code":["DefaultTypeIndex.setAllowedTypes([MyValue.self])","","myValue = container.decode(EmbeddedRef.self).value as! MyValue"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In the example, "},{"type":"codeVoice","code":"MyValue"},{"type":"text","text":" can be a concrete type or protocol, either works fine. Alternatively, the"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)"},{"text":" method can be used to require the value be of a specific type and throw","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a decoding related error if it is not, as in:"}],"type":"paragraph"},{"code":["myValue = container.decode(EmbeddedRef.self).as(MyValue.self)"],"type":"codeListing","syntax":null},{"anchor":"Requires","type":"heading","level":1,"text":"Requires:"},{"inlineContent":[{"text":"Keyed Container","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Due to the type name being embedded in the key-value pairs of value’s container, the"},{"type":"text","text":" "},{"type":"text","text":"encoded value "},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"type":"text","text":" be a keyed container, it cannot be an unkeyed or"},{"type":"text","text":" "},{"type":"text","text":"single-value container."}],"type":"paragraph"},{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","isActive":true,"type":"reference"},{"text":" is provided to support encoding\/decoding of “general” values of any","type":"text"},{"text":" ","type":"text"},{"text":"structure.","type":"text"}],"type":"paragraph"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"EmbeddedRef","kind":"identifier"}],"role":"symbol","symbolKind":"typealias","roleHeading":"Type Alias","modules":[{"name":"PotentCodables"}],"externalID":"s:14PotentCodables11EmbeddedRefa","title":"EmbeddedRef","navigatorTitle":[{"kind":"identifier","text":"EmbeddedRef"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"kind":"symbol","sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey/typeKey":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypekey\/typekey","role":"symbol","title":"typeKey","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"typeKey","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnyCodingKey","kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables12AnyCodingKeyV"}],"abstract":[],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef":{"role":"symbol","type":"topic","url":"\/documentation\/potentcodables\/customembeddedref","kind":"symbol","abstract":[{"type":"text","text":"The implementation type for "},{"type":"codeVoice","code":"EmbeddedRef"},{"type":"text","text":" types."}],"title":"CustomEmbeddedRef","navigatorTitle":[{"text":"CustomEmbeddedRef","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomEmbeddedRef"}]},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef/as(_:)":{"url":"\/documentation\/potentcodables\/customembeddedref\/as(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`as`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"text":">(","kind":"text"},{"text":"V","kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"V","kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)","type":"topic","title":"as(_:)","abstract":[{"type":"text","text":"Method attempts a conversion to the provided type "},{"code":"V","type":"codeVoice"},{"type":"text","text":" and throws a"},{"type":"text","text":" "},{"type":"text","text":"related "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error"},{"type":"text","text":" if it fails."}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey":{"abstract":[{"text":"Default type key provider using ","type":"text"},{"code":"@type","type":"codeVoice"},{"type":"text","text":" as the "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey","isActive":true}],"title":"DefaultTypeKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultTypeKey"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","navigatorTitle":[{"text":"DefaultTypeKey","kind":"identifier"}],"url":"\/documentation\/potentcodables\/defaulttypekey","kind":"symbol","role":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"navigatorTitle":[{"kind":"identifier","text":"DefaultTypeIndex"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex","role":"symbol","title":"DefaultTypeIndex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DefaultTypeIndex","kind":"identifier"}],"abstract":[{"text":"Default type index that uses a simple global map that can be updated","type":"text"},{"type":"text","text":" "},{"text":"by clients.","type":"text"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Ref":{"url":"\/documentation\/potentcodables\/ref","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","kind":"symbol","role":"symbol","title":"Ref","navigatorTitle":[{"text":"Ref","kind":"identifier"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ref","kind":"identifier"}],"abstract":[{"text":"A decodable type for decoding general polymorphic types.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"url":"\/documentation\/potentcodables","role":"collection"},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","navigatorTitle":[{"text":"EmbeddedRef","kind":"identifier"}],"abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"url":"\/documentation\/potentcodables\/embeddedref","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedRef","kind":"identifier"}],"role":"symbol","title":"EmbeddedRef","type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/Refs/Error":{"type":"topic","url":"\/documentation\/potentcodables\/refs\/error","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"kind":"identifier","text":"Error"}],"title":"Refs.Error","abstract":[],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error"}}}
{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"text":"DefaultTypeIndex","kind":"identifier"}],"externalID":"s:14PotentCodables16DefaultTypeIndexV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultTypeIndex","kind":"identifier"}],"role":"symbol","roleHeading":"Structure","symbolKind":"struct","title":"DefaultTypeIndex","modules":[{"name":"PotentCodables"}]},"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)"],"generated":true,"anchor":"Type-Methods","title":"Type Methods"}],"abstract":[{"text":"Default type index that uses a simple global map that can be updated","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"by clients."}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex"],"kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultTypeIndex","kind":"identifier"}],"platforms":["macOS"]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"Type ids are generated as the “simple” type name. E.g. a struct declared as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"struct MyType {}"},{"text":" will use the type id ","type":"text"},{"type":"codeVoice","code":"MyType"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The list of allowed types can be updated by using the method","type":"text"},{"text":" ","type":"text"},{"code":"setAllowedTypes(:)","type":"codeVoice"},{"text":" which will generate an appropriate type id for each","type":"text"},{"type":"text","text":" "},{"text":"provided type and assign them to the map of allowed types.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note: The initial map of allowed types is empty and must be provided"},{"text":" ","type":"text"},{"text":"by clients prior to using ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","isActive":true},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/potentcodables\/defaulttypeindex"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"references":{"doc://PotentCodables/documentation/PotentCodables/Ref":{"abstract":[{"type":"text","text":"A decodable type for decoding general polymorphic types."}],"title":"Ref","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Ref","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Ref","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","url":"\/documentation\/potentcodables\/ref"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","abstract":[{"type":"text","text":"Default type index that uses a simple global map that can be updated"},{"text":" ","type":"text"},{"text":"by clients.","type":"text"}],"url":"\/documentation\/potentcodables\/defaulttypeindex","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DefaultTypeIndex"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DefaultTypeIndex","kind":"identifier"}],"title":"DefaultTypeIndex"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/addAllowedTypes(_:)":{"type":"topic","abstract":[{"text":"Set the allowed types to the given array after mapping them using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)"},{"type":"text","text":"."}],"url":"\/documentation\/potentcodables\/defaulttypeindex\/addallowedtypes(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addAllowedTypes"},{"kind":"text","text":"(["},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"text":".Type])","kind":"text"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","title":"addAllowedTypes(_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/setAllowedTypes(_:)":{"url":"\/documentation\/potentcodables\/defaulttypeindex\/setallowedtypes(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Set the allowed types to the given array after mapping them using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setAllowedTypes","kind":"identifier"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"text":".Type])","kind":"text"}],"title":"setAllowedTypes(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/findType(id:)":{"type":"topic","kind":"symbol","title":"findType(id:)","abstract":[{"type":"text","text":"Find the associated tyoe for the given type id."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"findType","kind":"identifier"},{"kind":"text","text":"("},{"text":"id","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"text":"Decodable","preciseIdentifier":"s:Se","kind":"typeIdentifier"},{"text":".Type?","kind":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","role":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex\/findtype(id:)"},"doc://PotentCodables/documentation/PotentCodables/TypeIndex":{"abstract":[{"text":"Provides static functions for looking up types by id for decoding","type":"text"},{"type":"text","text":" "},{"text":"and generating type ids for types during encoding.","type":"text"}],"role":"symbol","url":"\/documentation\/potentcodables\/typeindex","title":"TypeIndex","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeIndex"}],"navigatorTitle":[{"kind":"identifier","text":"TypeIndex"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/mapAllowedTypes(_:)":{"type":"topic","abstract":[{"text":"Maps the given array of types to their generated type id and returns the dictionary.","type":"text"}],"url":"\/documentation\/potentcodables\/defaulttypeindex\/mapallowedtypes(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapAllowedTypes"},{"text":"([","kind":"text"},{"text":"Decodable","preciseIdentifier":"s:Se","kind":"typeIdentifier"},{"kind":"text","text":".Type]) -> ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Decodable","preciseIdentifier":"s:Se","kind":"typeIdentifier"},{"kind":"text","text":".Type]"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","title":"mapAllowedTypes(_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/typeId(of:)":{"url":"\/documentation\/potentcodables\/defaulttypeindex\/typeid(of:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Find the type id of the given type."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"typeId","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"title":"typeId(of:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)"},"doc://PotentCodables/documentation/PotentCodables":{"role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","title":"PotentCodables","url":"\/documentation\/potentcodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" system"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/embeddedref","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmbeddedRef","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedRef"}],"title":"EmbeddedRef","kind":"symbol"}}}
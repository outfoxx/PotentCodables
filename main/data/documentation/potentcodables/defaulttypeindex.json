{"relationshipsSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DefaultTypeIndex","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"Type ids are generated as the “simple” type name. E.g. a struct declared as"},{"text":" ","type":"text"},{"type":"codeVoice","code":"struct MyType {}"},{"type":"text","text":" will use the type id "},{"code":"MyType","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The list of allowed types can be updated by using the method","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"setAllowedTypes(:)"},{"type":"text","text":" which will generate an appropriate type id for each"},{"type":"text","text":" "},{"type":"text","text":"provided type and assign them to the map of allowed types."}]},{"inlineContent":[{"type":"text","text":"Note: The initial map of allowed types is empty and must be provided"},{"text":" ","type":"text"},{"type":"text","text":"by clients prior to using "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},{"type":"text","text":"."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/defaulttypeindex"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Default type index that uses a simple global map that can be updated"},{"type":"text","text":" "},{"text":"by clients.","type":"text"}],"topicSections":[{"title":"Type Methods","anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)"]}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DefaultTypeIndex","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","externalID":"s:14PotentCodables16DefaultTypeIndexV","navigatorTitle":[{"text":"DefaultTypeIndex","kind":"identifier"}],"role":"symbol","title":"DefaultTypeIndex","modules":[{"name":"PotentCodables"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/typeId(of:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"typeId","kind":"identifier"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)","abstract":[{"type":"text","text":"Find the type id of the given type."}],"kind":"symbol","role":"symbol","title":"typeId(of:)","url":"\/documentation\/potentcodables\/defaulttypeindex\/typeid(of:)"},"doc://PotentCodables/documentation/PotentCodables/TypeIndex":{"title":"TypeIndex","url":"\/documentation\/potentcodables\/typeindex","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypeIndex"}],"role":"symbol","abstract":[{"type":"text","text":"Provides static functions for looking up types by id for decoding"},{"type":"text","text":" "},{"text":"and generating type ids for types during encoding.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"TypeIndex","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","navigatorTitle":[{"kind":"identifier","text":"EmbeddedRef"}],"role":"symbol","url":"\/documentation\/potentcodables\/embeddedref","type":"topic","title":"EmbeddedRef","abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EmbeddedRef"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/findType(id:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"findType"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"kind":"text","text":".Type?"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","abstract":[{"text":"Find the associated tyoe for the given type id.","type":"text"}],"kind":"symbol","role":"symbol","title":"findType(id:)","url":"\/documentation\/potentcodables\/defaulttypeindex\/findtype(id:)"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"role":"symbol","navigatorTitle":[{"text":"DefaultTypeIndex","kind":"identifier"}],"title":"DefaultTypeIndex","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultTypeIndex"}],"url":"\/documentation\/potentcodables\/defaulttypeindex","abstract":[{"type":"text","text":"Default type index that uses a simple global map that can be updated"},{"type":"text","text":" "},{"type":"text","text":"by clients."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","title":"PotentCodables","role":"collection","type":"topic","url":"\/documentation\/potentcodables","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" system","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/Ref":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","navigatorTitle":[{"text":"Ref","kind":"identifier"}],"role":"symbol","url":"\/documentation\/potentcodables\/ref","type":"topic","title":"Ref","abstract":[{"type":"text","text":"A decodable type for decoding general polymorphic types."}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ref"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/setAllowedTypes(_:)":{"title":"setAllowedTypes(_:)","url":"\/documentation\/potentcodables\/defaulttypeindex\/setallowedtypes(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)","abstract":[{"type":"text","text":"Set the allowed types to the given array after mapping them using "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","isActive":true},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setAllowedTypes","kind":"identifier"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"kind":"text","text":".Type])"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/mapAllowedTypes(_:)":{"title":"mapAllowedTypes(_:)","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mapAllowedTypes"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"text":".Type]) -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"},{"text":".Type]","kind":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex\/mapallowedtypes(_:)","abstract":[{"type":"text","text":"Maps the given array of types to their generated type id and returns the dictionary."}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/addAllowedTypes(_:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addAllowedTypes"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"text":".Type])","kind":"text"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","abstract":[{"text":"Set the allowed types to the given array after mapping them using ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","isActive":true},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"addAllowedTypes(_:)","url":"\/documentation\/potentcodables\/defaulttypeindex\/addallowedtypes(_:)"}}}
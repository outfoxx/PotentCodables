{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DefaultTypeIndex"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Type ids are generated as the “simple” type name. E.g. a struct declared as"},{"type":"text","text":" "},{"code":"struct MyType {}","type":"codeVoice"},{"type":"text","text":" will use the type id "},{"type":"codeVoice","code":"MyType"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"The list of allowed types can be updated by using the method"},{"type":"text","text":" "},{"type":"codeVoice","code":"setAllowedTypes(:)"},{"type":"text","text":" which will generate an appropriate type id for each"},{"type":"text","text":" "},{"type":"text","text":"provided type and assign them to the map of allowed types."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Note: The initial map of allowed types is empty and must be provided","type":"text"},{"text":" ","type":"text"},{"text":"by clients prior to using ","type":"text"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","type":"reference"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","type":"reference","isActive":true},{"text":".","type":"text"}]}]}],"metadata":{"symbolKind":"struct","role":"symbol","externalID":"s:14PotentCodables16DefaultTypeIndexV","navigatorTitle":[{"text":"DefaultTypeIndex","kind":"identifier"}],"title":"DefaultTypeIndex","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultTypeIndex","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"PotentCodables"}]},"abstract":[{"text":"Default type index that uses a simple global map that can be updated","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"by clients."}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/defaulttypeindex"]}],"sections":[],"topicSections":[{"anchor":"Type-Methods","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)"],"title":"Type Methods","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex"],"type":"conformsTo","title":"Conforms To"}],"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/mapAllowedTypes(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mapAllowedTypes","kind":"identifier"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"text":".Type]) -> [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"kind":"text","text":".Type]"}],"role":"symbol","title":"mapAllowedTypes(_:)","abstract":[{"text":"Maps the given array of types to their generated type id and returns the dictionary.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex\/mapallowedtypes(_:)","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/setAllowedTypes(_:)":{"title":"setAllowedTypes(_:)","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex\/setallowedtypes(_:)","abstract":[{"type":"text","text":"Set the allowed types to the given array after mapping them using "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","isActive":true},{"type":"text","text":"."}],"type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/setAllowedTypes(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setAllowedTypes"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"kind":"text","text":".Type])"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/typeId(of:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/typeId(of:)","kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex\/typeid(of:)","type":"topic","title":"typeId(of:)","abstract":[{"type":"text","text":"Find the type id of the given type."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"typeId","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type) -> "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/findType(id:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/findType(id:)","abstract":[{"type":"text","text":"Find the associated tyoe for the given type id."}],"role":"symbol","title":"findType(id:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"findType"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"kind":"text","text":".Type?"}],"url":"\/documentation\/potentcodables\/defaulttypeindex\/findtype(id:)"},"doc://PotentCodables/documentation/PotentCodables":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"type":"text","text":"A potent set of implementations and extensions to the Swift "},{"type":"codeVoice","code":"Codable"},{"text":" system","type":"text"}],"url":"\/documentation\/potentcodables","title":"PotentCodables","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Ref":{"type":"topic","abstract":[{"type":"text","text":"A decodable type for decoding general polymorphic types."}],"title":"Ref","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Ref","kind":"identifier"}],"navigatorTitle":[{"text":"Ref","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","url":"\/documentation\/potentcodables\/ref"},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DefaultTypeIndex","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentcodables\/defaulttypeindex","abstract":[{"type":"text","text":"Default type index that uses a simple global map that can be updated"},{"type":"text","text":" "},{"text":"by clients.","type":"text"}],"title":"DefaultTypeIndex","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","type":"topic","navigatorTitle":[{"text":"DefaultTypeIndex","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex/addAllowedTypes(_:)":{"title":"addAllowedTypes(_:)","url":"\/documentation\/potentcodables\/defaulttypeindex\/addallowedtypes(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addAllowedTypes","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"},{"kind":"text","text":".Type])"}],"abstract":[{"type":"text","text":"Set the allowed types to the given array after mapping them using "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/mapAllowedTypes(_:)","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex\/addAllowedTypes(_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"type":"topic","abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"title":"EmbeddedRef","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"EmbeddedRef","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedRef"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","url":"\/documentation\/potentcodables\/embeddedref"},"doc://PotentCodables/documentation/PotentCodables/TypeIndex":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TypeIndex","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentcodables\/typeindex","abstract":[{"text":"Provides static functions for looking up types by id for decoding","type":"text"},{"text":" ","type":"text"},{"text":"and generating type ids for types during encoding.","type":"text"}],"title":"TypeIndex","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TypeIndex","type":"topic","navigatorTitle":[{"text":"TypeIndex","kind":"identifier"}]}}}
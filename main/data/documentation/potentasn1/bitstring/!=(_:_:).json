{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/potentasn1\/bitstring\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/BitString\/!=(_:_:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN19BitStringV","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"role":"symbol","roleHeading":"Operator","title":"!=(_:_:)","symbolKind":"op","extendedModule":"Swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/BitString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/BitString\/Equatable-Implementations"]]},"sections":[],"references":{"doc://PotentCodables/documentation/PotentASN1/BitString/!=(_:_:)":{"title":"!=(_:_:)","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/BitString\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"url":"\/documentation\/potentasn1\/bitstring\/!=(_:_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://PotentCodables/documentation/PotentASN1":{"abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","title":"PotentASN1","role":"collection","url":"\/documentation\/potentasn1"},"doc://PotentCodables/documentation/PotentASN1/BitString":{"title":"BitString","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BitString","kind":"identifier"}],"abstract":[{"text":"ASN.1 ","type":"text"},{"type":"codeVoice","code":"BIT STRING"},{"text":" value.","type":"text"}],"url":"\/documentation\/potentasn1\/bitstring","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/BitString","type":"topic","navigatorTitle":[{"text":"BitString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1/BitString/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/BitString\/Equatable-Implementations","role":"collectionGroup","kind":"article","title":"Equatable Implementations","type":"topic","abstract":[],"url":"\/documentation\/potentasn1\/bitstring\/equatable-implementations"}}}
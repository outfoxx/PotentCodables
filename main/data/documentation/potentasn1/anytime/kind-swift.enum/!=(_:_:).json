{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/!=(_:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}],"name":"lhs"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/potentasn1\/anytime\/kind-swift.enum\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/Equatable-Implementations"]]},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"title":"!=(_:_:)","roleHeading":"Operator","extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","symbolKind":"op","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN17AnyTimeV4KindO"},"kind":"symbol","sections":[],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyTime/Kind-swift.enum":{"title":"AnyTime.Kind","role":"symbol","url":"\/documentation\/potentasn1\/anytime\/kind-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Kind","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Kind","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum","abstract":[{"type":"text","text":"Kind of ASN.1 time."}]},"doc://PotentCodables/documentation/PotentASN1":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1","kind":"symbol","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyTime":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime","role":"symbol","type":"topic","title":"AnyTime","navigatorTitle":[{"text":"AnyTime","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyTime"}],"abstract":[{"text":"Allows encoding ","type":"text"},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" ASN.1 time value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}],"url":"\/documentation\/potentasn1\/anytime"},"doc://PotentCodables/documentation/PotentASN1/AnyTime/Kind-swift.enum/!=(_:_:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/!=(_:_:)","url":"\/documentation\/potentasn1\/anytime\/kind-swift.enum\/!=(_:_:)","title":"!=(_:_:)","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}]},"doc://PotentCodables/documentation/PotentASN1/AnyTime/Kind-swift.enum/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/Equatable-Implementations","type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/potentasn1\/anytime\/kind-swift.enum\/equatable-implementations","title":"Equatable Implementations"}}}
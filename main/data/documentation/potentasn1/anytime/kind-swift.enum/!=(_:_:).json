{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"!=(_:_:)","symbolKind":"op","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"role":"symbol","roleHeading":"Operator","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN17AnyTimeV4KindO","extendedModule":"Swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anytime\/kind-swift.enum\/!=(_:_:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/Equatable-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}],"name":"lhs"},{"content":[{"inlineContent":[{"text":"Another value to compare.","type":"text"}],"type":"paragraph"}],"name":"rhs"}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/!=(_:_:)"},"sections":[],"references":{"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","title":"PotentASN1","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyTime":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyTime"}],"abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 time value while allowing control of the"},{"text":" ","type":"text"},{"text":"specific ASN.1 tag.","type":"text"}],"url":"\/documentation\/potentasn1\/anytime","navigatorTitle":[{"text":"AnyTime","kind":"identifier"}],"title":"AnyTime"},"doc://PotentCodables/documentation/PotentASN1/AnyTime/Kind-swift.enum":{"title":"AnyTime.Kind","role":"symbol","abstract":[{"text":"Kind of ASN.1 time.","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Kind"}],"kind":"symbol","url":"\/documentation\/potentasn1\/anytime\/kind-swift.enum","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum","navigatorTitle":[{"text":"Kind","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1/AnyTime/Kind-swift.enum/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/Equatable-Implementations","role":"collectionGroup","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/potentasn1\/anytime\/kind-swift.enum\/equatable-implementations","title":"Equatable Implementations"},"doc://PotentCodables/documentation/PotentASN1/AnyTime/Kind-swift.enum/!=(_:_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Kind-swift.enum\/!=(_:_:)","role":"symbol","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"type":"topic","url":"\/documentation\/potentasn1\/anytime\/kind-swift.enum\/!=(_:_:)","kind":"symbol"}}}
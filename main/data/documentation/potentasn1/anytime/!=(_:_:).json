{"variants":[{"paths":["\/documentation\/potentasn1\/anytime\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN17AnyTimeV","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"extendedModule":"Swift","title":"!=(_:_:)","symbolKind":"op","roleHeading":"Operator"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}],"name":"rhs"}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Equatable-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/!=(_:_:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","type":"topic","url":"\/documentation\/potentasn1","title":"PotentASN1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection"},"doc://PotentCodables/documentation/PotentASN1/AnyTime/!=(_:_:)":{"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/!=(_:_:)","role":"symbol","title":"!=(_:_:)","kind":"symbol","url":"\/documentation\/potentasn1\/anytime\/!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyTime/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime\/Equatable-Implementations","type":"topic","abstract":[],"title":"Equatable Implementations","kind":"article","url":"\/documentation\/potentasn1\/anytime\/equatable-implementations","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentASN1/AnyTime":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyTime","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyTime"}],"title":"AnyTime","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 time value while allowing control of the"},{"type":"text","text":" "},{"text":"specific ASN.1 tag.","type":"text"}],"url":"\/documentation\/potentasn1\/anytime","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyTime","type":"topic","role":"symbol","kind":"symbol"}}}
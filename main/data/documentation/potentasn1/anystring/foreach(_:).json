{"abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"type":"text","text":" "},{"text":"as a ","type":"text"},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"type":"text","text":" loop."}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/forEach(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"forEach"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as a"},{"type":"text","text":" "},{"text":"parameter.","type":"text"}]}],"name":"body"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"The two loops in the following example produce the same output:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numberWords = [\"one\", \"two\", \"three\"]","for word in numberWords {","    print(word)","}","\/\/ Prints \"one\"","\/\/ Prints \"two\"","\/\/ Prints \"three\"","","numberWords.forEach { word in","    print(word)","}","\/\/ Same as above"]},{"type":"paragraph","inlineContent":[{"text":"Using the ","type":"text"},{"type":"codeVoice","code":"forEach"},{"text":" method is distinct from a ","type":"text"},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop in two"},{"text":" ","type":"text"},{"text":"important ways:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"You cannot use a ","type":"text"},{"code":"break","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"continue","type":"codeVoice"},{"type":"text","text":" statement to exit the current"},{"text":" ","type":"text"},{"type":"text","text":"call of the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure or skip subsequent calls."}]}]},{"content":[{"inlineContent":[{"text":"Using the ","type":"text"},{"code":"return","type":"codeVoice"},{"text":" statement in the ","type":"text"},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure will exit only from"},{"type":"text","text":" "},{"type":"text","text":"the current call to "},{"type":"codeVoice","code":"body"},{"type":"text","text":", not from any outer scope, and wonâ€™t skip"},{"text":" ","type":"text"},{"text":"subsequent calls.","type":"text"}],"type":"paragraph"}]}]}]}],"metadata":{"externalID":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:10PotentASN19AnyStringV","extendedModule":"Swift","title":"forEach(_:)","role":"symbol","symbolKind":"method","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"roleHeading":"Instance Method"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/foreach(_:)"]}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/forEach(_:)":{"kind":"symbol","type":"topic","title":"forEach(_:)","url":"\/documentation\/potentasn1\/anystring\/foreach(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/forEach(_:)","role":"symbol","abstract":[{"text":"Calls the given closure on each element in the sequence in the same order","type":"text"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"code":"for","type":"codeVoice"},{"text":"-","type":"text"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}]},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","kind":"symbol","url":"\/documentation\/potentasn1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","url":"\/documentation\/potentasn1\/anystring","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyString","kind":"identifier"}],"title":"AnyString","type":"topic","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Allows encoding ","type":"text"},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","title":"Sequence Implementations","role":"collectionGroup"}}}
{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/forEach(_:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"body","kind":"internalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"body","content":[{"inlineContent":[{"text":"A closure that takes an element of the sequence as a","type":"text"},{"type":"text","text":" "},{"text":"parameter.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The two loops in the following example produce the same output:"}]},{"type":"codeListing","syntax":null,"code":["let numberWords = [\"one\", \"two\", \"three\"]","for word in numberWords {","    print(word)","}","\/\/ Prints \"one\"","\/\/ Prints \"two\"","\/\/ Prints \"three\"","","numberWords.forEach { word in","    print(word)","}","\/\/ Same as above"]},{"inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":" method is distinct from a "},{"code":"for","type":"codeVoice"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"text":" loop in two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"important ways:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"You cannot use a ","type":"text"},{"type":"codeVoice","code":"break"},{"text":" or ","type":"text"},{"code":"continue","type":"codeVoice"},{"text":" statement to exit the current","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"call of the "},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure or skip subsequent calls."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"return"},{"type":"text","text":" statement in the "},{"code":"body","type":"codeVoice"},{"type":"text","text":" closure will exit only from"},{"text":" ","type":"text"},{"type":"text","text":"the current call to "},{"code":"body","type":"codeVoice"},{"type":"text","text":", not from any outer scope, and wonâ€™t skip"},{"type":"text","text":" "},{"type":"text","text":"subsequent calls."}]}]}],"type":"orderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/foreach(_:)"]}],"abstract":[{"text":"Calls the given closure on each element in the sequence in the same order","type":"text"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"type":"codeVoice","code":"in"},{"text":" loop.","type":"text"}],"metadata":{"symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"role":"symbol","externalID":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:10PotentASN19AnyStringV","roleHeading":"Instance Method","title":"forEach(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"forEach","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"}],"extendedModule":"Swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/forEach(_:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/forEach(_:)","abstract":[{"type":"text","text":"Calls the given closure on each element in the sequence in the same order"},{"text":" ","type":"text"},{"text":"as a ","type":"text"},{"type":"codeVoice","code":"for"},{"type":"text","text":"-"},{"code":"in","type":"codeVoice"},{"type":"text","text":" loop."}],"role":"symbol","url":"\/documentation\/potentasn1\/anystring\/foreach(_:)","title":"forEach(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forEach","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","title":"PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"abstract":[],"title":"Sequence Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","kind":"article"}}}
{"kind":"symbol","metadata":{"extendedModule":"Swift","title":"lexicographicallyPrecedes(_:by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lexicographicallyPrecedes"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"externalID":"s:STsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF::SYNTHESIZED::s:10PotentASN19AnyStringV","symbolKind":"method"},"abstract":[{"text":"Returns a Boolean value indicating whether the sequence precedes another","type":"text"},{"text":" ","type":"text"},{"text":"sequence in a lexicographical (dictionary) ordering, using the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"predicate to compare elements."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/lexicographicallyprecedes(_:by:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"kind":"text","text":"<"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"areInIncreasingOrder"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"OtherSequence"},{"text":" : ","kind":"text"},{"text":"Sequence","preciseIdentifier":"s:ST","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":" == "},{"text":"OtherSequence","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A sequence to compare to this sequence."}],"type":"paragraph"}],"name":"other"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if its first"},{"type":"text","text":" "},{"text":"argument should be ordered before its second argument; otherwise,","type":"text"},{"text":" ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"areInIncreasingOrder"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"text":" if this sequence precedes ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" in a dictionary"},{"text":" ","type":"text"},{"type":"text","text":"ordering as ordered by "},{"type":"codeVoice","code":"areInIncreasingOrder"},{"text":"; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The predicate must be a "},{"inlineContent":[{"text":"strict weak ordering","type":"text"}],"type":"emphasis"},{"type":"text","text":" over the elements. That"},{"text":" ","type":"text"},{"text":"is, for any elements ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must"},{"text":" ","type":"text"},{"text":"hold:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"areInIncreasingOrder(a, a)","type":"codeVoice"},{"text":" is always ","type":"text"},{"type":"codeVoice","code":"false"},{"text":". (Irreflexivity)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"type":"text","text":" and "},{"code":"areInIncreasingOrder(b, c)","type":"codeVoice"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"both "},{"code":"true","type":"codeVoice"},{"type":"text","text":", then "},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"type":"text","text":" is also"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":". (Transitive comparability)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Two elements are "},{"inlineContent":[{"text":"incomparable","type":"text"}],"type":"emphasis"},{"type":"text","text":" if neither is ordered before the other"},{"type":"text","text":" "},{"type":"text","text":"according to the predicate. If "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":" are incomparable, and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"codeVoice","code":"c"},{"type":"text","text":" are incomparable, then "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"c"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(Transitive incomparability)"}],"type":"paragraph"}]}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"This method implements the mathematical notion of lexicographical","type":"text"},{"type":"text","text":" "},{"text":"ordering, which has no connection to Unicode.  If you are sorting","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strings to present to the end user, use "},{"type":"codeVoice","code":"String"},{"type":"text","text":" APIs that perform"},{"text":" ","type":"text"},{"text":"localized comparison instead.","type":"text"}]}],"name":"Note"},{"style":"note","name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"m","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"m"}]},{"type":"text","text":" is the lesser of the length of the"},{"type":"text","text":" "},{"type":"text","text":"sequence and the length of "},{"type":"codeVoice","code":"other"},{"text":".","type":"text"}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/lexicographicallyPrecedes(_:by:)"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/lexicographicallyPrecedes(_:by:)":{"kind":"symbol","url":"\/documentation\/potentasn1\/anystring\/lexicographicallyprecedes(_:by:)","title":"lexicographicallyPrecedes(_:by:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lexicographicallyPrecedes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"OtherSequence","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"OtherSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":" ","type":"text"},{"text":"sequence in a lexicographical (dictionary) ordering, using the given","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"predicate to compare elements."}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/lexicographicallyPrecedes(_:by:)"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","title":"Sequence Implementations","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"title":"AnyString","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyString","kind":"identifier"}],"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","title":"PotentASN1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"}}}
{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the string begins with the"},{"type":"text","text":" "},{"type":"text","text":"specified prefix."}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasPrefix(_:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasPrefix","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Prefix"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"prefix","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Prefix"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Prefix"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"StringProtocol","preciseIdentifier":"s:Sy"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A possible prefix to test against this string.","type":"text"}],"type":"paragraph"}],"name":"prefix"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the string begins with "},{"code":"prefix","type":"codeVoice"},{"text":"; otherwise, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The comparison is both case sensitive and Unicode safe. The","type":"text"},{"type":"text","text":" "},{"text":"case-sensitive comparison will only match strings whose corresponding","type":"text"},{"text":" ","type":"text"},{"text":"characters have the same case.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let cafe = \"Café du Monde\"","","\/\/ Case sensitive","print(cafe.hasPrefix(\"café\"))","\/\/ Prints \"false\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Unicode-safe comparison matches Unicode extended grapheme clusters"},{"text":" ","type":"text"},{"text":"rather than the code points used to compose them. The example below uses","type":"text"},{"text":" ","type":"text"},{"text":"two strings with different forms of the ","type":"text"},{"code":"\"é\"","type":"codeVoice"},{"type":"text","text":" character—the first uses"},{"text":" ","type":"text"},{"type":"text","text":"the composed form and the second uses the decomposed form."}]},{"syntax":null,"code":["\/\/ Unicode safe","let composedCafe = \"Café\"","let decomposedCafe = \"Cafe\\u{0301}\"","","print(cafe.hasPrefix(composedCafe))","\/\/ Prints \"true\"","print(cafe.hasPrefix(decomposedCafe))","\/\/ Prints \"true\""],"type":"codeListing"}]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasPrefix"},{"text":"<","kind":"text"},{"text":"Prefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Prefix"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","externalID":"s:SysE9hasPrefixySbqd__SyRd__lF::SYNTHESIZED::s:10PotentASN19AnyStringV","role":"symbol","title":"hasPrefix(_:)","symbolKind":"method","extendedModule":"Swift","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/hasprefix(_:)"]}],"references":{"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","title":"PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString/hasPrefix(_:)":{"url":"\/documentation\/potentasn1\/anystring\/hasprefix(_:)","type":"topic","kind":"symbol","title":"hasPrefix(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasPrefix(_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the string begins with the"},{"type":"text","text":" "},{"type":"text","text":"specified prefix."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasPrefix","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Prefix","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Prefix","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://PotentCodables/documentation/PotentASN1/AnyString/StringProtocol-Implementations":{"title":"StringProtocol Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/potentasn1\/anystring\/stringprotocol-implementations","type":"topic","abstract":[]},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyString","kind":"identifier"}]}}}
{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/hasprefix(_:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasPrefix"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Prefix"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"prefix"},{"kind":"text","text":": "},{"text":"Prefix","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Prefix","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"StringProtocol","kind":"typeIdentifier","preciseIdentifier":"s:Sy"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"prefix","content":[{"inlineContent":[{"type":"text","text":"A possible prefix to test against this string."}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" if the string begins with ","type":"text"},{"type":"codeVoice","code":"prefix"},{"type":"text","text":"; otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The comparison is both case sensitive and Unicode safe. The"},{"text":" ","type":"text"},{"type":"text","text":"case-sensitive comparison will only match strings whose corresponding"},{"type":"text","text":" "},{"type":"text","text":"characters have the same case."}]},{"code":["let cafe = \"Café du Monde\"","","\/\/ Case sensitive","print(cafe.hasPrefix(\"café\"))","\/\/ Prints \"false\""],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Unicode-safe comparison matches Unicode extended grapheme clusters"},{"type":"text","text":" "},{"text":"rather than the code points used to compose them. The example below uses","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"two strings with different forms of the "},{"code":"\"é\"","type":"codeVoice"},{"text":" character—the first uses","type":"text"},{"text":" ","type":"text"},{"text":"the composed form and the second uses the decomposed form.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["\/\/ Unicode safe","let composedCafe = \"Café\"","let decomposedCafe = \"Cafe\\u{0301}\"","","print(cafe.hasPrefix(composedCafe))","\/\/ Prints \"true\"","print(cafe.hasPrefix(decomposedCafe))","\/\/ Prints \"true\""]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Returns a Boolean value indicating whether the string begins with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified prefix."}],"metadata":{"externalID":"s:SysE9hasPrefixySbqd__SyRd__lF::SYNTHESIZED::s:10PotentASN19AnyStringV","extendedModule":"Swift","title":"hasPrefix(_:)","role":"symbol","symbolKind":"method","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasPrefix","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Prefix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Prefix"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasPrefix(_:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/hasPrefix(_:)":{"title":"hasPrefix(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasPrefix","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Prefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Prefix","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/potentasn1\/anystring\/hasprefix(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasPrefix(_:)","type":"topic","abstract":[{"text":"Returns a Boolean value indicating whether the string begins with the","type":"text"},{"type":"text","text":" "},{"text":"specified prefix.","type":"text"}]},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","url":"\/documentation\/potentasn1\/anystring","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyString","kind":"identifier"}],"title":"AnyString","type":"topic","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Allows encoding ","type":"text"},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","kind":"symbol","url":"\/documentation\/potentasn1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString/StringProtocol-Implementations":{"abstract":[],"url":"\/documentation\/potentasn1\/anystring\/stringprotocol-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations","type":"topic","role":"collectionGroup","kind":"article","title":"StringProtocol Implementations"}}}
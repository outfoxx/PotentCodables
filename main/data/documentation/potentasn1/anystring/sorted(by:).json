{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"metadata":{"extendedModule":"Swift","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":"]","kind":"text"}],"externalID":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:10PotentASN19AnyStringV","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"title":"sorted(by:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"sorted","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"text":" ","kind":"text"},{"text":"areInIncreasingOrder","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":"]","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A predicate that returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if its"},{"text":" ","type":"text"},{"text":"first argument should be ordered before its second argument;","type":"text"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}],"name":"areInIncreasingOrder"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A sorted array of the sequence’s elements.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"When you want to sort a sequence of elements that don’t conform to the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"Comparable"},{"text":" protocol, pass a predicate to this method that returns","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"type":"text","text":" when the first element should be ordered before the second. The"},{"type":"text","text":" "},{"type":"text","text":"elements of the resulting array are ordered according to the given"},{"text":" ","type":"text"},{"type":"text","text":"predicate."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, the predicate provides an ordering for an array"},{"text":" ","type":"text"},{"text":"of a custom ","type":"text"},{"type":"codeVoice","code":"HTTPResponse"},{"text":" type. The predicate orders errors before","type":"text"},{"type":"text","text":" "},{"text":"successes and sorts the error responses by their error code.","type":"text"}]},{"syntax":null,"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let responses: [HTTPResponse] = [.error(500), .ok, .ok, .error(404), .error(403)]","let sortedResponses = responses.sorted {","    switch ($0, $1) {","    \/\/ Order errors by code","    case let (.error(aCode), .error(bCode)):","        return aCode < bCode","","    \/\/ All successes are equivalent, so none is before any other","    case (.ok, .ok): return false","","    \/\/ Order errors before successes","    case (.error, .ok): return true","    case (.ok, .error): return false","    }","}","print(sortedResponses)","\/\/ Prints \"[.error(403), .error(404), .error(500), .ok, .ok]\""],"type":"codeListing"},{"inlineContent":[{"text":"You also use this method to sort elements that conform to the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":" protocol in descending order. To sort your sequence in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"descending order, pass the greater-than operator ("},{"code":">","type":"codeVoice"},{"type":"text","text":") as the"},{"text":" ","type":"text"},{"code":"areInIncreasingOrder","type":"codeVoice"},{"type":"text","text":" parameter."}],"type":"paragraph"},{"syntax":null,"code":["let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]","let descendingStudents = students.sorted(by: >)","print(descendingStudents)","\/\/ Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Calling the related "},{"type":"codeVoice","code":"sorted()"},{"type":"text","text":" method is equivalent to calling this"},{"type":"text","text":" "},{"type":"text","text":"method and passing the less-than operator ("},{"code":"<","type":"codeVoice"},{"type":"text","text":") as the predicate."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["print(students.sorted())","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\"","print(students.sorted(by: <))","\/\/ Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""]},{"inlineContent":[{"text":"The predicate must be a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"strict weak ordering"}]},{"type":"text","text":" over the elements. That"},{"text":" ","type":"text"},{"text":"is, for any elements ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must"},{"text":" ","type":"text"},{"type":"text","text":"hold:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"areInIncreasingOrder(a, a)","type":"codeVoice"},{"type":"text","text":" is always "},{"code":"false","type":"codeVoice"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"both ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", then ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(a, c)"},{"type":"text","text":" is also "},{"code":"true","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(Transitive comparability)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Two elements are ","type":"text"},{"inlineContent":[{"text":"incomparable","type":"text"}],"type":"emphasis"},{"text":" if neither is ordered before the other","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"according to the predicate. If "},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" are incomparable, and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"c","type":"codeVoice"},{"type":"text","text":" are incomparable, then "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"c","type":"codeVoice"},{"type":"text","text":" are also incomparable."},{"type":"text","text":" "},{"type":"text","text":"(Transitive incomparability)"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The sorting algorithm is guaranteed to be stable. A stable sort","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preserves the relative order of elements for which"},{"type":"text","text":" "},{"type":"codeVoice","code":"areInIncreasingOrder"},{"type":"text","text":" does not establish an order."}]},{"name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" log ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/sorted(by:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/sorted(by:)"},"references":{"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","title":"PotentASN1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString/sorted(by:)":{"type":"topic","kind":"symbol","url":"\/documentation\/potentasn1\/anystring\/sorted(by:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"sorted"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/sorted(by:)","title":"sorted(by:)","abstract":[{"type":"text","text":"Returns the elements of the sequence, sorted using the given predicate as"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}]},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","kind":"symbol","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"type":"text","text":"Allows encoding "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"type":"topic","title":"Sequence Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","role":"collectionGroup","abstract":[],"kind":"article"}}}
{"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/prefix(upto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/prefix(upTo:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":" "},{"text":"end","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}]}]},{"parameters":[{"name":"end","content":[{"type":"paragraph","inlineContent":[{"text":"The “past the end” index of the resulting subsequence.","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"end"},{"text":" must be a valid index of the collection.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence up to, but not including, the "},{"type":"codeVoice","code":"end"},{"text":" position.","type":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The resulting subsequence "},{"type":"emphasis","inlineContent":[{"type":"text","text":"does not include"}]},{"text":" the element at the position","type":"text"},{"type":"text","text":" "},{"code":"end","type":"codeVoice"},{"text":". The following example searches for the index of the number ","type":"text"},{"code":"40","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"in an array of integers, and then prints the prefix of the array up to,"},{"text":" ","type":"text"},{"type":"text","text":"but not including, that index:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""]},{"type":"paragraph","inlineContent":[{"text":"Passing the collection’s starting index as the ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":" parameter results in"},{"type":"text","text":" "},{"text":"an empty subsequence.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""]},{"inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"prefix(upTo:)"},{"text":" method is equivalent to using a partial","type":"text"},{"type":"text","text":" "},{"type":"text","text":"half-open range as the collection’s subscript. The subscript notation is"},{"type":"text","text":" "},{"type":"text","text":"preferred over "},{"type":"codeVoice","code":"prefix(upTo:)"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing","syntax":null},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}]}],"kind":"content"}],"abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including, the specified position."}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"title":"prefix(upTo:)","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Swift","externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:10PotentASN19AnyStringV","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}]},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString":{"navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"text":"specific ASN.1 tag.","type":"text"}],"role":"symbol","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"type":"topic","kind":"article","title":"Collection Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/collection-implementations"},"doc://PotentCodables/documentation/PotentASN1/AnyString/prefix(upTo:)":{"type":"topic","title":"prefix(upTo:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"url":"\/documentation\/potentasn1\/anystring\/prefix(upto:)","abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"text":"including, the specified position.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/prefix(upTo:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","title":"PotentASN1","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"}}}
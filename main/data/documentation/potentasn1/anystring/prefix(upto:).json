{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"end"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “past the end” index of the resulting subsequence."},{"text":" ","type":"text"},{"type":"codeVoice","code":"end"},{"text":" must be a valid index of the collection.","type":"text"}]}],"name":"end"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"A subsequence up to, but not including, the ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":" position."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting subsequence "},{"type":"emphasis","inlineContent":[{"text":"does not include","type":"text"}]},{"text":" the element at the position","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":". The following example searches for the index of the number "},{"type":"codeVoice","code":"40"},{"type":"text","text":" "},{"type":"text","text":"in an array of integers, and then prints the prefix of the array up to,"},{"text":" ","type":"text"},{"type":"text","text":"but not including, that index:"}]},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing"},{"inlineContent":[{"text":"Passing the collection’s starting index as the ","type":"text"},{"code":"end","type":"codeVoice"},{"type":"text","text":" parameter results in"},{"type":"text","text":" "},{"type":"text","text":"an empty subsequence."}],"type":"paragraph"},{"syntax":null,"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"prefix(upTo:)"},{"text":" method is equivalent to using a partial","type":"text"},{"text":" ","type":"text"},{"text":"half-open range as the collection’s subscript. The subscript notation is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"preferred over "},{"code":"prefix(upTo:)","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing","syntax":null},{"style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"type":"aside"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/prefix(upTo:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/prefix(upto:)"]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"title":"prefix(upTo:)","externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:10PotentASN19AnyStringV","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"symbolKind":"method","extendedModule":"Swift"},"kind":"symbol","abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"text":" ","type":"text"},{"type":"text","text":"including, the specified position."}],"references":{"doc://PotentCodables/documentation/PotentASN1":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1","kind":"symbol","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString/prefix(upTo:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/prefix(upTo:)","type":"topic","abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"text":" ","type":"text"},{"type":"text","text":"including, the specified position."}],"url":"\/documentation\/potentasn1\/anystring\/prefix(upto:)","role":"symbol","title":"prefix(upTo:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}],"role":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyString"}],"title":"AnyString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/collection-implementations","title":"Collection Implementations","kind":"article","role":"collectionGroup","type":"topic"}}}
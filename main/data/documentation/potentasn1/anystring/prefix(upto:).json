{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/prefix(upto:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"prefix","kind":"identifier"},{"kind":"text","text":"("},{"text":"upTo","kind":"externalParam"},{"kind":"text","text":" "},{"text":"end","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The “past the end” index of the resulting subsequence.","type":"text"},{"type":"text","text":" "},{"code":"end","type":"codeVoice"},{"text":" must be a valid index of the collection.","type":"text"}]}],"name":"end"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A subsequence up to, but not including, the "},{"type":"codeVoice","code":"end"},{"text":" position.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"The resulting subsequence ","type":"text"},{"inlineContent":[{"type":"text","text":"does not include"}],"type":"emphasis"},{"text":" the element at the position","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"end"},{"type":"text","text":". The following example searches for the index of the number "},{"code":"40","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"in an array of integers, and then prints the prefix of the array up to,"},{"text":" ","type":"text"},{"text":"but not including, that index:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""]},{"inlineContent":[{"type":"text","text":"Passing the collection’s starting index as the "},{"type":"codeVoice","code":"end"},{"type":"text","text":" parameter results in"},{"type":"text","text":" "},{"text":"an empty subsequence.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""]},{"inlineContent":[{"text":"Using the ","type":"text"},{"code":"prefix(upTo:)","type":"codeVoice"},{"type":"text","text":" method is equivalent to using a partial"},{"text":" ","type":"text"},{"type":"text","text":"half-open range as the collection’s subscript. The subscript notation is"},{"text":" ","type":"text"},{"text":"preferred over ","type":"text"},{"code":"prefix(upTo:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""],"syntax":null,"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"abstract":[{"text":"Returns a subsequence from the start of the collection up to, but not","type":"text"},{"type":"text","text":" "},{"text":"including, the specified position.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"metadata":{"extendedModule":"Swift","title":"prefix(upTo:)","role":"symbol","externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:10PotentASN19AnyStringV","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"roleHeading":"Instance Method","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/prefix(upTo:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"title":"Collection Implementations","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/collection-implementations","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations","role":"collectionGroup","kind":"article"},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","url":"\/documentation\/potentasn1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"title":"PotentASN1","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"title":"AnyString","type":"topic","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","role":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1/AnyString/prefix(upTo:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"prefix"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"title":"prefix(upTo:)","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/prefix(upTo:)","abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"type":"text","text":" "},{"type":"text","text":"including, the specified position."}],"url":"\/documentation\/potentasn1\/anystring\/prefix(upto:)"}}}
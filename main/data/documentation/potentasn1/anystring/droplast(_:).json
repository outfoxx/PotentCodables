{"abstract":[{"type":"text","text":"Returns a subsequence containing all but the specified number of final"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/droplast(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/BidirectionalCollection-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"title":"dropLast(_:)","roleHeading":"Instance Method","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dropLast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"role":"symbol","symbolKind":"method","externalID":"s:SKsE8dropLasty11SubSequenceQzSiF::SYNTHESIZED::s:10PotentASN19AnyStringV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"dropLast","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to drop off the end of the","type":"text"},{"type":"text","text":" "},{"text":"collection. ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" must be greater than or equal to zero.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence that leaves off "},{"code":"k","type":"codeVoice"},{"type":"text","text":" elements from the end."}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the number of elements to drop exceeds the number of elements in the"},{"text":" ","type":"text"},{"text":"collection, the result is an empty subsequence.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropLast(2))","\/\/ Prints \"[1, 2, 3]\"","print(numbers.dropLast(10))","\/\/ Prints \"[]\""]},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1) if the collection conforms to"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":"; otherwise, O("},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" is the number of"},{"text":" ","type":"text"},{"type":"text","text":"elements to drop."}]}],"style":"note","type":"aside"}]}],"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/dropLast(_:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/dropLast(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"dropLast","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/dropLast(_:)","title":"dropLast(_:)","kind":"symbol","abstract":[{"text":"Returns a subsequence containing all but the specified number of final","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"type":"topic","url":"\/documentation\/potentasn1\/anystring\/droplast(_:)"},"doc://PotentCodables/documentation/PotentASN1":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1","kind":"symbol","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString/BidirectionalCollection-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/potentasn1\/anystring\/bidirectionalcollection-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/BidirectionalCollection-Implementations","abstract":[],"role":"collectionGroup","title":"BidirectionalCollection Implementations"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}],"role":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyString"}],"title":"AnyString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString"}}}
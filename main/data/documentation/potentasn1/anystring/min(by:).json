{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/min(by:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"text":"areInIncreasingOrder","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"areInIncreasingOrder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" "},{"type":"text","text":"if its first argument should be ordered before its second"},{"type":"text","text":" "},{"type":"text","text":"argument; otherwise, "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The sequenceâ€™s minimum element, according to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder"},{"text":". If the sequence has no elements, returns","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate must be a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"strict weak ordering"}]},{"text":" over the elements. That","type":"text"},{"type":"text","text":" "},{"text":"is, for any elements ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"c"},{"type":"text","text":", the following conditions must"},{"text":" ","type":"text"},{"text":"hold:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"type":"text","text":" is always "},{"code":"false","type":"codeVoice"},{"text":". (Irreflexivity)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"areInIncreasingOrder(a, b)"},{"type":"text","text":" and "},{"code":"areInIncreasingOrder(b, c)","type":"codeVoice"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"both "},{"code":"true","type":"codeVoice"},{"type":"text","text":", then "},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"type":"text","text":" is also"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":". (Transitive comparability)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Two elements are "},{"inlineContent":[{"type":"text","text":"incomparable"}],"type":"emphasis"},{"text":" if neither is ordered before the other","type":"text"},{"type":"text","text":" "},{"type":"text","text":"according to the predicate. If "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":" are incomparable, and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":" "},{"text":"and ","type":"text"},{"code":"c","type":"codeVoice"},{"type":"text","text":" are incomparable, then "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"c"},{"text":" are also incomparable.","type":"text"},{"type":"text","text":" "},{"text":"(Transitive incomparability)","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"This example shows how to use the "},{"code":"min(by:)","type":"codeVoice"},{"text":" method on a","type":"text"},{"text":" ","type":"text"},{"text":"dictionary to find the key-value pair with the lowest value.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","let leastHue = hues.min { a, b in a.value < b.value }","print(leastHue)","\/\/ Prints \"Optional((key: \"Coral\", value: 16))\""]},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"metadata":{"role":"symbol","externalID":"s:STsE3min2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:10PotentASN19AnyStringV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"extendedModule":"Swift","title":"min(by:)","symbolKind":"method","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"roleHeading":"Instance Method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Returns the minimum element in the sequence, using the given predicate as","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the comparison between elements."}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/min(by:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/min(by:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"min","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"min(by:)","type":"topic","abstract":[{"text":"Returns the minimum element in the sequence, using the given predicate as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the comparison between elements."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/min(by:)","kind":"symbol","url":"\/documentation\/potentasn1\/anystring\/min(by:)"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","title":"Sequence Implementations","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"title":"AnyString","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyString","kind":"identifier"}],"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","title":"PotentASN1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"}}}
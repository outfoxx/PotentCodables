{"metadata":{"title":"...(_:)","role":"symbol","roleHeading":"Operator","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"Swift","externalID":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:10PotentASN19AnyStringV"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/...(_:)-7x0jp","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"PartialRangeThrough","kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The upper bound for the range.","type":"text"}]}],"name":"maximum"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use the prefix closed range operator (prefix ","type":"text"},{"code":"...","type":"codeVoice"},{"type":"text","text":") to create a partial"},{"type":"text","text":" "},{"text":"range of any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol. This"},{"text":" ","type":"text"},{"type":"text","text":"example creates a "},{"code":"PartialRangeThrough<Double>","type":"codeVoice"},{"type":"text","text":" instance that includes"},{"text":" ","type":"text"},{"text":"any value less than or equal to ","type":"text"},{"type":"codeVoice","code":"5.0"},{"type":"text","text":"."}]},{"code":["let throughFive = ...5.0","","throughFive.contains(4.0)     \/\/ true","throughFive.contains(5.0)     \/\/ true","throughFive.contains(6.0)     \/\/ false"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the start of the collection up to, and"},{"type":"text","text":" "},{"text":"including, the partial range’s upper bound.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[...3])","\/\/ Prints \"[10, 20, 30, 40]\""]},{"style":"note","name":"Precondition","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"maximum"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}]}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/potentasn1\/anystring\/'...(_:)-7x0jp"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Returns a partial range up to, and including, its upper bound.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString":{"navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","kind":"symbol","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"type":"text","text":"Allows encoding "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1/AnyString/...(_:)-7x0jp":{"type":"topic","url":"\/documentation\/potentasn1\/anystring\/'...(_:)-7x0jp","role":"symbol","abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}],"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PartialRangeThrough","kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/...(_:)-7x0jp","title":"...(_:)"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Comparable-Implementations":{"kind":"article","role":"collectionGroup","title":"Comparable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/comparable-implementations","type":"topic"},"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","title":"PotentASN1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"}}}
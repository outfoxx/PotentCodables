{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}],"name":"maximum"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Use the prefix closed range operator (prefix "},{"code":"...","type":"codeVoice"},{"text":") to create a partial","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"range of any type that conforms to the "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol. This"},{"type":"text","text":" "},{"text":"example creates a ","type":"text"},{"type":"codeVoice","code":"PartialRangeThrough<Double>"},{"text":" instance that includes","type":"text"},{"text":" ","type":"text"},{"text":"any value less than or equal to ","type":"text"},{"code":"5.0","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let throughFive = ...5.0","","throughFive.contains(4.0)     \/\/ true","throughFive.contains(5.0)     \/\/ true","throughFive.contains(6.0)     \/\/ false"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"type":"text","text":" "},{"text":"represent the range from the start of the collection up to, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including, the partial range’s upper bound."}]},{"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[...3])","\/\/ Prints \"[10, 20, 30, 40]\""],"syntax":null,"type":"codeListing"},{"type":"aside","name":"Precondition","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"code":"maximum","type":"codeVoice"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"symbolKind":"op","role":"symbol","externalID":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:10PotentASN19AnyStringV","extendedModule":"Swift","title":"...(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Operator","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}]},"abstract":[{"text":"Returns a partial range up to, and including, its upper bound.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/...(_:)-7x0jp"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations"]]},"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/'...(_:)-7x0jp"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","title":"PotentASN1","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"text":"specific ASN.1 tag.","type":"text"}],"role":"symbol","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString/...(_:)-7x0jp":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns a partial range up to, and including, its upper bound."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/...(_:)-7x0jp","title":"...(_:)","url":"\/documentation\/potentasn1\/anystring\/'...(_:)-7x0jp","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Comparable-Implementations":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations","title":"Comparable Implementations","role":"collectionGroup","url":"\/documentation\/potentasn1\/anystring\/comparable-implementations"}}}
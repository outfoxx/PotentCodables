{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasSuffix(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/hassuffix(_:)"]}],"abstract":[{"text":"Returns a Boolean value indicating whether the string ends with the","type":"text"},{"type":"text","text":" "},{"text":"specified suffix.","type":"text"}],"metadata":{"externalID":"s:SysE9hasSuffixySbqd__SyRd__lF::SYNTHESIZED::s:10PotentASN19AnyStringV","symbolKind":"method","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"extendedModule":"Swift","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasSuffix","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Suffix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Suffix","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"roleHeading":"Instance Method","title":"hasSuffix(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hasSuffix","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Suffix"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"suffix","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Suffix"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Suffix"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sy","text":"StringProtocol","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A possible suffix to test against this string."}]}],"name":"suffix"}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the string ends with ","type":"text"},{"type":"codeVoice","code":"suffix"},{"type":"text","text":"; otherwise, "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The comparison is both case sensitive and Unicode safe. The","type":"text"},{"type":"text","text":" "},{"text":"case-sensitive comparison will only match strings whose corresponding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"characters have the same case."}]},{"syntax":null,"code":["let plans = \"Let's meet at the café\"","","\/\/ Case sensitive","print(plans.hasSuffix(\"Café\"))","\/\/ Prints \"false\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The Unicode-safe comparison matches Unicode extended grapheme clusters","type":"text"},{"type":"text","text":" "},{"type":"text","text":"rather than the code points used to compose them. The example below uses"},{"type":"text","text":" "},{"type":"text","text":"two strings with different forms of the "},{"code":"\"é\"","type":"codeVoice"},{"text":" character—the first uses","type":"text"},{"text":" ","type":"text"},{"text":"the composed form and the second uses the decomposed form.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["\/\/ Unicode safe","let composedCafe = \"café\"","let decomposedCafe = \"cafe\\u{0301}\"","","print(plans.hasSuffix(composedCafe))","\/\/ Prints \"true\"","print(plans.hasSuffix(decomposedCafe))","\/\/ Prints \"true\""]}]}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/hasSuffix(_:)":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasSuffix(_:)","url":"\/documentation\/potentasn1\/anystring\/hassuffix(_:)","abstract":[{"text":"Returns a Boolean value indicating whether the string ends with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified suffix."}],"role":"symbol","title":"hasSuffix(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"hasSuffix"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Suffix"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Suffix"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","title":"PotentASN1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString/StringProtocol-Implementations":{"abstract":[],"title":"StringProtocol Implementations","url":"\/documentation\/potentasn1\/anystring\/stringprotocol-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations","type":"topic","kind":"article","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"title":"AnyString","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyString","kind":"identifier"}],"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}]}}}
{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/hassuffix(_:)"]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasSuffix"},{"text":"<","kind":"text"},{"text":"Suffix","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"suffix","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Suffix"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Suffix","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sy","text":"StringProtocol","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"suffix","content":[{"type":"paragraph","inlineContent":[{"text":"A possible suffix to test against this string.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the string ends with "},{"type":"codeVoice","code":"suffix"},{"text":"; otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The comparison is both case sensitive and Unicode safe. The","type":"text"},{"text":" ","type":"text"},{"text":"case-sensitive comparison will only match strings whose corresponding","type":"text"},{"type":"text","text":" "},{"type":"text","text":"characters have the same case."}]},{"syntax":null,"type":"codeListing","code":["let plans = \"Let's meet at the café\"","","\/\/ Case sensitive","print(plans.hasSuffix(\"Café\"))","\/\/ Prints \"false\""]},{"inlineContent":[{"type":"text","text":"The Unicode-safe comparison matches Unicode extended grapheme clusters"},{"text":" ","type":"text"},{"text":"rather than the code points used to compose them. The example below uses","type":"text"},{"type":"text","text":" "},{"text":"two strings with different forms of the ","type":"text"},{"code":"\"é\"","type":"codeVoice"},{"type":"text","text":" character—the first uses"},{"type":"text","text":" "},{"text":"the composed form and the second uses the decomposed form.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["\/\/ Unicode safe","let composedCafe = \"café\"","let decomposedCafe = \"cafe\\u{0301}\"","","print(plans.hasSuffix(composedCafe))","\/\/ Prints \"true\"","print(plans.hasSuffix(decomposedCafe))","\/\/ Prints \"true\""]}]}],"metadata":{"title":"hasSuffix(_:)","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:SysE9hasSuffixySbqd__SyRd__lF::SYNTHESIZED::s:10PotentASN19AnyStringV","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hasSuffix","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Suffix","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Suffix","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the string ends with the"},{"text":" ","type":"text"},{"type":"text","text":"specified suffix."}],"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasSuffix(_:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/StringProtocol-Implementations":{"abstract":[],"url":"\/documentation\/potentasn1\/anystring\/stringprotocol-implementations","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/StringProtocol-Implementations","role":"collectionGroup","title":"StringProtocol Implementations","kind":"article"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}],"role":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyString"}],"title":"AnyString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString"},"doc://PotentCodables/documentation/PotentASN1":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1","kind":"symbol","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString/hasSuffix(_:)":{"title":"hasSuffix(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/hasSuffix(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Returns a Boolean value indicating whether the string ends with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specified suffix."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hasSuffix","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Suffix","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Suffix"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/potentasn1\/anystring\/hassuffix(_:)","role":"symbol"}}}
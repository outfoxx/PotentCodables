{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"metadata":{"roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift","externalID":"s:SlsE9dropFirsty11SubSequenceQzSiF::SYNTHESIZED::s:10PotentASN19AnyStringV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropFirst","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"symbolKind":"method","title":"dropFirst(_:)"},"abstract":[{"text":"Returns a subsequence containing all but the given number of initial","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropFirst","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":" = 1) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to drop from the beginning of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the collection. "},{"code":"k","type":"codeVoice"},{"text":" must be greater than or equal to zero.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"A subsequence starting after the specified number of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"text":"If the number of elements to drop exceeds the number of elements in","type":"text"},{"text":" ","type":"text"},{"text":"the collection, the result is an empty subsequence.","type":"text"}],"type":"paragraph"},{"code":["let numbers = [1, 2, 3, 4, 5]","print(numbers.dropFirst(2))","\/\/ Prints \"[3, 4, 5]\"","print(numbers.dropFirst(10))","\/\/ Prints \"[]\""],"type":"codeListing","syntax":null},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"O(1) if the collection conforms to","type":"text"},{"text":" ","type":"text"},{"code":"RandomAccessCollection","type":"codeVoice"},{"text":"; otherwise, O(","type":"text"},{"inlineContent":[{"type":"text","text":"k"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" is the number of"},{"text":" ","type":"text"},{"text":"elements to drop from the beginning of the collection.","type":"text"}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/dropfirst(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/dropFirst(_:)"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"type":"topic","title":"Collection Implementations","kind":"article","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations","url":"\/documentation\/potentasn1\/anystring\/collection-implementations","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"role":"symbol","url":"\/documentation\/potentasn1\/anystring","navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"abstract":[{"text":"Allows encoding ","type":"text"},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyString","kind":"identifier"}],"type":"topic","title":"AnyString"},"doc://PotentCodables/documentation/PotentASN1/AnyString/dropFirst(_:)":{"kind":"symbol","title":"dropFirst(_:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a subsequence containing all but the given number of initial"},{"text":" ","type":"text"},{"type":"text","text":"elements."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/dropFirst(_:)","url":"\/documentation\/potentasn1\/anystring\/dropfirst(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dropFirst","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}]},"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"kind":"symbol","title":"PotentASN1"}}}
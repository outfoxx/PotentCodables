{"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/max(by:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Returns the maximum element in the sequence, using the given predicate"},{"type":"text","text":" "},{"type":"text","text":"as the comparison between elements."}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"kind":"text","text":"("},{"text":"by","kind":"externalParam"},{"kind":"text","text":" "},{"text":"areInIncreasingOrder","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"areInIncreasingOrder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that returns "},{"type":"codeVoice","code":"true"},{"text":" if its","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"first argument should be ordered before its second argument;"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The sequenceâ€™s maximum element if the sequence is not empty;","type":"text"},{"text":" ","type":"text"},{"text":"otherwise, ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The predicate must be a "},{"inlineContent":[{"text":"strict weak ordering","type":"text"}],"type":"emphasis"},{"text":" over the elements. That","type":"text"},{"text":" ","type":"text"},{"text":"is, for any elements ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"b"},{"type":"text","text":", and "},{"code":"c","type":"codeVoice"},{"text":", the following conditions must","type":"text"},{"type":"text","text":" "},{"text":"hold:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"areInIncreasingOrder(a, a)"},{"text":" is always ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":". (Irreflexivity)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"areInIncreasingOrder(a, b)","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(b, c)"},{"text":" are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"both "},{"type":"codeVoice","code":"true"},{"text":", then ","type":"text"},{"type":"codeVoice","code":"areInIncreasingOrder(a, c)"},{"type":"text","text":" is also"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":". (Transitive comparability)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Two elements are ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"incomparable"}]},{"text":" if neither is ordered before the other","type":"text"},{"type":"text","text":" "},{"text":"according to the predicate. If ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":" are incomparable, and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"c"},{"type":"text","text":" are incomparable, then "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"code":"c","type":"codeVoice"},{"type":"text","text":" are also incomparable."},{"text":" ","type":"text"},{"text":"(Transitive incomparability)","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"This example shows how to use the ","type":"text"},{"type":"codeVoice","code":"max(by:)"},{"type":"text","text":" method on a"},{"text":" ","type":"text"},{"type":"text","text":"dictionary to find the key-value pair with the highest value."}]},{"syntax":null,"type":"codeListing","code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","let greatestHue = hues.max { a, b in a.value < b.value }","print(greatestHue)","\/\/ Prints \"Optional((key: \"Heliotrope\", value: 296))\""]},{"style":"note","type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the sequence."}]}]}]}],"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/max(by:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"metadata":{"role":"symbol","extendedModule":"Swift","roleHeading":"Instance Method","externalID":"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:10PotentASN19AnyStringV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":"?","kind":"text"}],"modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"title":"max(by:)"},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"title":"Sequence Implementations","url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString/max(by:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/max(by:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/potentasn1\/anystring\/max(by:)","title":"max(by:)","abstract":[{"text":"Returns the maximum element in the sequence, using the given predicate","type":"text"},{"type":"text","text":" "},{"text":"as the comparison between elements.","type":"text"}]},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Allows encoding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"text":" ","type":"text"},{"type":"text","text":"specific ASN.1 tag."}],"role":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnyString"}],"title":"AnyString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString"},"doc://PotentCodables/documentation/PotentASN1":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1","kind":"symbol","role":"collection","type":"topic"}}}
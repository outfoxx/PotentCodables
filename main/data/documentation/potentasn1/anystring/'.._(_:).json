{"kind":"symbol","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/.._(_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/'.._(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier","text":"PartialRangeUpTo"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The upper bound for the range."}]}],"name":"maximum"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Use the prefix half-open range operator (prefix ","type":"text"},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a"},{"text":" ","type":"text"},{"type":"text","text":"partial range of any type that conforms to the "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This example creates a "},{"type":"codeVoice","code":"PartialRangeUpTo<Double>"},{"text":" instance that includes","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"any value less than "},{"type":"codeVoice","code":"5.0"},{"text":".","type":"text"}]},{"code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"represent the range from the start of the collection up to, but not"},{"type":"text","text":" "},{"text":"including, the partial range’s upper bound.","type":"text"}]},{"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""],"type":"codeListing","syntax":null},{"type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}],"type":"paragraph"}],"name":"Precondition","style":"note"}]}],"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"op","roleHeading":"Operator","title":"..<(_:)","externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:10PotentASN19AnyStringV"},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString":{"navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","kind":"symbol","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"type":"text","text":"Allows encoding "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","title":"PotentASN1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString/.._(_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/.._(_:)","title":"..<(_:)","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","url":"\/documentation\/potentasn1\/anystring\/'.._(_:)","role":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Comparable-Implementations":{"kind":"article","role":"collectionGroup","title":"Comparable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations","abstract":[],"url":"\/documentation\/potentasn1\/anystring\/comparable-implementations","type":"topic"}}}
{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier","text":"PartialRangeUpTo"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}],"name":"maximum"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Use the prefix half-open range operator (prefix ","type":"text"},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a"},{"text":" ","type":"text"},{"text":"partial range of any type that conforms to the ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This example creates a "},{"code":"PartialRangeUpTo<Double>","type":"codeVoice"},{"type":"text","text":" instance that includes"},{"type":"text","text":" "},{"type":"text","text":"any value less than "},{"type":"codeVoice","code":"5.0"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the start of the collection up to, but not"},{"text":" ","type":"text"},{"type":"text","text":"including, the partial range’s upper bound."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""]},{"name":"Precondition","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}]}],"type":"aside"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/.._(_:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"symbolKind":"op","title":"..<(_:)","roleHeading":"Operator","externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:10PotentASN19AnyStringV","extendedModule":"Swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/potentasn1\/anystring\/'.._(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/.._(_:)":{"role":"symbol","kind":"symbol","type":"topic","title":"..<(_:)","url":"\/documentation\/potentasn1\/anystring\/'.._(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier","text":"PartialRangeUpTo"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/.._(_:)"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Comparable-Implementations":{"title":"Comparable Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/potentasn1\/anystring\/comparable-implementations"},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","kind":"symbol","title":"PotentASN1","role":"collection","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","url":"\/documentation\/potentasn1\/anystring","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"text":"specific ASN.1 tag.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"title":"AnyString","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}]}}}
{"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"maximum"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"maximum","content":[{"inlineContent":[{"type":"text","text":"The upper bound for the range."}],"type":"paragraph"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the prefix half-open range operator (prefix "},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a"},{"text":" ","type":"text"},{"text":"partial range of any type that conforms to the ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"type":"text","text":"This example creates a "},{"type":"codeVoice","code":"PartialRangeUpTo<Double>"},{"text":" instance that includes","type":"text"},{"type":"text","text":" "},{"text":"any value less than ","type":"text"},{"type":"codeVoice","code":"5.0"},{"type":"text","text":"."}]},{"code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"represent the range from the start of the collection up to, but not"},{"type":"text","text":" "},{"type":"text","text":"including, the partial range’s upper bound."}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""]},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}],"type":"paragraph"}],"name":"Precondition"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/.._(_:)"},"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/'.._(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations"]]},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV","text":"PartialRangeUpTo"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:10PotentASN19AnyStringV","symbolKind":"op","roleHeading":"Operator","extendedModule":"Swift","title":"..<(_:)","role":"symbol","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}]},"abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/.._(_:)":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/.._(_:)","url":"\/documentation\/potentasn1\/anystring\/'.._(_:)","title":"..<(_:)","role":"symbol","abstract":[{"text":"Returns a partial range up to, but not including, its upper bound.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","url":"\/documentation\/potentasn1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"title":"PotentASN1","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"url":"\/documentation\/potentasn1\/anystring","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"title":"AnyString","type":"topic","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","role":"symbol","navigatorTitle":[{"text":"AnyString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1/AnyString/Comparable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations","url":"\/documentation\/potentasn1\/anystring\/comparable-implementations","type":"topic","title":"Comparable Implementations","role":"collectionGroup","abstract":[],"kind":"article"}}}
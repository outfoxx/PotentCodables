{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/'...(_:)-5k73"]}],"abstract":[{"text":"Returns a partial range extending upward from a lower bound.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"minimum"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"parameters":[{"name":"minimum","content":[{"inlineContent":[{"type":"text","text":"The lower bound for the range."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use the postfix range operator (postfix ","type":"text"},{"type":"codeVoice","code":"..."},{"type":"text","text":") to create a partial range"},{"text":" ","type":"text"},{"text":"of any type that conforms to the ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":" protocol. This example","type":"text"},{"type":"text","text":" "},{"text":"creates a ","type":"text"},{"type":"codeVoice","code":"PartialRangeFrom<Double>"},{"type":"text","text":" instance that includes any value"},{"text":" ","type":"text"},{"type":"text","text":"greater than or equal to "},{"type":"codeVoice","code":"5.0"},{"text":".","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let atLeastFive = 5.0...","","atLeastFive.contains(4.0)     \/\/ false","atLeastFive.contains(5.0)     \/\/ true","atLeastFive.contains(6.0)     \/\/ true"]},{"type":"paragraph","inlineContent":[{"text":"You can use this type of partial range of a collection’s indices to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"represent the range from the partial range’s lower bound up to the end"},{"text":" ","type":"text"},{"text":"of the collection.","type":"text"}]},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[3...])","\/\/ Prints \"[40, 50, 60, 70]\""],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"minimum"},{"text":" must compare equal to itself (i.e. cannot be NaN).","type":"text"}]}],"type":"aside","style":"note","name":"Precondition"}]}],"kind":"symbol","metadata":{"roleHeading":"Operator","externalID":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:10PotentASN19AnyStringV","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"extendedModule":"Swift","title":"...(_:)","role":"symbol","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/...(_:)-5k73","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/...(_:)-5k73":{"abstract":[{"text":"Returns a partial range extending upward from a lower bound.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/...(_:)-5k73","role":"symbol","title":"...(_:)","url":"\/documentation\/potentasn1\/anystring\/'...(_:)-5k73","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"role":"symbol","url":"\/documentation\/potentasn1\/anystring","navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"abstract":[{"text":"Allows encoding ","type":"text"},{"inlineContent":[{"type":"text","text":"any"}],"type":"emphasis"},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyString","kind":"identifier"}],"type":"topic","title":"AnyString"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Comparable-Implementations":{"abstract":[],"url":"\/documentation\/potentasn1\/anystring\/comparable-implementations","title":"Comparable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Comparable-Implementations","kind":"article","role":"collectionGroup","type":"topic"},"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"kind":"symbol","title":"PotentASN1"}}}
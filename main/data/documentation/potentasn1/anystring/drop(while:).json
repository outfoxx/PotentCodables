{"abstract":[{"type":"text","text":"Returns a subsequence by skipping elements while "},{"type":"codeVoice","code":"predicate"},{"text":" returns","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"text":" and returning the remaining elements.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/anystring\/drop(while:)"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/drop(while:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A closure that takes an element of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence as its argument and returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the element should"},{"type":"text","text":" "},{"text":"be skipped or ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" if it should be included. Once the predicate"},{"text":" ","type":"text"},{"type":"text","text":"returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" it will not be called again."}],"type":"paragraph"}],"name":"predicate"}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"name":"Complexity","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"text":" is the length of the collection.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"drop(while:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"extendedModule":"Swift","externalID":"s:SlsE4drop5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10PotentASN19AnyStringV"},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString/drop(while:)":{"abstract":[{"text":"Returns a subsequence by skipping elements while ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" returns","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" and returning the remaining elements."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa","text":"SubSequence"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/drop(while:)","url":"\/documentation\/potentasn1\/anystring\/drop(while:)","title":"drop(while:)","kind":"symbol","role":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","title":"PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"abstract":[],"title":"Collection Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/potentasn1\/anystring\/collection-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations","kind":"article"}}}
{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"predicate","content":[{"inlineContent":[{"text":"A closure that takes an element of the","type":"text"},{"type":"text","text":" "},{"text":"sequence as its argument and returns ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the element should"},{"type":"text","text":" "},{"text":"be skipped or ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" if it should be included. Once the predicate"},{"text":" ","type":"text"},{"type":"text","text":"returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" it will not be called again."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"style":"note","name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the collection."}]}]}]}],"metadata":{"symbolKind":"method","extendedModule":"Swift","externalID":"s:SlsE4drop5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10PotentASN19AnyStringV","title":"drop(while:)","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}],"role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"drop"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"while"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier","text":"SubSequence"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Returns a subsequence by skipping elements while ","type":"text"},{"code":"predicate","type":"codeVoice"},{"text":" returns","type":"text"},{"type":"text","text":" "},{"code":"true","type":"codeVoice"},{"type":"text","text":" and returning the remaining elements."}],"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/drop(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/drop(while:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString":{"navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","kind":"symbol","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"type":"text","text":"Allows encoding "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"text":" ASN.1 string value while allowing control of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}]},"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","title":"PotentASN1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString/drop(while:)":{"url":"\/documentation\/potentasn1\/anystring\/drop(while:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/drop(while:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"drop","kind":"identifier"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa","kind":"typeIdentifier"}],"title":"drop(while:)","abstract":[{"type":"text","text":"Returns a subsequence by skipping elements while "},{"code":"predicate","type":"codeVoice"},{"text":" returns","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"true"},{"text":" and returning the remaining elements.","type":"text"}],"kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Collection-Implementations":{"kind":"article","title":"Collection Implementations","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Collection-Implementations","abstract":[],"type":"topic","url":"\/documentation\/potentasn1\/anystring\/collection-implementations"}}}
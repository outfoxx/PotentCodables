{"variants":[{"paths":["\/documentation\/potentasn1\/anystring\/contains(where:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence contains an"},{"text":" ","type":"text"},{"type":"text","text":"element that satisfies the given predicate."}],"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/contains(where:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"kind":"text","text":"("},{"text":"where","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:ST7ElementQa","text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"inlineContent":[{"text":"A closure that takes an element of the sequence","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"as its argument and returns a Boolean value that indicates whether"},{"type":"text","text":" "},{"text":"the passed element represents a match.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"text":" if the sequence contains an element that satisfies","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"predicate"},{"type":"text","text":"; otherwise, "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"You can use the predicate to check for an element of a type that","type":"text"},{"text":" ","type":"text"},{"text":"doesnâ€™t conform to the ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":" protocol, such as the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"HTTPResponse"},{"type":"text","text":" enumeration in this example."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let lastThreeResponses: [HTTPResponse] = [.ok, .ok, .error(404)]","let hadError = lastThreeResponses.contains { element in","    if case .error = element {","        return true","    } else {","        return false","    }","}","\/\/ 'hadError' == true"]},{"type":"paragraph","inlineContent":[{"text":"Alternatively, a predicate can be satisfied by a range of ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" "},{"text":"elements or a general condition. This example shows how you can check an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"array for an expense greater than $100."}]},{"type":"codeListing","syntax":null,"code":["let expenses = [21.37, 55.21, 9.32, 10.18, 388.77, 11.41]","let hasBigPurchase = expenses.contains { $0 > 100 }","\/\/ 'hasBigPurchase' == true"]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":" is the length of the sequence.","type":"text"}]}],"name":"Complexity"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"externalID":"s:STsE8contains5whereS2b7ElementQzKXE_tKF::SYNTHESIZED::s:10PotentASN19AnyStringV","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"symbolKind":"method","title":"contains(where:)","role":"symbol","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"sections":[],"references":{"doc://PotentCodables/documentation/PotentASN1/AnyString":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"type":"text","text":"specific ASN.1 tag."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyString","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","title":"PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"abstract":[],"title":"Sequence Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","kind":"article"},"doc://PotentCodables/documentation/PotentASN1/AnyString/contains(where:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"contains"},{"kind":"text","text":"("},{"text":"where","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"contains(where:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/contains(where:)","url":"\/documentation\/potentasn1\/anystring\/contains(where:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence contains an"},{"type":"text","text":" "},{"text":"element that satisfies the given predicate.","type":"text"}],"role":"symbol","type":"topic"}}}
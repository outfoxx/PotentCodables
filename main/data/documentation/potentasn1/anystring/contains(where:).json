{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"title":"contains(where:)","extendedModule":"Swift","symbolKind":"method","externalID":"s:STsE8contains5whereS2b7ElementQzKXE_tKF::SYNTHESIZED::s:10PotentASN19AnyStringV"},"abstract":[{"text":"Returns a Boolean value indicating whether the sequence contains an","type":"text"},{"text":" ","type":"text"},{"text":"element that satisfies the given predicate.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"text":"where","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that takes an element of the sequence","type":"text"},{"type":"text","text":" "},{"type":"text","text":"as its argument and returns a Boolean value that indicates whether"},{"text":" ","type":"text"},{"text":"the passed element represents a match.","type":"text"}],"type":"paragraph"}],"name":"predicate"}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"text":" if the sequence contains an element that satisfies","type":"text"},{"text":" ","type":"text"},{"code":"predicate","type":"codeVoice"},{"type":"text","text":"; otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"You can use the predicate to check for an element of a type that"},{"type":"text","text":" "},{"type":"text","text":"doesnâ€™t conform to the "},{"code":"Equatable","type":"codeVoice"},{"text":" protocol, such as the","type":"text"},{"type":"text","text":" "},{"code":"HTTPResponse","type":"codeVoice"},{"type":"text","text":" enumeration in this example."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["enum HTTPResponse {","    case ok","    case error(Int)","}","","let lastThreeResponses: [HTTPResponse] = [.ok, .ok, .error(404)]","let hadError = lastThreeResponses.contains { element in","    if case .error = element {","        return true","    } else {","        return false","    }","}","\/\/ 'hadError' == true"]},{"inlineContent":[{"text":"Alternatively, a predicate can be satisfied by a range of ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"elements or a general condition. This example shows how you can check an"},{"type":"text","text":" "},{"text":"array for an expense greater than $100.","type":"text"}],"type":"paragraph"},{"code":["let expenses = [21.37, 55.21, 9.32, 10.18, 388.77, 11.41]","let hasBigPurchase = expenses.contains { $0 > 100 }","\/\/ 'hasBigPurchase' == true"],"type":"codeListing","syntax":null},{"content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"name":"Complexity","type":"aside","style":"note"}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/potentasn1\/anystring\/contains(where:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/contains(where:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","title":"PotentASN1","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/AnyString/Sequence-Implementations":{"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/potentasn1\/anystring\/sequence-implementations","role":"collectionGroup","title":"Sequence Implementations"},"doc://PotentCodables/documentation/PotentASN1/AnyString/contains(where:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString\/contains(where:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"contains","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"where"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"url":"\/documentation\/potentasn1\/anystring\/contains(where:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the sequence contains an"},{"type":"text","text":" "},{"type":"text","text":"element that satisfies the given predicate."}],"title":"contains(where:)","role":"symbol"},"doc://PotentCodables/documentation/PotentASN1/AnyString":{"navigatorTitle":[{"kind":"identifier","text":"AnyString"}],"abstract":[{"text":"Allows encoding ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" ASN.1 string value while allowing control of the"},{"type":"text","text":" "},{"text":"specific ASN.1 tag.","type":"text"}],"role":"symbol","url":"\/documentation\/potentasn1\/anystring","title":"AnyString","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/AnyString","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnyString","kind":"identifier"}],"kind":"symbol"}}}
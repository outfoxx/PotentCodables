{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/!=(_:_:)"},"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/potentasn1\/asn1serialization\/error\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/Equatable-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN10B13SerializationO5ErrorO","symbolKind":"op","title":"!=(_:_:)","role":"symbol","roleHeading":"Operator"},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization":{"url":"\/documentation\/potentasn1\/asn1serialization","kind":"symbol","title":"ASN1Serialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ASN1Serialization"}],"type":"topic","abstract":[{"type":"text","text":"ASN.1 encoded data reading\/writing."}],"navigatorTitle":[{"text":"ASN1Serialization","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization","role":"symbol"},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","title":"PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error":{"url":"\/documentation\/potentasn1\/asn1serialization\/error","kind":"symbol","title":"ASN1Serialization.Error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"abstract":[{"type":"text","text":"ASN.1 Data Errors"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Error"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error","role":"symbol"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error/!=(_:_:)":{"title":"!=(_:_:)","url":"\/documentation\/potentasn1\/asn1serialization\/error\/!=(_:_:)","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/!=(_:_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}]},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/Equatable-Implementations","title":"Equatable Implementations","abstract":[],"type":"topic","url":"\/documentation\/potentasn1\/asn1serialization\/error\/equatable-implementations","role":"collectionGroup","kind":"article"}}}
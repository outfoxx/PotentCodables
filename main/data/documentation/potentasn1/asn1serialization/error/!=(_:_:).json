{"metadata":{"extendedModule":"Swift","title":"!=(_:_:)","symbolKind":"op","role":"symbol","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN10B13SerializationO5ErrorO","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}],"name":"rhs"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/asn1serialization\/error\/!=(_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/Equatable-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/!=(_:_:)"},"references":{"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error/!=(_:_:)":{"kind":"symbol","url":"\/documentation\/potentasn1\/asn1serialization\/error\/!=(_:_:)","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/!=(_:_:)"},"doc://PotentCodables/documentation/PotentASN1":{"type":"topic","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"role":"collection","title":"PotentASN1","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization","navigatorTitle":[{"text":"ASN1Serialization","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"ASN.1 encoded data reading\/writing."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"ASN1Serialization","kind":"identifier"}],"url":"\/documentation\/potentasn1\/asn1serialization","title":"ASN1Serialization","role":"symbol"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error/Equatable-Implementations":{"url":"\/documentation\/potentasn1\/asn1serialization\/error\/equatable-implementations","abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","kind":"article"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Error"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error","navigatorTitle":[{"text":"Error","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"ASN.1 Data Errors"}],"url":"\/documentation\/potentasn1\/asn1serialization\/error","role":"symbol","title":"ASN1Serialization.Error"}}}
{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}]},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]}]}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/asn1serialization\/error\/!=(_:_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/!=(_:_:)"},"metadata":{"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN10B13SerializationO5ErrorO","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"extendedModule":"Swift","role":"symbol","roleHeading":"Operator","modules":[{"relatedModules":["Swift"],"name":"PotentASN1"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/Equatable-Implementations"]]},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization":{"title":"ASN1Serialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"ASN1Serialization","kind":"identifier"}],"abstract":[{"text":"ASN.1 encoded data reading\/writing.","type":"text"}],"kind":"symbol","url":"\/documentation\/potentasn1\/asn1serialization","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization","role":"symbol","navigatorTitle":[{"text":"ASN1Serialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentASN1":{"abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","title":"PotentASN1","role":"collection","url":"\/documentation\/potentasn1"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error/Equatable-Implementations":{"title":"Equatable Implementations","abstract":[],"kind":"article","url":"\/documentation\/potentasn1\/asn1serialization\/error\/equatable-implementations","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/Equatable-Implementations","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error/!=(_:_:)":{"title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error\/!=(_:_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"role":"symbol","url":"\/documentation\/potentasn1\/asn1serialization\/error\/!=(_:_:)"},"doc://PotentCodables/documentation/PotentASN1/ASN1Serialization/Error":{"navigatorTitle":[{"kind":"identifier","text":"Error"}],"role":"symbol","url":"\/documentation\/potentasn1\/asn1serialization\/error","type":"topic","abstract":[{"type":"text","text":"ASN.1 Data Errors"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Error"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1Serialization\/Error","title":"ASN1Serialization.Error"}}}
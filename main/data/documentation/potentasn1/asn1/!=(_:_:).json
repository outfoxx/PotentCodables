{"variants":[{"paths":["\/documentation\/potentasn1\/asn1\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1\/!=(_:_:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1\/Equatable-Implementations"]]},"kind":"symbol","metadata":{"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN10B0O","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"extendedModule":"Swift","symbolKind":"op","role":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"roleHeading":"Operator"},"references":{"doc://PotentCodables/documentation/PotentASN1/ASN1":{"role":"symbol","type":"topic","title":"ASN1","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ASN1"}],"kind":"symbol","url":"\/documentation\/potentasn1\/asn1","navigatorTitle":[{"text":"ASN1","kind":"identifier"}],"abstract":[{"text":"General ASN.1 Value.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1"},"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"kind":"symbol","title":"PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/ASN1/Equatable-Implementations":{"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1\/Equatable-Implementations","url":"\/documentation\/potentasn1\/asn1\/equatable-implementations","kind":"article","title":"Equatable Implementations","type":"topic","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentASN1/ASN1/!=(_:_:)":{"type":"topic","url":"\/documentation\/potentasn1\/asn1\/!=(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"title":"!=(_:_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/ASN1\/!=(_:_:)"}}}
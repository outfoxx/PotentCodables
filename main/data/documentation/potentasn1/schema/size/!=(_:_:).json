{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/!=(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/potentasn1\/schema\/size\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/Equatable-Implementations"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}]},{"name":"rhs","content":[{"inlineContent":[{"text":"Another value to compare.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"metadata":{"role":"symbol","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"symbolKind":"op","roleHeading":"Operator","extendedModule":"Swift","title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN16SchemaO4SizeO","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"references":{"doc://PotentCodables/documentation/PotentASN1/Schema/Size/!=(_:_:)":{"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/!=(_:_:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/potentasn1\/schema\/size\/!=(_:_:)","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://PotentCodables/documentation/PotentASN1/Schema/Size/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/Equatable-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/potentasn1\/schema\/size\/equatable-implementations","title":"Equatable Implementations","abstract":[],"kind":"article"},"doc://PotentCodables/documentation/PotentASN1/Schema":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema","kind":"symbol","title":"Schema","navigatorTitle":[{"text":"Schema","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Schema","kind":"identifier"}],"url":"\/documentation\/potentasn1\/schema","abstract":[{"type":"text","text":"ASN.1 schema specification DSL."}],"type":"topic"},"doc://PotentCodables/documentation/PotentASN1":{"kind":"symbol","title":"PotentASN1","role":"collection","abstract":[{"text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding.","type":"text"}],"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1"},"doc://PotentCodables/documentation/PotentASN1/Schema/Size":{"title":"Schema.Size","url":"\/documentation\/potentasn1\/schema\/size","navigatorTitle":[{"text":"Size","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Size","kind":"identifier"}],"role":"symbol"}}}
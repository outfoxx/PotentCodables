{"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"roleHeading":"Operator","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"symbolKind":"op","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN16SchemaO4SizeO","role":"symbol","extendedModule":"Swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentasn1\/schema\/size\/!=(_:_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/!=(_:_:)"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/Equatable-Implementations"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"references":{"doc://PotentCodables/documentation/PotentASN1/Schema/Size/Equatable-Implementations":{"url":"\/documentation\/potentasn1\/schema\/size\/equatable-implementations","role":"collectionGroup","kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/Equatable-Implementations","type":"topic","abstract":[]},"doc://PotentCodables/documentation/PotentASN1/Schema":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Schema","kind":"identifier"}],"navigatorTitle":[{"text":"Schema","kind":"identifier"}],"url":"\/documentation\/potentasn1\/schema","title":"Schema","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema","type":"topic","role":"symbol","abstract":[{"type":"text","text":"ASN.1 schema specification DSL."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1/Schema/Size/!=(_:_:)":{"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"title":"!=(_:_:)","url":"\/documentation\/potentasn1\/schema\/size\/!=(_:_:)"},"doc://PotentCodables/documentation/PotentASN1/Schema/Size":{"type":"topic","title":"Schema.Size","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Size"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Size","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Size"}],"url":"\/documentation\/potentasn1\/schema\/size","kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1":{"url":"\/documentation\/potentasn1","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","role":"collection","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"kind":"symbol","title":"PotentASN1"}}}
{"metadata":{"extendedModule":"Swift","modules":[{"name":"PotentASN1","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"op","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentASN16SchemaO","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"!=(_:_:)"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentASN1","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema","doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Equatable-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/potentasn1\/schema\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/!=(_:_:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentASN1/Schema/!=(_:_:)":{"title":"!=(_:_:)","url":"\/documentation\/potentasn1\/schema\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/!=(_:_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentASN1/Schema/Equatable-Implementations":{"url":"\/documentation\/potentasn1\/schema\/equatable-implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema\/Equatable-Implementations","title":"Equatable Implementations"},"doc://PotentCodables/documentation/PotentASN1/Schema":{"abstract":[{"type":"text","text":"ASN.1 schema specification DSL."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1\/Schema","type":"topic","role":"symbol","navigatorTitle":[{"text":"Schema","kind":"identifier"}],"url":"\/documentation\/potentasn1\/schema","title":"Schema","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Schema","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentASN1":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentASN1","url":"\/documentation\/potentasn1","abstract":[{"type":"text","text":"Reading and writing ASN.1 encoded data, as well as schema oriented support for encoding and decoding."}],"title":"PotentASN1","kind":"symbol","role":"collection","type":"topic"}}}
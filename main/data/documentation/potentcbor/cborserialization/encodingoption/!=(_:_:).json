{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"!=(_:_:)","modules":[{"relatedModules":["Swift"],"name":"PotentCBOR"}],"extendedModule":"Swift","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR17CBORSerializationO14EncodingOptionO","symbolKind":"op","role":"symbol","roleHeading":"Operator"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/Equatable-Implementations"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcbor\/cborserialization\/encodingoption\/!=(_:_:)"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/!=(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/EncodingOption/Equatable-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/Equatable-Implementations","url":"\/documentation\/potentcbor\/cborserialization\/encodingoption\/equatable-implementations","kind":"article"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/EncodingOption/!=(_:_:)":{"role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/!=(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"!=(_:_:)","url":"\/documentation\/potentcbor\/cborserialization\/encodingoption\/!=(_:_:)"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBORSerialization"}],"title":"CBORSerialization","abstract":[{"type":"text","text":"Convenience API for serializing and deserialization CBOR items."}],"kind":"symbol","url":"\/documentation\/potentcbor\/cborserialization","navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","type":"topic"},"doc://PotentCodables/documentation/PotentCBOR":{"url":"\/documentation\/potentcbor","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","type":"topic","abstract":[{"text":"Complete support for Concise Binary Object Representation encoded data in pure Swift.","type":"text"}],"title":"PotentCBOR","kind":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/EncodingOption":{"type":"topic","abstract":[{"type":"text","text":"Options for encoding CBOR"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodingOption"}],"title":"CBORSerialization.EncodingOption","navigatorTitle":[{"kind":"identifier","text":"EncodingOption"}],"kind":"symbol","url":"\/documentation\/potentcbor\/cborserialization\/encodingoption"}}}
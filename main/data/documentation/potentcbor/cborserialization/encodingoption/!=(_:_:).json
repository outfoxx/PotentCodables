{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}],"name":"lhs"},{"content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}],"name":"rhs"}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/Equatable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcbor\/cborserialization\/encodingoption\/!=(_:_:)"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/!=(_:_:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Operator","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR17CBORSerializationO14EncodingOptionO","title":"!=(_:_:)","extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"PotentCBOR"}],"symbolKind":"op","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentCBOR":{"url":"\/documentation\/potentcbor","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","kind":"symbol","title":"PotentCBOR","abstract":[{"text":"Complete support for Concise Binary Object Representation encoded data in pure Swift.","type":"text"}],"role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/EncodingOption":{"url":"\/documentation\/potentcbor\/cborserialization\/encodingoption","navigatorTitle":[{"text":"EncodingOption","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"EncodingOption","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption","kind":"symbol","title":"CBORSerialization.EncodingOption","abstract":[{"type":"text","text":"Options for encoding CBOR"}],"role":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/EncodingOption/!=(_:_:)":{"title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"type":"topic","role":"symbol","url":"\/documentation\/potentcbor\/cborserialization\/encodingoption\/!=(_:_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/EncodingOption/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/potentcbor\/cborserialization\/encodingoption\/equatable-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/EncodingOption\/Equatable-Implementations","title":"Equatable Implementations"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"url":"\/documentation\/potentcbor\/cborserialization","navigatorTitle":[{"text":"CBORSerialization","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBORSerialization","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","kind":"symbol","title":"CBORSerialization","abstract":[{"type":"text","text":"Convenience API for serializing and deserialization CBOR items."}],"role":"symbol","type":"topic"}}}
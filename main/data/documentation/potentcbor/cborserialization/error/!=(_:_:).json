{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcbor\/cborserialization\/error\/!=(_:_:)"]}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/!=(_:_:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/Equatable-Implementations"]]},"sections":[],"metadata":{"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR17CBORSerializationO5ErrorO","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"!=(_:_:)","symbolKind":"op","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"PotentCBOR"}],"roleHeading":"Operator","extendedModule":"Swift"},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"title":"CBORSerialization","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBORSerialization","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"url":"\/documentation\/potentcbor\/cborserialization","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}]},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/Error/Equatable-Implementations":{"kind":"article","url":"\/documentation\/potentcbor\/cborserialization\/error\/equatable-implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/Equatable-Implementations","title":"Equatable Implementations"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/Error":{"role":"symbol","navigatorTitle":[{"text":"Error","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error","type":"topic","abstract":[{"type":"text","text":"Errors throws during serialization and deserialization"}],"title":"CBORSerialization.Error","url":"\/documentation\/potentcbor\/cborserialization\/error","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCBOR":{"kind":"symbol","abstract":[{"type":"text","text":"Complete support for Concise Binary Object Representation encoded data in pure Swift."}],"url":"\/documentation\/potentcbor","title":"PotentCBOR","type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/Error/!=(_:_:)":{"type":"topic","url":"\/documentation\/potentcbor\/cborserialization\/error\/!=(_:_:)","kind":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"role":"symbol"}}}
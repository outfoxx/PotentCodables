{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"PotentCBOR"}],"roleHeading":"Operator","symbolKind":"op","extendedModule":"Swift","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR17CBORSerializationO5ErrorO"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/!=(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/Equatable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcbor\/cborserialization\/error\/!=(_:_:)"]}],"references":{"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/Error/!=(_:_:)":{"title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/!=(_:_:)","role":"symbol","url":"\/documentation\/potentcbor\/cborserialization\/error\/!=(_:_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/Error":{"kind":"symbol","abstract":[{"type":"text","text":"Errors throws during serialization and deserialization"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Error"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}],"title":"CBORSerialization.Error","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error","url":"\/documentation\/potentcbor\/cborserialization\/error"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization/Error/Equatable-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","type":"topic","title":"Equatable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization\/Error\/Equatable-Implementations","url":"\/documentation\/potentcbor\/cborserialization\/error\/equatable-implementations"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"title":"CBORSerialization","kind":"symbol","type":"topic","abstract":[{"text":"Convenience API for serializing and deserialization CBOR items.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBORSerialization","kind":"identifier"}],"url":"\/documentation\/potentcbor\/cborserialization","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization"},"doc://PotentCodables/documentation/PotentCBOR":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","type":"topic","kind":"symbol","url":"\/documentation\/potentcbor","abstract":[{"text":"Complete support for Concise Binary Object Representation encoded data in pure Swift.","type":"text"}],"title":"PotentCBOR","role":"collection"}}}
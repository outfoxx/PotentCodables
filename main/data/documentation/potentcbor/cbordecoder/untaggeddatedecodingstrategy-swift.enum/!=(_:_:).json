{"sections":[],"metadata":{"role":"symbol","symbolKind":"op","roleHeading":"Operator","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"modules":[{"name":"PotentCBOR","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR11CBORDecoderC28UntaggedDateDecodingStrategyO","extendedModule":"Swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"text":"Another value to compare.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder\/UntaggedDateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder\/UntaggedDateDecodingStrategy-swift.enum\/Equatable-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcbor\/cbordecoder\/untaggeddatedecodingstrategy-swift.enum\/!=(_:_:)"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder\/UntaggedDateDecodingStrategy-swift.enum\/!=(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"references":{"doc://PotentCodables/documentation/PotentCBOR/CBORDecoder":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBORDecoder","kind":"identifier"}],"url":"\/documentation\/potentcbor\/cbordecoder","navigatorTitle":[{"text":"CBORDecoder","kind":"identifier"}],"title":"CBORDecoder","role":"symbol","abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder","isActive":true,"type":"reference"},{"text":" facilitates the decoding of CBOR into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBORDecoder/UntaggedDateDecodingStrategy-swift.enum/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder\/UntaggedDateDecodingStrategy-swift.enum\/Equatable-Implementations","url":"\/documentation\/potentcbor\/cbordecoder\/untaggeddatedecodingstrategy-swift.enum\/equatable-implementations","type":"topic","kind":"article","abstract":[]},"doc://PotentCodables/documentation/PotentCBOR":{"abstract":[{"type":"text","text":"Complete support for Concise Binary Object Representation encoded data in pure Swift."}],"role":"collection","url":"\/documentation\/potentcbor","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","kind":"symbol","type":"topic","title":"PotentCBOR"},"doc://PotentCodables/documentation/PotentCBOR/CBORDecoder/UntaggedDateDecodingStrategy-swift.enum":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder\/UntaggedDateDecodingStrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for decoding untagged "},{"type":"codeVoice","code":"Date"},{"text":" values.","type":"text"}],"role":"symbol","url":"\/documentation\/potentcbor\/cbordecoder\/untaggeddatedecodingstrategy-swift.enum","title":"CBORDecoder.UntaggedDateDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UntaggedDateDecodingStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UntaggedDateDecodingStrategy"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBORDecoder/UntaggedDateDecodingStrategy-swift.enum/!=(_:_:)":{"title":"!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"role":"symbol","url":"\/documentation\/potentcbor\/cbordecoder\/untaggeddatedecodingstrategy-swift.enum\/!=(_:_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORDecoder\/UntaggedDateDecodingStrategy-swift.enum\/!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}}}
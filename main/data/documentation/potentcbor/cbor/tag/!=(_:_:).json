{"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"sections":[],"metadata":{"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR0B0O3TagV","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"extendedModule":"Swift","role":"symbol","roleHeading":"Operator","modules":[{"name":"PotentCBOR","relatedModules":["Swift"]}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"text":"Another value to compare.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/potentcbor\/cbor\/tag\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/!=(_:_:)"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/Equatable-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentCBOR":{"url":"\/documentation\/potentcbor","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","kind":"symbol","title":"PotentCBOR","abstract":[{"text":"Complete support for Concise Binary Object Representation encoded data in pure Swift.","type":"text"}],"role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag/!=(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/!=(_:_:)","role":"symbol","title":"!=(_:_:)","url":"\/documentation\/potentcbor\/cbor\/tag\/!=(_:_:)"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBOR"}],"title":"CBOR","url":"\/documentation\/potentcbor\/cbor","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"General CBOR value."}],"navigatorTitle":[{"text":"CBOR","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag":{"url":"\/documentation\/potentcbor\/cbor\/tag","type":"topic","abstract":[{"text":"A CBOR ","type":"text"},{"type":"codeVoice","code":"tag"},{"type":"text","text":" for tagged values supported by the specification."}],"role":"symbol","title":"CBOR.Tag","navigatorTitle":[{"kind":"identifier","text":"Tag"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Tag"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag/Equatable-Implementations":{"url":"\/documentation\/potentcbor\/cbor\/tag\/equatable-implementations","title":"Equatable Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/Equatable-Implementations","role":"collectionGroup","kind":"article"}}}
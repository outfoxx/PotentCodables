{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/Equatable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcbor\/cbor\/tag\/!=(_:_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/!=(_:_:)"},"kind":"symbol","sections":[],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]}]}],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"extendedModule":"Swift","role":"symbol","symbolKind":"op","roleHeading":"Operator","modules":[{"name":"PotentCBOR","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR0B0O3TagV","title":"!=(_:_:)"},"references":{"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Tag"}],"navigatorTitle":[{"text":"Tag","kind":"identifier"}],"abstract":[{"type":"text","text":"A CBOR "},{"type":"codeVoice","code":"tag"},{"type":"text","text":" for tagged values supported by the specification."}],"type":"topic","kind":"symbol","url":"\/documentation\/potentcbor\/cbor\/tag","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag","title":"CBOR.Tag"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag/Equatable-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/potentcbor\/cbor\/tag\/equatable-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/Equatable-Implementations","abstract":[],"title":"Equatable Implementations","kind":"article"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag/!=(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/!=(_:_:)","url":"\/documentation\/potentcbor\/cbor\/tag\/!=(_:_:)","title":"!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","abstract":[{"type":"text","text":"General CBOR value."}],"kind":"symbol","navigatorTitle":[{"text":"CBOR","kind":"identifier"}],"role":"symbol","title":"CBOR","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBOR"}],"url":"\/documentation\/potentcbor\/cbor","type":"topic"},"doc://PotentCodables/documentation/PotentCBOR":{"abstract":[{"type":"text","text":"Complete support for Concise Binary Object Representation encoded data in pure Swift."}],"title":"PotentCBOR","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","type":"topic","kind":"symbol","url":"\/documentation\/potentcbor","role":"collection"}}}
{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/!=(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Another value to compare.","type":"text"}],"type":"paragraph"}],"name":"rhs"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}]}],"metadata":{"extendedModule":"Swift","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR0B0O","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"!=(_:_:)","modules":[{"relatedModules":["Swift"],"name":"PotentCBOR"}],"role":"symbol","roleHeading":"Operator","symbolKind":"op"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Equatable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcbor\/cbor\/!=(_:_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://PotentCodables/documentation/PotentCBOR":{"abstract":[{"type":"text","text":"Complete support for Concise Binary Object Representation encoded data in pure Swift."}],"role":"collection","url":"\/documentation\/potentcbor","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","kind":"symbol","type":"topic","title":"PotentCBOR"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/!=(_:_:)":{"url":"\/documentation\/potentcbor\/cbor\/!=(_:_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/!=(_:_:)","type":"topic","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"title":"!=(_:_:)","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Equatable-Implementations","kind":"article","abstract":[],"title":"Equatable Implementations","url":"\/documentation\/potentcbor\/cbor\/equatable-implementations","type":"topic","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"url":"\/documentation\/potentcbor\/cbor","type":"topic","abstract":[{"text":"General CBOR value.","type":"text"}],"title":"CBOR","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CBOR","kind":"identifier"}],"navigatorTitle":[{"text":"CBOR","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","kind":"symbol"}}}
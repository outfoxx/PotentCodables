{"variants":[{"paths":["\/documentation\/potentcbor\/cbor\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"content":[{"inlineContent":[{"text":"Another value to compare.","type":"text"}],"type":"paragraph"}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/!=(_:_:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Equatable-Implementations"]]},"metadata":{"symbolKind":"op","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentCBOR0B0O","extendedModule":"Swift","role":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"roleHeading":"Operator","modules":[{"name":"PotentCBOR","relatedModules":["Swift"]}]},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCBOR":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","role":"collection","title":"PotentCBOR","kind":"symbol","type":"topic","abstract":[{"text":"Complete support for Concise Binary Object Representation encoded data in pure Swift.","type":"text"}],"url":"\/documentation\/potentcbor"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/!=(_:_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"role":"symbol","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/potentcbor\/cbor\/!=(_:_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/!=(_:_:)"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"title":"CBOR","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","url":"\/documentation\/potentcbor\/cbor","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBOR","kind":"identifier"}],"navigatorTitle":[{"text":"CBOR","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"General CBOR value.","type":"text"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Equatable-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Equatable-Implementations","role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/potentcbor\/cbor\/equatable-implementations","kind":"article"}}}
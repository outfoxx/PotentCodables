{"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","symbolKind":"class","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"roleHeading":"Class","modules":[{"name":"PotentJSON"}],"title":"JSONEncoder","externalID":"s:10PotentJSON11JSONEncoderC"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON values."}],"topicSections":[{"generated":true,"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct"]},{"generated":true,"title":"Initializers","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/init()"],"anchor":"Initializers"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dataEncodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dateEncodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/nonConformingFloatEncodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/options","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/outputFormatting-swift.property"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/default"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"title":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DataEncodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DateEncodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"],"anchor":"Enumerations","generated":true},{"title":"Default Implementations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/TopLevelEncoder-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}]}]}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueEncoder"]},{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelEncoder"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/potentjson\/jsonencoder"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","interfaceLanguage":"swift"},"sections":[],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/DataEncodingStrategy-swift.enum":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DataEncodingStrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DataEncodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"DataEncodingStrategy"}],"kind":"symbol","title":"JSONEncoder.DataEncodingStrategy","url":"\/documentation\/potentjson\/jsonencoder\/dataencodingstrategy-swift.enum","type":"topic","abstract":[{"type":"text","text":"The strategy to use for encoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}]},"doc://PotentCodables/documentation/PotentCodables/TopLevelEncoder":{"kind":"symbol","abstract":[{"type":"text","text":"A type that defines methods for encoding."}],"title":"TopLevelEncoder","type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/toplevelencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/nonConformingFloatEncodingStrategy-swift.property":{"type":"topic","url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.property","role":"symbol","abstract":[{"type":"text","text":"The strategy to use in encoding non-conforming numbers. Defaults to "},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nonConformingFloatEncodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC","kind":"typeIdentifier","text":"JSONEncoder"},{"text":".","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/nonConformingFloatEncodingStrategy-swift.property","title":"nonConformingFloatEncodingStrategy","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"role":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"navigatorTitle":[{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"kind":"symbol","title":"JSONEncoder.NonConformingFloatEncodingStrategy","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/default":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/default","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`default`"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"}],"kind":"symbol","title":"default","url":"\/documentation\/potentjson\/jsonencoder\/default","type":"topic","abstract":[]},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"abstract":[{"type":"text","text":"All encoders support encoding to their native values."}],"role":"symbol","url":"\/documentation\/potentcodables\/encodestotree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToTree"}],"navigatorTitle":[{"text":"EncodesToTree","kind":"identifier"}],"kind":"symbol","title":"EncodesToTree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","isActive":true,"type":"reference"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON values."}],"role":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONEncoder"}],"url":"\/documentation\/potentjson\/jsonencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","title":"JSONEncoder","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/DateEncodingStrategy-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"DateEncodingStrategy"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateEncodingStrategy"}],"url":"\/documentation\/potentjson\/jsonencoder\/dateencodingstrategy-swift.enum","title":"JSONEncoder.DateEncodingStrategy","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DateEncodingStrategy-swift.enum","type":"topic","kind":"symbol","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" values.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/ValueEncoder":{"kind":"symbol","abstract":[{"code":"ValueEncoder","type":"codeVoice"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into  values."}],"title":"ValueEncoder","type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/valueencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"ValueEncoder"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/options":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/options","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONEncoderTransform","preciseIdentifier":"s:10PotentJSON20JSONEncoderTransformV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10PotentJSON20JSONEncoderTransformV7OptionsV","text":"Options","kind":"typeIdentifier"}],"kind":"symbol","title":"options","url":"\/documentation\/potentjson\/jsonencoder\/options","type":"topic","abstract":[{"type":"text","text":"The options set on the top-level encoder."}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/dateEncodingStrategy-swift.property":{"kind":"symbol","abstract":[{"text":"The strategy to use in encoding dates. Defaults to ","type":"text"},{"type":"codeVoice","code":".deferredToDate"},{"text":".","type":"text"}],"title":"dateEncodingStrategy","type":"topic","role":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/dateencodingstrategy-swift.property","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dateEncodingStrategy-swift.property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"dateEncodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DateEncodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONEncoderC20DateEncodingStrategyO"}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToData":{"type":"topic","abstract":[{"type":"text","text":"Encoders that target binary formats support encoding to data."}],"url":"\/documentation\/potentcodables\/encodestodata","role":"symbol","title":"EncodesToData","navigatorTitle":[{"text":"EncodesToData","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToData"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToData"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/TopLevelEncoder-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/TopLevelEncoder-Implementations","kind":"article","title":"TopLevelEncoder Implementations","url":"\/documentation\/potentjson\/jsonencoder\/toplevelencoder-implementations","abstract":[],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","role":"collection","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/init()":{"kind":"symbol","abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with default strategies."}],"title":"init()","type":"topic","role":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/init()","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/dataEncodingStrategy-swift.property":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dataEncodingStrategy-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"dataEncodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:10PotentJSON11JSONEncoderC"},{"kind":"text","text":"."},{"text":"DataEncodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONEncoderC20DataEncodingStrategyO"}],"kind":"symbol","title":"dataEncodingStrategy","url":"\/documentation\/potentjson\/jsonencoder\/dataencodingstrategy-swift.property","abstract":[{"type":"text","text":"The strategy to use in encoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"kind":"symbol","abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"title":"JSONEncoder.OutputFormatting","type":"topic","role":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/outputFormatting-swift.property":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/outputFormatting-swift.property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"outputFormatting"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC16OutputFormattingV","text":"OutputFormatting","kind":"typeIdentifier"}],"kind":"symbol","title":"outputFormatting","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.property","abstract":[{"type":"text","text":"The output format to produce. Defaults to "},{"code":"[]","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic"},"doc://PotentCodables/s8CopyableP":{"type":"unresolvable","title":"Swift.Copyable","identifier":"doc:\/\/PotentCodables\/s8CopyableP"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"navigatorTitle":[{"text":"EncodesToString","kind":"identifier"}],"title":"EncodesToString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","role":"symbol","type":"topic","url":"\/documentation\/potentcodables\/encodestostring","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToString"}],"abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"type":"text","text":" "},{"type":"text","text":"and encoding to data using a default string encoding."}]}}}
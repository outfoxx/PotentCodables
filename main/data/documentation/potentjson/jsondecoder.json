{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/potentjson\/jsondecoder"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/PotentCodables\/7Combine15TopLevelDecoderP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"title":"JSONDecoder","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:10PotentJSON11JSONDecoderC","modules":[{"name":"PotentJSON"}],"navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"]},{"title":"Type Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"]},{"title":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]},{"title":"Default Implementations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"],"generated":true}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"role":"symbol","title":"dateDecodingStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dateDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DateDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO"}],"abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"type":"codeVoice","code":".deferredToDate"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"role":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON":{"role":"collection","title":"PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","kind":"symbol","type":"topic","url":"\/documentation\/potentjson"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"role":"symbol","title":"JSONDecoder.DateDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"role":"symbol","title":"nonConformingFloatDecodingStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NonConformingFloatDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO"}],"abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property"},"doc://PotentCodables/7Combine15TopLevelDecoderP":{"type":"unresolvable","title":"Combine.TopLevelDecoder","identifier":"doc:\/\/PotentCodables\/7Combine15TopLevelDecoderP"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"role":"symbol","title":"DecodesFromTree","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromTree"}],"abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"url":"\/documentation\/potentcodables\/decodesfromtree"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()","kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/init()"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"role":"collectionGroup","title":"TopLevelDecoder Implementations","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations","kind":"article","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"role":"symbol","title":"JSONDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"url":"\/documentation\/potentjson\/jsondecoder"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"role":"symbol","title":"dataDecodingStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dataDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DataDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO"}],"abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"role":"symbol","title":"default","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10PotentJSON11JSONDecoderC"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default","kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/default"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"role":"symbol","title":"DecodesFromString","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromString"}],"abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"type":"text","text":" "},{"type":"text","text":"data using a string encoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"url":"\/documentation\/potentcodables\/decodesfromstring"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"role":"symbol","title":"JSONDecoder.DataDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"role":"symbol","title":"options","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoderTransform","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Options","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV"}],"abstract":[{"type":"text","text":"The options set on the top-level decoder."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options","kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/options"},"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"role":"symbol","title":"ValueDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueDecoder"}],"abstract":[{"type":"codeVoice","code":"ValueDecoder"},{"type":"text","text":" facilitates the decoding of"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" values into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueDecoder"}],"url":"\/documentation\/potentcodables\/valuedecoder"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"role":"symbol","title":"DecodesFromData","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromData"}],"abstract":[{"type":"text","text":"Decoders for binary formats support decoding from data."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromData"}],"url":"\/documentation\/potentcodables\/decodesfromdata"}}}
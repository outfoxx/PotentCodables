{"abstract":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","type":"reference"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsondecoder"]}],"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"],"title":"Initializers","anchor":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"],"anchor":"Instance-Properties","generated":true},{"title":"Type Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"],"generated":true,"anchor":"Type-Properties"},{"title":"Enumerations","generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]},{"title":"Default Implementations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"metadata":{"roleHeading":"Class","modules":[{"name":"PotentJSON"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier"}],"externalID":"s:10PotentJSON11JSONDecoderC","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"title":"JSONDecoder"},"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},"references":{"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValueDecoder"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","abstract":[{"type":"codeVoice","code":"ValueDecoder"},{"text":" facilitates the decoding of","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" values into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"title":"ValueDecoder","url":"\/documentation\/potentcodables\/valuedecoder","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ValueDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/TopLevelDecoder":{"title":"TopLevelDecoder","url":"\/documentation\/potentcodables\/topleveldecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A type that defines methods for decoding.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"title":"DecodesFromData","url":"\/documentation\/potentcodables\/decodesfromdata","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DecodesFromData","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Decoders for binary formats support decoding from data."}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromData"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"title":"init()","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/init()","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[]},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"kind":"symbol","type":"topic","title":"PotentJSON","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"title":"TopLevelDecoder Implementations","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"options","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV","text":"JSONDecoderTransform","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Options","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options","url":"\/documentation\/potentjson\/jsondecoder\/options","kind":"symbol","title":"options","abstract":[{"type":"text","text":"The options set on the top-level decoder."}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"title":"dateDecodingStrategy","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dateDecodingStrategy"},{"kind":"text","text":": "},{"text":"DateDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property","abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"type":"codeVoice","code":".deferredToDate"},{"type":"text","text":"."}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"title":"JSONDecoder.DataDecodingStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"role":"symbol"},"doc://PotentCodables/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/PotentCodables\/s8CopyableP","type":"unresolvable"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","type":"topic","title":"JSONDecoder"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property","title":"dataDecodingStrategy","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"dataDecodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO","text":"DataDecodingStrategy","kind":"typeIdentifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"code":".base64","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"title":"default","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/default","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC"}],"abstract":[],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"code":".throw","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO","kind":"typeIdentifier","text":"NonConformingFloatDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","type":"topic","title":"nonConformingFloatDecodingStrategy"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"title":"DecodesFromTree","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromtree","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"title":"JSONDecoder.DateDecodingStrategy","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum","kind":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" values."}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodesFromString","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"text":"data using a string encoding.","type":"text"}],"type":"topic","url":"\/documentation\/potentcodables\/decodesfromstring","title":"DecodesFromString","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"type":"topic","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"kind":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy"}}}
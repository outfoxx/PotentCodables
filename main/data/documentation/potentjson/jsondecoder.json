{"relationshipsSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsondecoder"]}],"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true,"type":"reference"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"],"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"],"generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"title":"Enumerations","anchor":"Enumerations"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"sections":[],"kind":"symbol","metadata":{"externalID":"s:10PotentJSON11JSONDecoderC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"roleHeading":"Class","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"title":"JSONDecoder","role":"symbol","modules":[{"name":"PotentJSON"}]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"title":"dataDecodingStrategy","type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","abstract":[{"text":"The strategy to use in decoding binary data. Defaults to ","type":"text"},{"code":".base64","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dataDecodingStrategy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO","kind":"typeIdentifier","text":"DataDecodingStrategy"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","title":"nonConformingFloatDecodingStrategy","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"type":"text","text":"."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}],"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true,"type":"reference"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"url":"\/documentation\/potentjson\/jsondecoder","title":"JSONDecoder","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"type":"topic","kind":"symbol","title":"JSONDecoder.DateDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" values."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations","title":"TopLevelDecoder Implementations","url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"url":"\/documentation\/potentcodables\/decodesfromstring","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"type":"text","text":" "},{"type":"text","text":"data using a string encoding."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodesFromString","kind":"identifier"}],"title":"DecodesFromString","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options","title":"options","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/options","role":"symbol","abstract":[{"text":"The options set on the top-level decoder.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"options"},{"kind":"text","text":": "},{"text":"JSONDecoderTransform","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV"},{"text":".","kind":"text"},{"text":"Options","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dateDecodingStrategy"},{"kind":"text","text":": "},{"text":"DateDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO"}],"abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"type":"codeVoice","code":".deferredToDate"},{"text":".","type":"text"}],"title":"dateDecodingStrategy","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10PotentJSON11JSONDecoderC"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default","role":"symbol","title":"default","kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/default"},"doc://PotentCodables/documentation/PotentCodables/TopLevelDecoder":{"url":"\/documentation\/potentcodables\/topleveldecoder","kind":"symbol","title":"TopLevelDecoder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"type":"topic","abstract":[{"type":"text","text":"A type that defines methods for decoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","role":"collection","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson"},"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"kind":"symbol","title":"ValueDecoder","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueDecoder","kind":"identifier"}],"abstract":[{"code":"ValueDecoder","type":"codeVoice"},{"text":" facilitates the decoding of","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" values into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","navigatorTitle":[{"kind":"identifier","text":"ValueDecoder"}],"role":"symbol","url":"\/documentation\/potentcodables\/valuedecoder"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"role":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy","type":"topic","kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}]},"doc://PotentCodables/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/PotentCodables\/s8CopyableP","type":"unresolvable"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"kind":"symbol","url":"\/documentation\/potentcodables\/decodesfromtree","title":"DecodesFromTree","abstract":[{"text":"All encoders support decoding from their native values.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromTree","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"title":"JSONDecoder.DataDecodingStrategy","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum","navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DataDecodingStrategy","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"kind":"symbol","role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/init()","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"role":"symbol","abstract":[{"text":"Decoders for binary formats support decoding from data.","type":"text"}],"title":"DecodesFromData","navigatorTitle":[{"text":"DecodesFromData","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromData"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","type":"topic","url":"\/documentation\/potentcodables\/decodesfromdata"}}}
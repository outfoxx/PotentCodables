{"sections":[],"metadata":{"externalID":"s:10PotentJSON11JSONDecoderC","modules":[{"name":"PotentJSON"}],"symbolKind":"class","roleHeading":"Class","title":"JSONDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true,"type":"reference"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"],"generated":true,"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"],"anchor":"Type-Properties"},{"generated":true,"title":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"anchor":"Enumerations"},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"]}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"]},{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"],"title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/potentjson\/jsondecoder"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" values."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"role":"symbol","kind":"symbol","title":"JSONDecoder.DateDecodingStrategy","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"url":"\/documentation\/potentcodables\/decodesfromstring","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"role":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","kind":"symbol","title":"DecodesFromString","abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"type":"text","text":" "},{"text":"data using a string encoding.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromString"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"abstract":[],"kind":"article","type":"topic","role":"collectionGroup","title":"TopLevelDecoder Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations","url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The options set on the top-level decoder."}],"title":"options","kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/options","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV","text":"JSONDecoderTransform"},{"kind":"text","text":"."},{"text":"Options","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV","kind":"typeIdentifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"},"doc://PotentCodables/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/PotentCodables\/s8CopyableP","title":"Swift.Copyable"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsondecoder","kind":"symbol","role":"symbol","title":"JSONDecoder","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"url":"\/documentation\/potentcodables\/decodesfromtree","title":"DecodesFromTree","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","role":"symbol","kind":"symbol","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"title":"nonConformingFloatDecodingStrategy","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"text":": ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10PotentJSON11JSONDecoderC","kind":"typeIdentifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default","url":"\/documentation\/potentjson\/jsondecoder\/default","abstract":[],"type":"topic","role":"symbol","title":"default","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"type":"topic","kind":"symbol","title":"JSONDecoder.DataDecodingStrategy","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DataDecodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/potentjson\/jsondecoder\/init()","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()","type":"topic","title":"init()","kind":"symbol","abstract":[]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"type":"topic","role":"symbol","title":"dataDecodingStrategy","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dataDecodingStrategy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO","text":"DataDecodingStrategy","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"code":".base64","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"title":"dateDecodingStrategy","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"The strategy to use in decoding dates. Defaults to ","type":"text"},{"type":"codeVoice","code":".deferredToDate"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"dateDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property"},"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueDecoder","kind":"identifier"}],"title":"ValueDecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","navigatorTitle":[{"text":"ValueDecoder","kind":"identifier"}],"abstract":[{"code":"ValueDecoder","type":"codeVoice"},{"type":"text","text":" facilitates the decoding of"},{"code":"Value","type":"codeVoice"},{"text":" values into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"role":"symbol","type":"topic","url":"\/documentation\/potentcodables\/valuedecoder"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"role":"symbol","abstract":[{"type":"text","text":"Decoders for binary formats support decoding from data."}],"title":"DecodesFromData","kind":"symbol","type":"topic","url":"\/documentation\/potentcodables\/decodesfromdata","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromData","kind":"identifier"}],"navigatorTitle":[{"text":"DecodesFromData","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData"},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","url":"\/documentation\/potentjson","role":"collection","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}]},"doc://PotentCodables/documentation/PotentCodables/TopLevelDecoder":{"abstract":[{"type":"text","text":"A type that defines methods for decoding."}],"role":"symbol","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TopLevelDecoder"}],"url":"\/documentation\/potentcodables\/topleveldecoder","title":"TopLevelDecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder","type":"topic"}}}
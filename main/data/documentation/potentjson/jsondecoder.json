{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"sections":[],"topicSections":[{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"],"title":"Initializers","anchor":"Initializers"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"],"title":"Type Properties"},{"generated":true,"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}]}]}],"metadata":{"title":"JSONDecoder","modules":[{"name":"PotentJSON"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol","roleHeading":"Class","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"symbolKind":"class","externalID":"s:10PotentJSON11JSONDecoderC"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Inherits From","kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"]},{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"],"type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsondecoder"]}],"abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations","role":"collectionGroup","type":"topic","title":"TopLevelDecoder Implementations"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"url":"\/documentation\/potentcodables\/decodesfromtree","kind":"symbol","abstract":[{"text":"All encoders support decoding from their native values.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","role":"symbol","title":"DecodesFromTree","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromTree"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/default","role":"symbol","title":"default","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"type":"topic","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"text":".","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","kind":"symbol","title":"nonConformingFloatDecodingStrategy","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"text":": ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"url":"\/documentation\/potentcodables\/decodesfromstring","kind":"symbol","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","role":"symbol","title":"DecodesFromString","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromString"}]},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"kind":"symbol","url":"\/documentation\/potentjson","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dateDecodingStrategy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","title":"dateDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"code":".deferredToDate","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}],"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"title":"JSONDecoder.DataDecodingStrategy","kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"type":"topic","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/options","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options","title":"options","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"options","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV","kind":"typeIdentifier","text":"JSONDecoderTransform"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV","text":"Options"}],"abstract":[{"text":"The options set on the top-level decoder.","type":"text"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dataDecodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO","text":"DataDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}],"title":"dataDecodingStrategy","kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property"},"doc://PotentCodables/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/PotentCodables\/s8CopyableP","title":"Swift.Copyable"},"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"abstract":[{"type":"codeVoice","code":"ValueDecoder"},{"type":"text","text":" facilitates the decoding of"},{"code":"Value","type":"codeVoice"},{"text":" values into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"navigatorTitle":[{"text":"ValueDecoder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","url":"\/documentation\/potentcodables\/valuedecoder","kind":"symbol","title":"ValueDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueDecoder","kind":"identifier"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"type":"topic","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","title":"JSONDecoder.NonConformingFloatDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"title":"JSONDecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","abstract":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","type":"reference"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateDecodingStrategy"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum","title":"JSONDecoder.DateDecodingStrategy","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","role":"symbol","type":"topic","navigatorTitle":[{"text":"DateDecodingStrategy","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"role":"symbol","type":"topic","title":"init()","url":"\/documentation\/potentjson\/jsondecoder\/init()","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DecodesFromData","kind":"identifier"}],"title":"DecodesFromData","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecodesFromData"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","abstract":[{"text":"Decoders for binary formats support decoding from data.","type":"text"}],"url":"\/documentation\/potentcodables\/decodesfromdata"},"doc://PotentCodables/documentation/PotentCodables/TopLevelDecoder":{"abstract":[{"type":"text","text":"A type that defines methods for decoding."}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"title":"TopLevelDecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder","url":"\/documentation\/potentcodables\/topleveldecoder"}}}
{"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"],"kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},"abstract":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","type":"reference"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"],"title":"Initializers","anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"],"anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"title":"Enumerations","generated":true,"anchor":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"],"generated":true}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsondecoder"]}],"sections":[],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier"}],"modules":[{"name":"PotentJSON"}],"title":"JSONDecoder","roleHeading":"Class","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"symbolKind":"class","externalID":"s:10PotentJSON11JSONDecoderC"},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"kind":"symbol","abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"code":".deferredToDate","type":"codeVoice"},{"type":"text","text":"."}],"title":"dateDecodingStrategy","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"dateDecodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DateDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"abstract":[{"code":"ValueDecoder","type":"codeVoice"},{"type":"text","text":" facilitates the decoding of"},{"code":"Value","type":"codeVoice"},{"text":" values into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"type":"topic","url":"\/documentation\/potentcodables\/valuedecoder","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ValueDecoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","title":"ValueDecoder","role":"symbol","navigatorTitle":[{"text":"ValueDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"type":"topic","abstract":[{"text":"The strategy to use in decoding binary data. Defaults to ","type":"text"},{"code":".base64","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","title":"dataDecodingStrategy","role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dataDecodingStrategy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DataDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","role":"collection","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default","abstract":[],"url":"\/documentation\/potentjson\/jsondecoder\/default","type":"topic","kind":"symbol","title":"default","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"title":"DecodesFromString","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"DecodesFromString","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"DecodesFromString","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","abstract":[{"text":"Decoders for text formats support decoding from strings and from","type":"text"},{"text":" ","type":"text"},{"text":"data using a string encoding.","type":"text"}],"url":"\/documentation\/potentcodables\/decodesfromstring"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"title":"JSONDecoder.DataDecodingStrategy","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum","type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","title":"DecodesFromTree","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DecodesFromTree"}],"url":"\/documentation\/potentcodables\/decodesfromtree"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum","title":"JSONDecoder.DateDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateDecodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"DateDecodingStrategy","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"options","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONDecoderTransform","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV","text":"Options"}],"kind":"symbol","type":"topic","title":"options","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options","abstract":[{"type":"text","text":"The options set on the top-level decoder."}],"role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/options"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"abstract":[{"text":"The strategy to use in decoding non-conforming numbers. Defaults to ","type":"text"},{"code":".throw","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","type":"topic","title":"nonConformingFloatDecodingStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NonConformingFloatDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","abstract":[],"url":"\/documentation\/potentjson\/jsondecoder\/init()","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true,"type":"reference"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"type":"topic","title":"JSONDecoder","url":"\/documentation\/potentjson\/jsondecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"abstract":[{"text":"Decoders for binary formats support decoding from data.","type":"text"}],"title":"DecodesFromData","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/potentcodables\/decodesfromdata","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromData"}],"navigatorTitle":[{"kind":"identifier","text":"DecodesFromData"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/TopLevelDecoder":{"kind":"symbol","abstract":[{"text":"A type that defines methods for decoding.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"TopLevelDecoder","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder","title":"TopLevelDecoder","url":"\/documentation\/potentcodables\/topleveldecoder","navigatorTitle":[{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"title":"TopLevelDecoder Implementations","kind":"article","url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"},"doc://PotentCodables/s8CopyableP":{"identifier":"doc:\/\/PotentCodables\/s8CopyableP","type":"unresolvable","title":"Swift.Copyable"}}}
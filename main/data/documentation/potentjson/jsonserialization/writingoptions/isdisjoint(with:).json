{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/SetAlgebra-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/isDisjoint(with:)"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"type":"text","text":" "},{"text":"common with the given set.","type":"text"}],"metadata":{"title":"isDisjoint(with:)","modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"extendedModule":"Swift","externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14WritingOptionsV","symbolKind":"method","role":"symbol","roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonserialization\/writingoptions\/isdisjoint(with:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isDisjoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A set of the same type as the current set."}]}]}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the set has no elements in common with "},{"code":"other","type":"codeVoice"},{"type":"text","text":";"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the ","type":"text"},{"type":"codeVoice","code":"employees"},{"text":" set is disjoint with the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"visitors"},{"type":"text","text":" set because no name appears in both sets."}]},{"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""],"syntax":null,"type":"codeListing"}]}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}],"navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/WritingOptions":{"abstract":[],"role":"symbol","title":"JSONSerialization.WritingOptions","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WritingOptions"}],"type":"topic","navigatorTitle":[{"text":"WritingOptions","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonserialization\/writingoptions","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","url":"\/documentation\/potentjson","type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/WritingOptions/SetAlgebra-Implementations":{"abstract":[],"role":"collectionGroup","title":"SetAlgebra Implementations","type":"topic","url":"\/documentation\/potentjson\/jsonserialization\/writingoptions\/setalgebra-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/SetAlgebra-Implementations","kind":"article"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/WritingOptions/isDisjoint(with:)":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/isDisjoint(with:)","abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"text":" ","type":"text"},{"type":"text","text":"common with the given set."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isDisjoint"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","title":"isDisjoint(with:)","url":"\/documentation\/potentjson\/jsonserialization\/writingoptions\/isdisjoint(with:)","kind":"symbol"}}}
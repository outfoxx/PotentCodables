{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/SetAlgebra-Implementations"]]},"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"arrayLiteral","content":[{"inlineContent":[{"type":"text","text":"A list of elements of the new set."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"text":" ","type":"text"},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"text":" ","type":"text"},{"text":"by the type context.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Here, a set of strings is created from an array literal holding only","type":"text"},{"type":"text","text":" "},{"type":"text","text":"strings:"}]},{"type":"codeListing","syntax":null,"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""]}],"kind":"content"}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonserialization\/writingoptions\/init(arrayliteral:)"]}],"metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"init(arrayLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"role":"symbol","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14WritingOptionsV","extendedModule":"Swift","roleHeading":"Initializer","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"symbolKind":"init"},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/WritingOptions":{"abstract":[],"title":"JSONSerialization.WritingOptions","navigatorTitle":[{"text":"WritingOptions","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonserialization\/writingoptions","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WritingOptions"}]},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","url":"\/documentation\/potentjson","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/WritingOptions/init(arrayLiteral:)":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/init(arrayLiteral:)","url":"\/documentation\/potentjson\/jsonserialization\/writingoptions\/init(arrayliteral:)","kind":"symbol","type":"topic","title":"init(arrayLiteral:)","abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"...)","kind":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/WritingOptions/SetAlgebra-Implementations":{"kind":"article","title":"SetAlgebra Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/potentjson\/jsonserialization\/writingoptions\/setalgebra-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/WritingOptions\/SetAlgebra-Implementations","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","role":"symbol","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}]}}}
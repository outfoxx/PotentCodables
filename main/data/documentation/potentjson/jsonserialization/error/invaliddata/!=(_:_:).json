{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations"]]},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentJSON17JSONSerializationO5ErrorO11InvalidDataO","extendedModule":"Swift","symbolKind":"op","roleHeading":"Operator","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error":{"url":"\/documentation\/potentjson\/jsonserialization\/error","abstract":[],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","type":"topic","navigatorTitle":[{"text":"Error","kind":"identifier"}],"title":"JSONSerialization.Error","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}],"navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"JSONSerialization"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/!=(_:_:)":{"kind":"symbol","title":"!=(_:_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)","type":"topic","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData":{"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata","abstract":[],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","type":"topic","navigatorTitle":[{"text":"InvalidData","kind":"identifier"}],"title":"JSONSerialization.Error.InvalidData","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InvalidData"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"title":"PotentJSON","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/Equatable-Implementations":{"abstract":[],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/equatable-implementations","kind":"article","title":"Equatable Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations"}}}
{"metadata":{"symbolKind":"op","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentJSON17JSONSerializationO5ErrorO11InvalidDataO","role":"symbol","title":"!=(_:_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"extendedModule":"Swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Inequality is the inverse of equality. For any values ","type":"text"},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}],"title":"JSONSerialization","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"url":"\/documentation\/potentjson\/jsonserialization","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/Equatable-Implementations":{"kind":"article","url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/equatable-implementations","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations","title":"Equatable Implementations","type":"topic","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"InvalidData","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","abstract":[],"title":"JSONSerialization.Error.InvalidData","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"InvalidData","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/!=(_:_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)","type":"topic","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"role":"collection","url":"\/documentation\/potentjson","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error":{"title":"JSONSerialization.Error","url":"\/documentation\/potentjson\/jsonserialization\/error","navigatorTitle":[{"text":"Error","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"role":"symbol"}}}
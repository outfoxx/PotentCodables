{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations"]]},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"text":" ","type":"text"},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"type":"text","text":")"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"type":"paragraph"}]}],"sections":[],"metadata":{"modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"role":"symbol","symbolKind":"op","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentJSON17JSONSerializationO5ErrorO11InvalidDataO","title":"!=(_:_:)","extendedModule":"Swift","roleHeading":"Operator"},"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/Equatable-Implementations":{"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/equatable-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations","role":"collectionGroup","type":"topic","title":"Equatable Implementations"},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","role":"collection","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/!=(_:_:)":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"!=(_:_:)"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"kind":"symbol","title":"JSONSerialization","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}],"url":"\/documentation\/potentjson\/jsonserialization"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error":{"abstract":[],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Error","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsonserialization\/error","navigatorTitle":[{"text":"Error","kind":"identifier"}],"title":"JSONSerialization.Error"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData":{"kind":"symbol","abstract":[],"title":"JSONSerialization.Error.InvalidData","type":"topic","role":"symbol","url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InvalidData","kind":"identifier"}],"navigatorTitle":[{"text":"InvalidData","kind":"identifier"}]}}}
{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/isdisjoint(with:)"]}],"kind":"symbol","abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"common with the given set."}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations"]]},"metadata":{"title":"isDisjoint(with:)","modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","extendedModule":"Swift","externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"other","content":[{"inlineContent":[{"type":"text","text":"A set of the same type as the current set."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the set has no elements in common with "},{"type":"codeVoice","code":"other"},{"text":";","type":"text"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"In the following example, the "},{"code":"employees","type":"codeVoice"},{"text":" set is disjoint with the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"visitors"},{"text":" set because no name appears in both sets.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/isDisjoint(with:)","interfaceLanguage":"swift"},"sections":[],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/SetAlgebra-Implementations":{"type":"topic","kind":"article","title":"SetAlgebra Implementations","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/setalgebra-implementations","abstract":[]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReadingOptions"}],"navigatorTitle":[{"text":"ReadingOptions","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","title":"JSONSerialization.ReadingOptions","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","role":"symbol","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}]},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","url":"\/documentation\/potentjson","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","role":"collection","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/isDisjoint(with:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/isDisjoint(with:)","kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/isdisjoint(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDisjoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"type":"text","text":" "},{"type":"text","text":"common with the given set."}],"title":"isDisjoint(with:)","role":"symbol"}}}
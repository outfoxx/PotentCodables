{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/isDisjoint(with:)","interfaceLanguage":"swift"},"abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"common with the given set."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A set of the same type as the current set."}],"type":"paragraph"}],"name":"other"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":""},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the set has no elements in common with "},{"type":"codeVoice","code":"other"},{"type":"text","text":";"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the ","type":"text"},{"type":"codeVoice","code":"employees"},{"text":" set is disjoint with the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"visitors"},{"text":" set because no name appears in both sets.","type":"text"}]},{"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""],"syntax":null,"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/isdisjoint(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isDisjoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","symbolKind":"method","title":"isDisjoint(with:)","role":"symbol","roleHeading":"Instance Method"},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/isDisjoint(with:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"common with the given set."}],"role":"symbol","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/isdisjoint(with:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/isDisjoint(with:)","title":"isDisjoint(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDisjoint","kind":"identifier"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"role":"symbol","title":"JSONSerialization.ReadingOptions","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ReadingOptions","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReadingOptions"}]},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"role":"collection","url":"\/documentation\/potentjson","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}],"title":"JSONSerialization","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"url":"\/documentation\/potentjson\/jsonserialization","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/SetAlgebra-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/setalgebra-implementations","type":"topic","role":"collectionGroup"}}}
{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"A list of elements of the new set.","type":"text"}],"type":"paragraph"}],"name":"arrayLiteral"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"type":"text","text":"you use an array literal. Instead, create a new set using an array"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"type":"text","text":" "},{"type":"text","text":"by the type context."}]},{"inlineContent":[{"text":"Here, a set of strings is created from an array literal holding only","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strings:"}],"type":"paragraph"},{"syntax":null,"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"type":"codeListing"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"roleHeading":"Initializer","extendedModule":"Swift","role":"symbol","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"conformance":{"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(arrayLiteral:)","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}]},"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://PotentCodables/documentation/PotentJSON":{"type":"topic","url":"\/documentation\/potentjson","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"type":"topic","url":"\/documentation\/potentjson\/jsonserialization","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","title":"JSONSerialization","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"role":"symbol","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions","navigatorTitle":[{"kind":"identifier","text":"ReadingOptions"}],"title":"JSONSerialization.ReadingOptions","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReadingOptions","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","abstract":[]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/init(arrayLiteral:)":{"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/init(arrayliteral:)","role":"symbol","title":"init(arrayLiteral:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/init(arrayLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"...)"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.Element","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/SetAlgebra-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations","kind":"article"}}}
{"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/init(arrayliteral:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations"]]},"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"name":"arrayLiteral","content":[{"inlineContent":[{"text":"A list of elements of the new set.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you use an array literal. Instead, create a new set using an array"},{"text":" ","type":"text"},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"text":" ","type":"text"},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"text":" ","type":"text"},{"type":"text","text":"by the type context."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"text":" ","type":"text"},{"type":"text","text":"strings:"}]},{"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"type":"codeListing","syntax":null}]}],"metadata":{"title":"init(arrayLiteral:)","symbolKind":"init","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","extendedModule":"Swift","conformance":{"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}],"roleHeading":"Initializer","role":"symbol","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"kind":"symbol","navigatorTitle":[{"text":"ReadingOptions","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions","type":"topic","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","title":"JSONSerialization.ReadingOptions","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReadingOptions","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/SetAlgebra-Implementations":{"kind":"article","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/setalgebra-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/init(arrayLiteral:)":{"type":"topic","role":"symbol","title":"init(arrayLiteral:)","conformance":{"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/init(arrayliteral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"...)"}],"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/init(arrayLiteral:)"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONSerialization","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","title":"JSONSerialization","role":"symbol","url":"\/documentation\/potentjson\/jsonserialization"},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","url":"\/documentation\/potentjson","role":"collection","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}]}}}
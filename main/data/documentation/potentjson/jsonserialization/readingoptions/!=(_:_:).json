{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","title":"!=(_:_:)","extendedModule":"Swift","roleHeading":"Operator","symbolKind":"op","role":"symbol"},"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/!=(_:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"lhs","content":[{"inlineContent":[{"text":"A value to compare.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"text":"for any type that conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/Equatable-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","type":"topic","title":"JSONSerialization.ReadingOptions","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ReadingOptions","kind":"identifier"}],"navigatorTitle":[{"text":"ReadingOptions","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/!=(_:_:)":{"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/!=(_:_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","type":"topic","title":"!=(_:_:)"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONSerialization"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","title":"JSONSerialization","url":"\/documentation\/potentjson\/jsonserialization","abstract":[],"role":"symbol","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/Equatable-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","kind":"article","abstract":[],"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/equatable-implementations","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentJSON":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"title":"PotentJSON","type":"topic"}}}
{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another value to compare."}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"text":"implies that ","type":"text"},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"code":"!=","type":"codeVoice"},{"text":")","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/!=(_:_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/!=(_:_:)"},"metadata":{"title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"extendedModule":"Swift","role":"symbol","roleHeading":"Operator","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/Equatable-Implementations"]]},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/!=(_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/!=(_:_:)","type":"topic","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"title":"!=(_:_:)","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/!=(_:_:)","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/Equatable-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/equatable-implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReadingOptions"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ReadingOptions"}],"kind":"symbol","title":"JSONSerialization.ReadingOptions","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","type":"topic","role":"collection","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"kind":"symbol","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"url":"\/documentation\/potentjson\/jsonserialization","abstract":[],"type":"topic","title":"JSONSerialization","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONSerialization","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}]}}}
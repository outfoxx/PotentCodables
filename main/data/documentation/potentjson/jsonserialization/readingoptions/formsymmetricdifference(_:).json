{"abstract":[{"type":"text","text":"Replaces this set with a new set containing all elements"},{"type":"text","text":" "},{"type":"text","text":"contained in either this set or the given set, but not in both."}],"kind":"symbol","metadata":{"symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF::SYNTHESIZED::s:10PotentJSON17JSONSerializationO14ReadingOptionsV","roleHeading":"Instance Method","title":"formSymmetricDifference(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"extendedModule":"Swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An option set."}],"type":"paragraph"}],"name":"other"}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is implemented as a "},{"code":"^","type":"codeVoice"},{"text":" (bitwise XOR) operation on the two","type":"text"},{"text":" ","type":"text"},{"text":"sets’ raw values.","type":"text"}]}],"kind":"content"}],"sections":[],"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/readingoptions\/formsymmetricdifference(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/OptionSet-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/formSymmetricDifference(_:)"},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/formSymmetricDifference(_:)":{"abstract":[{"type":"text","text":"Replaces this set with a new set containing all elements"},{"type":"text","text":" "},{"type":"text","text":"contained in either this set or the given set, but not in both."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formSymmetricDifference"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/formsymmetricdifference(_:)","type":"topic","title":"formSymmetricDifference(_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/formSymmetricDifference(_:)"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions/OptionSet-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions\/OptionSet-Implementations","abstract":[],"type":"topic","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions\/optionset-implementations","kind":"article","role":"collectionGroup","title":"OptionSet Implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/ReadingOptions":{"role":"symbol","title":"JSONSerialization.ReadingOptions","url":"\/documentation\/potentjson\/jsonserialization\/readingoptions","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/ReadingOptions","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ReadingOptions","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ReadingOptions"}]},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}],"role":"collection","url":"\/documentation\/potentjson","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONSerialization"}],"title":"JSONSerialization","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"JSONSerialization"}],"url":"\/documentation\/potentjson\/jsonserialization","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","kind":"symbol"}}}
{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"]]},"metadata":{"modules":[{"name":"PotentJSON"}],"externalID":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO5throwyA2EmF","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}],"role":"symbol","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","roleHeading":"Case"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"]}],"abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"title":"JSONEncoder.NonConformingFloatEncodingStrategy"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw","type":"topic","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","url":"\/documentation\/potentjson\/jsonencoder","kind":"symbol","type":"topic","title":"JSONEncoder","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into JSON values."}],"navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","title":"PotentJSON","url":"\/documentation\/potentjson","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","role":"collection","type":"topic"}}}
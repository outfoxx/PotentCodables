{"kind":"symbol","variants":[{"paths":["\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"]]},"metadata":{"title":"nonConformingFloatEncodingStrategy","symbolKind":"property","modules":[{"name":"PotentJSON"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"nonConformingFloatEncodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC","kind":"typeIdentifier","text":"JSONEncoder"},{"text":".","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO","kind":"typeIdentifier"}],"externalID":"s:10PotentJSON11JSONEncoderC34nonConformingFloatEncodingStrategyAC03NonefgH0Ovp","roleHeading":"Instance Property","role":"symbol"},"abstract":[{"type":"text","text":"The strategy to use in encoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/nonConformingFloatEncodingStrategy-swift.property","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatEncodingStrategy"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"NonConformingFloatEncodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/nonConformingFloatEncodingStrategy-swift.property":{"kind":"symbol","role":"symbol","title":"nonConformingFloatEncodingStrategy","type":"topic","abstract":[{"text":"The strategy to use in encoding non-conforming numbers. Defaults to ","type":"text"},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/nonConformingFloatEncodingStrategy-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatEncodingStrategy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"NonConformingFloatEncodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO","kind":"typeIdentifier"}],"url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.property"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"title":"JSONEncoder.NonConformingFloatEncodingStrategy","kind":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","role":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","type":"topic","role":"collection","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"kind":"symbol","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","title":"JSONEncoder","url":"\/documentation\/potentjson\/jsonencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON values.","type":"text"}],"kind":"symbol"}}}
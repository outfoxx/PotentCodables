{"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"anchor":"Enumeration-Cases","generated":true,"title":"Enumeration Cases","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw"]}],"metadata":{"modules":[{"name":"PotentJSON"}],"symbolKind":"enum","roleHeading":"Enumeration","title":"JSONEncoder.NonConformingFloatEncodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"externalID":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO","role":"symbol"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into JSON values."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONEncoder"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsonencoder","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","role":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"title":"JSONEncoder"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/convertToString(positiveInfinity:negativeInfinity:nan:)":{"title":"JSONEncoder.NonConformingFloatEncodingStrategy.convertToString(positiveInfinity:negativeInfinity:nan:)","url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/converttostring(positiveinfinity:negativeinfinity:nan:)","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertToString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"negativeInfinity"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"nan"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)","abstract":[{"text":"Encode the values using the given representation strings.","type":"text"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw","abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"role":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"kind":"symbol","type":"topic","title":"PotentJSON","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"role":"symbol","kind":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","title":"JSONEncoder.NonConformingFloatEncodingStrategy","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"}}}
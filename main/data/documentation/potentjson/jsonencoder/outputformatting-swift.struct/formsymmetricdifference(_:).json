{"abstract":[{"type":"text","text":"Replaces this set with a new set containing all elements"},{"text":" ","type":"text"},{"type":"text","text":"contained in either this set or the given set, but not in both."}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"title":"formSymmetricDifference(_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}]},"roleHeading":"Instance Method","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","symbolKind":"method","externalID":"s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF::SYNTHESIZED::s:10PotentJSON11JSONEncoderC16OutputFormattingV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/formSymmetricDifference(_:)"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/formsymmetricdifference(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"formSymmetricDifference"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"text":"An option set.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This method is implemented as a "},{"type":"codeVoice","code":"^"},{"type":"text","text":" (bitwise XOR) operation on the two"},{"text":" ","type":"text"},{"text":"sets’ raw values.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift."}],"kind":"symbol","url":"\/documentation\/potentjson","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct","type":"topic","title":"JSONEncoder.OutputFormatting","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OutputFormatting","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON values."}],"kind":"symbol","url":"\/documentation\/potentjson\/jsonencoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","title":"JSONEncoder"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"type":"topic","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","title":"OptionSet Implementations","role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","kind":"article","abstract":[]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/formSymmetricDifference(_:)":{"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/formsymmetricdifference(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formSymmetricDifference"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"kind":"symbol","title":"formSymmetricDifference(_:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/formSymmetricDifference(_:)","abstract":[{"type":"text","text":"Replaces this set with a new set containing all elements"},{"text":" ","type":"text"},{"type":"text","text":"contained in either this set or the given set, but not in both."}],"role":"symbol","type":"topic"}}}
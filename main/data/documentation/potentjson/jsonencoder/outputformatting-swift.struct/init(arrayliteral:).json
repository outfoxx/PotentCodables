{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"roleHeading":"Initializer","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentJSON11JSONEncoderC16OutputFormattingV","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}],"extendedModule":"Swift","role":"symbol","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"text":".","type":"text"}]},"title":"init(arrayLiteral:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"arrayLiteral","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A list of elements of the new set."}]}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you use an array literal. Instead, create a new set using an array"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"text":" ","type":"text"},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"text":" ","type":"text"},{"type":"text","text":"by the type context."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"type":"text","text":" "},{"text":"strings:","type":"text"}]},{"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"type":"codeListing","syntax":null}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON values.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"role":"symbol","url":"\/documentation\/potentjson\/jsonencoder","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","type":"topic","title":"JSONEncoder"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"OutputFormatting","kind":"identifier"}],"role":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","type":"topic","title":"JSONEncoder.OutputFormatting"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"text":"...)","kind":"text"}],"type":"topic","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)","kind":"symbol","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(arrayLiteral:)"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","kind":"article"},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"role":"collection","url":"\/documentation\/potentjson","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"}}}
{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)"},"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"...)"}],"externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentJSON11JSONEncoderC16OutputFormattingV","symbolKind":"init","title":"init(arrayLiteral:)","extendedModule":"Swift","roleHeading":"Initializer","conformance":{"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"arrayLiteral","content":[{"inlineContent":[{"text":"A list of elements of the new set.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"text":" ","type":"text"},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"text":" ","type":"text"},{"text":"literal as its value by enclosing a comma-separated list of values in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"type":"text","text":" "},{"type":"text","text":"by the type context."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"text":" ","type":"text"},{"type":"text","text":"strings:"}]},{"type":"codeListing","code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"syntax":null}],"kind":"content"}],"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"init(arrayLiteral:)","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct","kind":"symbol","title":"JSONEncoder.OutputFormatting","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","title":"JSONEncoder","url":"\/documentation\/potentjson\/jsonencoder","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","isActive":true,"type":"reference"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into JSON values."}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON":{"title":"PotentJSON","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"type":"topic"}}}
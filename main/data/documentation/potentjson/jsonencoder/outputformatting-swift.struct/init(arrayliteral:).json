{"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"text":"...)","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"roleHeading":"Initializer","title":"init(arrayLiteral:)","conformance":{"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"symbolKind":"init","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentJSON11JSONEncoderC16OutputFormattingV","extendedModule":"Swift"},"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A list of elements of the new set.","type":"text"}]}],"name":"arrayLiteral"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"type":"text","text":" "},{"text":"literal as its value by enclosing a comma-separated list of values in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"type":"text","text":" "},{"text":"by the type context.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"text":" ","type":"text"},{"type":"text","text":"strings:"}],"type":"paragraph"},{"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"syntax":null,"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","role":"collection","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","type":"topic","role":"collectionGroup","abstract":[],"kind":"article","title":"SetAlgebra Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"init(arrayLiteral:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}]},"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct","role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"type":"topic","abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"title":"JSONEncoder.OutputFormatting"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","type":"reference","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into JSON values."}],"url":"\/documentation\/potentjson\/jsonencoder","type":"topic","title":"JSONEncoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONEncoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","kind":"symbol","role":"symbol"}}}
{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)"]}],"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"metadata":{"externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentJSON11JSONEncoderC16OutputFormattingV","roleHeading":"Initializer","role":"symbol","extendedModule":"Swift","symbolKind":"init","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"title":"init(arrayLiteral:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"arrayLiteral","content":[{"type":"paragraph","inlineContent":[{"text":"A list of elements of the new set.","type":"text"}]}]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"type":"text","text":"you use an array literal. Instead, create a new set using an array"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"type":"text","text":" "},{"text":"by the type context.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Here, a set of strings is created from an array literal holding only","type":"text"},{"type":"text","text":" "},{"text":"strings:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""]}],"kind":"content"}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","type":"topic","title":"JSONEncoder.OutputFormatting","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct","role":"symbol","abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"role":"symbol","url":"\/documentation\/potentjson\/jsonencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON values."}],"type":"topic","title":"JSONEncoder"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"text":"...)","kind":"text"}],"role":"symbol","abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"type":"topic","kind":"symbol","title":"init(arrayLiteral:)","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://PotentCodables/documentation/PotentJSON":{"kind":"symbol","url":"\/documentation\/potentjson","role":"collection","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","title":"PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","abstract":[],"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","type":"topic","role":"collectionGroup","kind":"article","title":"SetAlgebra Implementations"}}}
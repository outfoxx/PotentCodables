{"metadata":{"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"role":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy","roleHeading":"Enumeration","symbolKind":"enum","modules":[{"name":"PotentJSON"}],"externalID":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO"},"variants":[{"paths":["\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"]]},"sections":[],"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw"],"generated":true,"anchor":"Enumeration-Cases"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"platforms":["macOS"]}]}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"type":"topic","url":"\/documentation\/potentjson\/jsondecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"title":"JSONDecoder","kind":"symbol","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"role":"collection","url":"\/documentation\/potentjson","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","type":"topic","title":"PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/convertFromString(positiveInfinity:negativeInfinity:nan:)":{"role":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy.convertFromString(positiveInfinity:negativeInfinity:nan:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"convertFromString"},{"kind":"text","text":"("},{"text":"positiveInfinity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nan"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)","kind":"symbol","abstract":[{"text":"Decode the values from the given representation strings.","type":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/throw":{"kind":"symbol","type":"topic","abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","title":"JSONDecoder.NonConformingFloatDecodingStrategy.throw","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`throw`"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"}}}
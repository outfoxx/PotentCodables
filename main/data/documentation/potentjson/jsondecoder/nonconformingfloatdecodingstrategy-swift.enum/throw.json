{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]]},"metadata":{"role":"symbol","modules":[{"name":"PotentJSON"}],"roleHeading":"Case","title":"JSONDecoder.NonConformingFloatDecodingStrategy.throw","symbolKind":"case","externalID":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO5throwyA2EmF","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}]},"abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`throw`"}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentJSON":{"title":"PotentJSON","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","url":"\/documentation\/potentjson","kind":"symbol","abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"kind":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"role":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder","title":"JSONDecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"role":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","kind":"symbol","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/throw":{"role":"symbol","kind":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy.throw","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","type":"topic","abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}]}}}
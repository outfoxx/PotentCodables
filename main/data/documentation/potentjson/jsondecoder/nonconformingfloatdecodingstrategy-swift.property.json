{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"}]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"]]},"abstract":[{"text":"The strategy to use in decoding non-conforming numbers. Defaults to ","type":"text"},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"externalID":"s:10PotentJSON11JSONDecoderC34nonConformingFloatDecodingStrategyAC03NonefgH0Ovp","symbolKind":"property","roleHeading":"Instance Property","title":"nonConformingFloatDecodingStrategy","role":"symbol","modules":[{"name":"PotentJSON"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO"}]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"abstract":[{"text":"The strategy to use in decoding non-conforming numbers. Defaults to ","type":"text"},{"code":".throw","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","type":"topic","title":"nonConformingFloatDecodingStrategy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NonConformingFloatDecodingStrategy","preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO"}],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON":{"url":"\/documentation\/potentjson","role":"collection","title":"PotentJSON","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON","abstract":[{"type":"text","text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift."}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true,"type":"reference"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"type":"topic","title":"JSONDecoder","url":"\/documentation\/potentjson\/jsondecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"role":"symbol"}}}
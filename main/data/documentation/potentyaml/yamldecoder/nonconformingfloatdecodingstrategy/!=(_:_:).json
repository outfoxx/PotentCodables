{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/!=(_:_:)"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/Equatable-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"lhs","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A value to compare."}]}]},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"type":"codeVoice","code":"a != b"},{"type":"text","text":" "},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"text":")","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/!=(_:_:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"!=(_:_:)","roleHeading":"Operator","extendedModule":"Swift","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentYAML11YAMLDecoderC34NonConformingFloatDecodingStrategyO","symbolKind":"op","modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol"},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/equatable-implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/Equatable-Implementations","type":"topic"},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","url":"\/documentation\/potentyaml","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"title":"PotentYAML","type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"kind":"symbol","role":"symbol","url":"\/documentation\/potentyaml\/yamldecoder","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"text":" facilitates the decoding of YAML into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"title":"YAMLDecoder","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy","title":"YAMLDecoder.NonConformingFloatDecodingStrategy","abstract":[{"text":"The strategy to use for YAML-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy/!=(_:_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/!=(_:_:)","url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"type":"topic","role":"symbol","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"}}}
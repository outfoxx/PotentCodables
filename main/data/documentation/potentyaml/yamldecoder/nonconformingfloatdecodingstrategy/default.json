{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/default"]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Case","title":"YAMLDecoder.NonConformingFloatDecodingStrategy.default","role":"symbol","modules":[{"name":"PotentYAML"}],"symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"}],"externalID":"s:10PotentYAML11YAMLDecoderC34NonConformingFloatDecodingStrategyO7defaultyA2EmF"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/default","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"}],"languages":["swift"],"platforms":["macOS"]}]}],"abstract":[{"type":"text","text":"Decode values following the YAML 1.2 sepcification."}],"sections":[],"references":{"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","url":"\/documentation\/potentyaml","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"title":"YAMLDecoder","type":"topic","abstract":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","type":"reference"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"url":"\/documentation\/potentyaml\/yamldecoder","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy":{"kind":"symbol","url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy","title":"YAMLDecoder.NonConformingFloatDecodingStrategy","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use for YAML-conforming floating-point values (IEEE 754 infinity and NaN)."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy/default":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/default","title":"YAMLDecoder.NonConformingFloatDecodingStrategy.default","type":"topic","abstract":[{"type":"text","text":"Decode values following the YAML 1.2 sepcification."}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"}],"url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/default"}}}
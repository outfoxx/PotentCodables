{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformer"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"using"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transformer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Transformer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Target"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Transformer"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecodingTransformer","preciseIdentifier":"s:14PotentCodables24ValueDecodingTransformerP","text":"ValueDecodingTransformer"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/potentyaml\/yamldecoder\/decode(from:using:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/decode(from:using:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","title":"decode(from:using:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformer"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Transformer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Target"}],"symbolKind":"method","externalID":"s:7Combine15TopLevelDecoderP14PotentCodablesE6decode4from5using6TargetQyd__5InputQz_qd__tKAD24ValueDecodingTransformerRd__lF::SYNTHESIZED::s:10PotentYAML11YAMLDecoderC","extendedModule":"Combine","modules":[{"name":"PotentYAML","relatedModules":["Combine"]}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/TopLevelDecoder-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"role":"symbol","title":"YAMLDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLDecoder"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"},{"type":"text","text":" facilitates the decoding of YAML into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"YAMLDecoder"}],"url":"\/documentation\/potentyaml\/yamldecoder"},"doc://PotentCodables/documentation/PotentYAML":{"role":"collection","title":"PotentYAML","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","type":"topic","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/TopLevelDecoder-Implementations":{"role":"collectionGroup","title":"TopLevelDecoder Implementations","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/TopLevelDecoder-Implementations","kind":"article","type":"topic","url":"\/documentation\/potentyaml\/yamldecoder\/topleveldecoder-implementations"},"doc://PotentCodables/documentation/PotentCodables/ValueDecodingTransformer":{"role":"symbol","title":"ValueDecodingTransformer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueDecodingTransformer"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecodingTransformer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ValueDecodingTransformer"}],"url":"\/documentation\/potentcodables\/valuedecodingtransformer"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/decode(from:using:)":{"role":"symbol","title":"decode(from:using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformer"},{"kind":"text","text":">("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Transformer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformer"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Target"}],"abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/decode(from:using:)","kind":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamldecoder\/decode(from:using:)"}}}
{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/isDisjoint(with:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentYAML17YAMLSerializationO14WritingOptionsV","title":"isDisjoint(with:)","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Swift","role":"symbol","modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}]},"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"text":" ","type":"text"},{"text":"common with the given set.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/SetAlgebra-Implementations"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A set of the same type as the current set.","type":"text"}]}],"name":"other"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the set has no elements in common with "},{"code":"other","type":"codeVoice"},{"type":"text","text":";"},{"type":"text","text":" "},{"type":"text","text":"otherwise, "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the ","type":"text"},{"type":"codeVoice","code":"employees"},{"text":" set is disjoint with the","type":"text"},{"type":"text","text":" "},{"code":"visitors","type":"codeVoice"},{"text":" set because no name appears in both sets.","type":"text"}]},{"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""],"type":"codeListing","syntax":null}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlserialization\/writingoptions\/isdisjoint(with:)"]}],"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions/isDisjoint(with:)":{"abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"text":" ","type":"text"},{"text":"common with the given set.","type":"text"}],"title":"isDisjoint(with:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"kind":"symbol","role":"symbol","url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions\/isdisjoint(with:)","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/isDisjoint(with:)"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"WritingOptions","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"WritingOptions"}],"title":"YAMLSerialization.WritingOptions","url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization","type":"topic","title":"YAMLSerialization","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLSerialization"}],"navigatorTitle":[{"text":"YAMLSerialization","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yamlserialization","abstract":[{"type":"text","text":"Convenience API for serializing and deserialization YAML items."}]},"doc://PotentCodables/documentation/PotentYAML":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"url":"\/documentation\/potentyaml","kind":"symbol","type":"topic","role":"collection","title":"PotentYAML"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions/SetAlgebra-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/SetAlgebra-Implementations","kind":"article","url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","abstract":[],"type":"topic","role":"collectionGroup"}}}
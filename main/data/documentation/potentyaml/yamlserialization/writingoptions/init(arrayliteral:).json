{"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"...)"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"arrayLiteral","content":[{"type":"paragraph","inlineContent":[{"text":"A list of elements of the new set.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you use an array literal. Instead, create a new set using an array"},{"text":" ","type":"text"},{"text":"literal as its value by enclosing a comma-separated list of values in","type":"text"},{"text":" ","type":"text"},{"text":"square brackets. You can use an array literal anywhere a set is expected","type":"text"},{"type":"text","text":" "},{"type":"text","text":"by the type context."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"text":" ","type":"text"},{"text":"strings:","type":"text"}]},{"syntax":null,"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/potentyaml\/yamlserialization\/writingoptions\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/SetAlgebra-Implementations"]]},"metadata":{"roleHeading":"Initializer","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentYAML17YAMLSerializationO14WritingOptionsV","symbolKind":"init","modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}]},"role":"symbol","title":"init(arrayLiteral:)","extendedModule":"Swift","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"...)"}]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization":{"title":"YAMLSerialization","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLSerialization"}],"navigatorTitle":[{"text":"YAMLSerialization","kind":"identifier"}],"abstract":[{"text":"Convenience API for serializing and deserialization YAML items.","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization","url":"\/documentation\/potentyaml\/yamlserialization","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions/SetAlgebra-Implementations":{"role":"collectionGroup","title":"SetAlgebra Implementations","type":"topic","kind":"article","url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions\/setalgebra-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/SetAlgebra-Implementations","abstract":[]},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions/init(arrayLiteral:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/init(arrayLiteral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":"...)"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions\/init(arrayliteral:)","abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"title":"init(arrayLiteral:)"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions":{"abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WritingOptions","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"WritingOptions","kind":"identifier"}],"title":"YAMLSerialization.WritingOptions","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions","url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions"},"doc://PotentCodables/documentation/PotentYAML":{"type":"topic","url":"\/documentation\/potentyaml","title":"PotentYAML","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","role":"collection","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"kind":"symbol"}}}
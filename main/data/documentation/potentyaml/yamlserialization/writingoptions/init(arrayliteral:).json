{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"kind":"text","text":"...)"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A list of elements of the new set.","type":"text"}]}],"name":"arrayLiteral"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Do not call this initializer directly. It is used by the compiler when","type":"text"},{"type":"text","text":" "},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"text":"square brackets. You can use an array literal anywhere a set is expected","type":"text"},{"text":" ","type":"text"},{"text":"by the type context.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"type":"text","text":" "},{"text":"strings:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""]}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/SetAlgebra-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/potentyaml\/yamlserialization\/writingoptions\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentYAML17YAMLSerializationO14WritingOptionsV","extendedModule":"Swift","modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":"...)"}],"title":"init(arrayLiteral:)","symbolKind":"init","roleHeading":"Initializer"},"sections":[],"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization":{"abstract":[{"type":"text","text":"Convenience API for serializing and deserialization YAML items."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLSerialization"}],"url":"\/documentation\/potentyaml\/yamlserialization","navigatorTitle":[{"text":"YAMLSerialization","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization","title":"YAMLSerialization","type":"topic","kind":"symbol","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/SetAlgebra-Implementations","url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions\/setalgebra-implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions":{"url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WritingOptions"}],"navigatorTitle":[{"kind":"identifier","text":"WritingOptions"}],"title":"YAMLSerialization.WritingOptions","abstract":[],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions"},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","url":"\/documentation\/potentyaml","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"title":"PotentYAML","type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentYAML/YAMLSerialization/WritingOptions/init(arrayLiteral:)":{"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":"...)"}],"url":"\/documentation\/potentyaml\/yamlserialization\/writingoptions\/init(arrayliteral:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLSerialization\/WritingOptions\/init(arrayLiteral:)","title":"init(arrayLiteral:)","type":"topic","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}]},"role":"symbol"}}}
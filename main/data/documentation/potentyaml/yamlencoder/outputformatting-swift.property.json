{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.property"]}],"kind":"symbol","abstract":[{"text":"The output format to produce. Defaults to ","type":"text"},{"type":"codeVoice","code":"[]"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/outputFormatting-swift.property"},"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"outputFormatting","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV"}],"externalID":"s:10PotentYAML11YAMLEncoderC16outputFormattingAC06OutputE0Vvp","title":"outputFormatting","modules":[{"name":"PotentYAML"}],"symbolKind":"property","roleHeading":"Instance Property"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"outputFormatting","kind":"identifier"},{"kind":"text","text":": "},{"text":"OutputFormatting","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"role":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"OutputFormatting","kind":"identifier"}],"title":"YAMLEncoder.OutputFormatting","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"type":"topic","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YAMLEncoder","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","title":"YAMLEncoder","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/outputFormatting-swift.property":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"outputFormatting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV"}],"abstract":[{"type":"text","text":"The output format to produce. Defaults to "},{"code":"[]","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.property","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/outputFormatting-swift.property","kind":"symbol","title":"outputFormatting","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","title":"PotentYAML","role":"collection","url":"\/documentation\/potentyaml"}}}
{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"outputFormatting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV","text":"OutputFormatting"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/outputFormatting-swift.property","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The output format to produce. Defaults to "},{"type":"codeVoice","code":"[]"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"outputFormatting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV"}],"title":"outputFormatting","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:10PotentYAML11YAMLEncoderC16outputFormattingAC06OutputE0Vvp","modules":[{"name":"PotentYAML"}]},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"]]},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"role":"symbol","title":"YAMLEncoder.OutputFormatting","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}],"abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct"},"doc://PotentCodables/documentation/PotentYAML":{"role":"collection","title":"PotentYAML","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","type":"topic","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/outputFormatting-swift.property":{"role":"symbol","title":"outputFormatting","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"outputFormatting"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV"}],"abstract":[{"type":"text","text":"The output format to produce. Defaults to "},{"type":"codeVoice","code":"[]"},{"type":"text","text":"."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/outputFormatting-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.property"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"role":"symbol","title":"YAMLEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAMLEncoder"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into YAML values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder"}}}
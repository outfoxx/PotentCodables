{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"outputFormatting","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV","kind":"typeIdentifier","text":"OutputFormatting"}]}]}],"abstract":[{"type":"text","text":"The output format to produce. Defaults to "},{"type":"codeVoice","code":"[]"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/outputFormatting-swift.property","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"outputFormatting","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV","text":"OutputFormatting"}],"title":"outputFormatting","externalID":"s:10PotentYAML11YAMLEncoderC16outputFormattingAC06OutputE0Vvp","roleHeading":"Instance Property","modules":[{"name":"PotentYAML"}]},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"url":"\/documentation\/potentyaml\/yamlencoder","role":"symbol","type":"topic","title":"YAMLEncoder","kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into YAML values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLEncoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"title":"YAMLEncoder.OutputFormatting","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/outputFormatting-swift.property":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/outputFormatting-swift.property","role":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"outputFormatting"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentYAML11YAMLEncoderC16OutputFormattingV","text":"OutputFormatting","kind":"typeIdentifier"}],"type":"topic","title":"outputFormatting","abstract":[{"text":"The output format to produce. Defaults to ","type":"text"},{"type":"codeVoice","code":"[]"},{"type":"text","text":"."}]},"doc://PotentCodables/documentation/PotentYAML":{"type":"topic","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","role":"collection","url":"\/documentation\/potentyaml"}}}
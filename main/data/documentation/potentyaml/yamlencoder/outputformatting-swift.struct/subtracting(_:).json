{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/subtracting(_:)"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"abstract":[{"type":"text","text":"Returns a new set containing the elements of this set that do not occur"},{"text":" ","type":"text"},{"type":"text","text":"in the given set."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"subtracting","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"other","content":[{"type":"paragraph","inlineContent":[{"text":"A set of the same type as the current set.","type":"text"}]}]}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"A new set.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, the "},{"code":"nonNeighbors","type":"codeVoice"},{"type":"text","text":" set is made up of the"},{"type":"text","text":" "},{"text":"elements of the ","type":"text"},{"type":"codeVoice","code":"employees"},{"type":"text","text":" set that are not elements of "},{"type":"codeVoice","code":"neighbors"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\", \"Greta\"]","let nonNeighbors = employees.subtracting(neighbors)","print(nonNeighbors)","\/\/ Prints \"[\"Diana\", \"Chris\", \"Alicia\"]\""]}]}],"metadata":{"modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}],"role":"symbol","externalID":"s:s10SetAlgebraPsE11subtractingyxxF::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","roleHeading":"Instance Method","extendedModule":"Swift","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtracting"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"subtracting(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/subtracting(_:)"]}],"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"type":"topic","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YAMLEncoder","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","title":"YAMLEncoder","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"role":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"OutputFormatting","kind":"identifier"}],"title":"YAMLEncoder.OutputFormatting","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","title":"PotentYAML","role":"collection","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/subtracting(_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/subtracting(_:)","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/subtracting(_:)","role":"symbol","abstract":[{"text":"Returns a new set containing the elements of this set that do not occur","type":"text"},{"type":"text","text":" "},{"text":"in the given set.","type":"text"}],"title":"subtracting(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"subtracting"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"abstract":[],"type":"topic","kind":"article","title":"SetAlgebra Implementations","role":"collectionGroup","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"}}}
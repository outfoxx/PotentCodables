{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"subtracting","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A set of the same type as the current set."}]}],"name":"other"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new set."}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"In the following example, the "},{"code":"nonNeighbors","type":"codeVoice"},{"type":"text","text":" set is made up of the"},{"text":" ","type":"text"},{"type":"text","text":"elements of the "},{"type":"codeVoice","code":"employees"},{"text":" set that are not elements of ","type":"text"},{"type":"codeVoice","code":"neighbors"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":null,"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\", \"Greta\"]","let nonNeighbors = employees.subtracting(neighbors)","print(nonNeighbors)","\/\/ Prints \"[\"Diana\", \"Chris\", \"Alicia\"]\""],"type":"codeListing"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"subtracting(_:)","roleHeading":"Instance Method","externalID":"s:s10SetAlgebraPsE11subtractingyxxF::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","role":"symbol","extendedModule":"Swift","symbolKind":"method","modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtracting"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"abstract":[{"type":"text","text":"Returns a new set containing the elements of this set that do not occur"},{"type":"text","text":" "},{"type":"text","text":"in the given set."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/subtracting(_:)"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/subtracting(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","url":"\/documentation\/potentyaml","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/subtracting(_:)":{"title":"subtracting(_:)","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/subtracting(_:)","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/subtracting(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subtracting"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Returns a new set containing the elements of this set that do not occur","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the given set."}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"kind":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"type":"topic","title":"YAMLEncoder.OutputFormatting","abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","role":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"topic","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder","title":"YAMLEncoder"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","kind":"article"}}}
{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)"]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":"...)","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A list of elements of the new set."}]}],"name":"arrayLiteral"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"text":" ","type":"text"},{"type":"text","text":"you use an array literal. Instead, create a new set using an array"},{"text":" ","type":"text"},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"text":"square brackets. You can use an array literal anywhere a set is expected","type":"text"},{"text":" ","type":"text"},{"text":"by the type context.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Here, a set of strings is created from an array literal holding only","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"strings:"}],"type":"paragraph"},{"type":"codeListing","code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"syntax":null}]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}],"externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","title":"init(arrayLiteral:)","role":"symbol","roleHeading":"Initializer","extendedModule":"Swift","symbolKind":"init","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.Element","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","title":"init(arrayLiteral:)","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)","abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"title":"YAMLEncoder.OutputFormatting","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","role":"collectionGroup","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","kind":"article","type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"url":"\/documentation\/potentyaml\/yamlencoder","role":"symbol","type":"topic","title":"YAMLEncoder","kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into YAML values."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLEncoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML":{"type":"topic","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","kind":"symbol","role":"collection","url":"\/documentation\/potentyaml"}}}
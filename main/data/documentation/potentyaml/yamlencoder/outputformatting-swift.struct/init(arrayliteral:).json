{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"text":"...)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"arrayLiteral","content":[{"inlineContent":[{"type":"text","text":"A list of elements of the new set."}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"type":"text","text":" "},{"type":"text","text":"by the type context."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here, a set of strings is created from an array literal holding only"},{"type":"text","text":" "},{"type":"text","text":"strings:"}],"type":"paragraph"},{"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""],"type":"codeListing","syntax":null}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)"},"abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}],"metadata":{"modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","extendedModule":"Swift","roleHeading":"Initializer","symbolKind":"init","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"title":"init(arrayLiteral:)","role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"variants":[{"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}]},"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"text":"...)","kind":"text"}],"type":"topic","title":"init(arrayLiteral:)","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","abstract":[{"type":"text","text":"Creates a set containing the elements of the given array literal."}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into YAML values."}],"kind":"symbol","url":"\/documentation\/potentyaml\/yamlencoder","navigatorTitle":[{"kind":"identifier","text":"YAMLEncoder"}],"title":"YAMLEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"YAMLEncoder","kind":"identifier"}],"role":"symbol"},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","title":"PotentYAML","url":"\/documentation\/potentyaml","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"type":"topic","role":"collection"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","kind":"article","type":"topic","abstract":[],"title":"SetAlgebra Implementations","role":"collectionGroup"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","type":"topic","abstract":[{"text":"The formatting of the output YAML data.","type":"text"}],"kind":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"title":"YAMLEncoder.OutputFormatting","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}],"role":"symbol"}}}
{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)"]}],"sections":[],"kind":"symbol","metadata":{"extendedModule":"Swift","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}],"externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","role":"symbol","roleHeading":"Initializer","title":"init(arrayLiteral:)","symbolKind":"init","conformance":{"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:s10SetAlgebraP7ElementQa"},{"text":"...)","kind":"text"}]}]},{"parameters":[{"name":"arrayLiteral","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A list of elements of the new set."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"text":"you use an array literal. Instead, create a new set using an array","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a set is expected"},{"text":" ","type":"text"},{"type":"text","text":"by the type context."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Here, a set of strings is created from an array literal holding only","type":"text"},{"text":" ","type":"text"},{"text":"strings:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]","if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {","    print(\"Whatever it is, it's bound to be delicious!\")","}","\/\/ Prints \"Whatever it is, it's bound to be delicious!\""]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","interfaceLanguage":"swift"},"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"topic","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder","title":"YAMLEncoder"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","url":"\/documentation\/potentyaml","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"kind":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"type":"topic","title":"YAMLEncoder.OutputFormatting","abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","role":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/init(arrayLiteral:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(arrayLiteral:)","role":"symbol","title":"init(arrayLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element"},{"kind":"text","text":"...)"}],"kind":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(arrayliteral:)","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"ArrayLiteralElement"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Creates a set containing the elements of the given array literal.","type":"text"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","kind":"article"}}}
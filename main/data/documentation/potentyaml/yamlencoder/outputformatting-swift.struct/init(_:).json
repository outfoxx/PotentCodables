{"abstract":[{"text":"Creates a new set from a finite sequence of items.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"sequence"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","kind":"typeIdentifier","text":"Sequence"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s10SetAlgebraP7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The elements to use as members of the new set."}],"type":"paragraph"}],"name":"sequence"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Use this initializer to create a new set from an existing sequence, like"},{"type":"text","text":" "},{"text":"an array or a range:","type":"text"}],"type":"paragraph"},{"code":["let validIndices = Set(0..<7).subtracting([2, 4, 5])","print(validIndices)","\/\/ Prints \"[6, 0, 1, 3]\""],"type":"codeListing","syntax":null}]}],"metadata":{"symbolKind":"init","externalID":"s:s10SetAlgebraPsEyxqd__ncSTRd__7ElementQyd__ACRtzlufc::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","roleHeading":"Initializer","title":"init(_:)","extendedModule":"Swift","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(_:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(_:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"abstract":[],"type":"topic","kind":"article","title":"SetAlgebra Implementations","role":"collectionGroup","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/init(_:)":{"abstract":[{"text":"Creates a new set from a finite sequence of items.","type":"text"}],"title":"init(_:)","role":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/init(_:)"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"role":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"OutputFormatting","kind":"identifier"}],"title":"YAMLEncoder.OutputFormatting","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","title":"PotentYAML","role":"collection","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"type":"topic","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YAMLEncoder","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","title":"YAMLEncoder","role":"symbol"}}}
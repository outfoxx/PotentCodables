{"abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"text":" ","type":"text"},{"text":"common with the given set.","type":"text"}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/isDisjoint(with:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A set of the same type as the current set.","type":"text"}],"type":"paragraph"}],"name":"other"}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the set has no elements in common with "},{"type":"codeVoice","code":"other"},{"type":"text","text":";"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, the "},{"code":"employees","type":"codeVoice"},{"type":"text","text":" set is disjoint with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"visitors"},{"text":" set because no name appears in both sets.","type":"text"}]},{"syntax":null,"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/isdisjoint(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Swift","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","roleHeading":"Instance Method","modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"title":"isDisjoint(with:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/isDisjoint(with:)":{"kind":"symbol","role":"symbol","abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"type":"text","text":" "},{"text":"common with the given set.","type":"text"}],"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/isdisjoint(with:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isDisjoint"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isDisjoint(with:)","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/isDisjoint(with:)"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"topic","role":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"YAMLEncoder"}],"url":"\/documentation\/potentyaml\/yamlencoder","title":"YAMLEncoder"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"kind":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"type":"topic","title":"YAMLEncoder.OutputFormatting","abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","role":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","kind":"article"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"title":"PotentYAML","url":"\/documentation\/potentyaml","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"}}}
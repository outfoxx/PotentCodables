{"metadata":{"title":"isDisjoint(with:)","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"modules":[{"name":"PotentYAML","relatedModules":["Swift"]}],"symbolKind":"method","externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","extendedModule":"Swift"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/isDisjoint(with:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"sections":[],"abstract":[{"text":"Returns a Boolean value that indicates whether the set has no members in","type":"text"},{"type":"text","text":" "},{"text":"common with the given set.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/isdisjoint(with:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"kind":"text","text":"("},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A set of the same type as the current set."}],"type":"paragraph"}],"name":"other"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the set has no elements in common with ","type":"text"},{"code":"other","type":"codeVoice"},{"type":"text","text":";"},{"type":"text","text":" "},{"text":"otherwise, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"In the following example, the "},{"type":"codeVoice","code":"employees"},{"type":"text","text":" set is disjoint with the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"visitors"},{"type":"text","text":" set because no name appears in both sets."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""]}],"kind":"content"}],"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"type":"topic","navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YAMLEncoder","kind":"identifier"}],"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into YAML values.","type":"text"}],"url":"\/documentation\/potentyaml\/yamlencoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","kind":"symbol","title":"YAMLEncoder","role":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"abstract":[{"type":"text","text":"The formatting of the output YAML data."}],"role":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"OutputFormatting","kind":"identifier"}],"title":"YAMLEncoder.OutputFormatting","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/isDisjoint(with:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/isDisjoint(with:)","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/isdisjoint(with:)","role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"type":"text","text":" "},{"text":"common with the given set.","type":"text"}],"title":"isDisjoint(with:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"abstract":[],"type":"topic","kind":"article","title":"SetAlgebra Implementations","role":"collectionGroup","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","title":"PotentYAML","role":"collection","url":"\/documentation\/potentyaml"}}}
{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"other"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A set of the same type as the current set."}],"type":"paragraph"}],"name":"other"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the set has no elements in common with "},{"type":"codeVoice","code":"other"},{"text":";","type":"text"},{"text":" ","type":"text"},{"text":"otherwise, ","type":"text"},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"In the following example, the ","type":"text"},{"type":"codeVoice","code":"employees"},{"type":"text","text":" set is disjoint with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"visitors"},{"text":" set because no name appears in both sets.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]","let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]","print(employees.isDisjoint(with: visitors))","\/\/ Prints \"true\""]}],"kind":"content"}],"kind":"symbol","metadata":{"extendedModule":"Swift","title":"isDisjoint(with:)","externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:10PotentYAML11YAMLEncoderC16OutputFormattingV","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}]},"abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"type":"text","text":" "},{"type":"text","text":"common with the given set."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/isdisjoint(with:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/isDisjoint(with:)"},"references":{"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/isDisjoint(with:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/isDisjoint(with:)","abstract":[{"type":"text","text":"Returns a Boolean value that indicates whether the set has no members in"},{"type":"text","text":" "},{"type":"text","text":"common with the given set."}],"role":"symbol","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/isdisjoint(with:)","title":"isDisjoint(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML":{"title":"PotentYAML","url":"\/documentation\/potentyaml","abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","type":"topic","kind":"symbol"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct":{"kind":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct","type":"topic","abstract":[{"text":"The formatting of the output YAML data.","type":"text"}],"title":"YAMLEncoder.OutputFormatting","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder":{"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","type":"reference","isActive":true},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"text":" values into YAML values.","type":"text"}],"navigatorTitle":[{"text":"YAMLEncoder","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/potentyaml\/yamlencoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"YAMLEncoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder","title":"YAMLEncoder"},"doc://PotentCodables/documentation/PotentYAML/YAMLEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","abstract":[],"role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","url":"\/documentation\/potentyaml\/yamlencoder\/outputformatting-swift.struct\/setalgebra-implementations"}}}
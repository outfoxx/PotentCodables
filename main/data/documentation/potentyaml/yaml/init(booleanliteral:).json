{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/ExpressibleByBooleanLiteral-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"booleanLiteral","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"text":"BooleanLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s18BooleanLiteralTypea"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value of the new instance."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not call this initializer directly. Instead, initialize a variable or"},{"type":"text","text":" "},{"type":"text","text":"constant using one of the Boolean literals "},{"type":"codeVoice","code":"true"},{"type":"text","text":" and "},{"type":"codeVoice","code":"false"},{"type":"text","text":". For"},{"text":" ","type":"text"},{"text":"example:","type":"text"}]},{"syntax":null,"code":["let twasBrillig = true"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, the assignment to the "},{"code":"twasBrillig","type":"codeVoice"},{"text":" constant calls this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Boolean literal initializer behind the scenes."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yaml\/init(booleanliteral:)"]}],"abstract":[{"text":"Creates an instance initialized to the given Boolean value.","type":"text"}],"metadata":{"title":"init(booleanLiteral:)","symbolKind":"init","roleHeading":"Initializer","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"booleanLiteral","kind":"externalParam"},{"kind":"text","text":": "},{"text":"BooleanLiteralType","preciseIdentifier":"s:s18BooleanLiteralTypea","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:10PotentYAML0B0O14booleanLiteralACSb_tcfc","modules":[{"name":"PotentYAML"}],"extendedModule":"PotentYAML"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/init(booleanLiteral:)","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentYAML/YAML":{"kind":"symbol","url":"\/documentation\/potentyaml\/yaml","abstract":[{"type":"text","text":"General YAML value."}],"navigatorTitle":[{"text":"YAML","kind":"identifier"}],"title":"YAML","type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAML"}]},"doc://PotentCodables/documentation/PotentYAML/YAML/init(booleanLiteral:)":{"title":"init(booleanLiteral:)","kind":"symbol","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/init(booleanLiteral:)","role":"symbol","url":"\/documentation\/potentyaml\/yaml\/init(booleanliteral:)","abstract":[{"text":"Creates an instance initialized to the given Boolean value.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"booleanLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BooleanLiteralType","preciseIdentifier":"s:s18BooleanLiteralTypea"},{"kind":"text","text":")"}]},"doc://PotentCodables/documentation/PotentYAML/YAML/ExpressibleByBooleanLiteral-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","abstract":[],"url":"\/documentation\/potentyaml\/yaml\/expressiblebybooleanliteral-implementations","title":"ExpressibleByBooleanLiteral Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/ExpressibleByBooleanLiteral-Implementations"},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","url":"\/documentation\/potentyaml","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"title":"PotentYAML","type":"topic","role":"collection","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"}}}
{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yaml\/collectionstyle\/!=(_:_:)"]}],"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"b"},{"text":", ","type":"text"},{"type":"codeVoice","code":"a != b"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"code":"a == b","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"type":"text","text":" "},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"title":"!=(_:_:)","extendedModule":"Swift","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentYAML0B0O15CollectionStyleO","symbolKind":"op","modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"roleHeading":"Operator","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/Equatable-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/!=(_:_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentYAML/YAML/CollectionStyle/Equatable-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/potentyaml\/yaml\/collectionstyle\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/Equatable-Implementations"},"doc://PotentCodables/documentation/PotentYAML/YAML/CollectionStyle":{"title":"YAML.CollectionStyle","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CollectionStyle","kind":"identifier"}],"navigatorTitle":[{"text":"CollectionStyle","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle","kind":"symbol","abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/potentyaml\/yaml\/collectionstyle"},"doc://PotentCodables/documentation/PotentYAML/YAML/CollectionStyle/!=(_:_:)":{"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"type":"topic","url":"\/documentation\/potentyaml\/yaml\/collectionstyle\/!=(_:_:)","title":"!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/!=(_:_:)"},"doc://PotentCodables/documentation/PotentYAML/YAML":{"title":"YAML","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"YAML"}],"navigatorTitle":[{"text":"YAML","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML","kind":"symbol","abstract":[{"type":"text","text":"General YAML value."}],"type":"topic","role":"symbol","url":"\/documentation\/potentyaml\/yaml"},"doc://PotentCodables/documentation/PotentYAML":{"abstract":[{"type":"text","text":"YAML 1.2 support for both YAML & JSON in a single framework."}],"type":"topic","url":"\/documentation\/potentyaml","title":"PotentYAML","role":"collection","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML"}}}
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]

jobs:
  
  check-build-test:

    runs-on: macos-13

    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer

    - name: SwiftLint
      run: |
        mkdir .build
        swiftlint lint --reporter json > .build/swiftlint.json

    - name: Build/Test
      run: set -o pipefail && swift test --enable-code-coverage --sanitize undefined | xcbeautify

    - name: Convert Coverage
      run: xcrun llvm-cov show -instr-profile=.build/debug/codecov/default.profdata .build/debug/PotentCodablesPackageTests.xctest/Contents/MacOS/PotentCodablesPackageTests > .build/coverage.report

  build-test:

    runs-on: macos-13

    needs: [check-build-test]

    strategy:
      matrix:
        platform: [macos, ios, tvos, watchos]

    steps:

    - uses: actions/checkout@v4

    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer

    - name: Build/Test
      run: make build-test-${{ matrix.platform }}

    - name: Report Test Results
      uses: kishikawakatsumi/xcresulttool@v1
      if: success() || failure()
      with:
          title: Test Results ${{ matrix.platform }}
          path: ./TestResults/${{ matrix.platform }}.xcresult

  build-test-linux:

    runs-on: ubuntu-latest

    needs: [check-build-test]

    steps:

    - uses: actions/checkout@v4

    - name: Setup Swift
      uses: swift-actions/setup-swift@v2

    - name: Build/Test
      run: swift test --parallel --xunit-output test-results.xml

    - name: Report Test Results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results linux
        path: test-results.xml
        reporter: java-junit
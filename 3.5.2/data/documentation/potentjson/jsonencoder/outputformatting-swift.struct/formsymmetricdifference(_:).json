{"abstract":[{"text":"Replaces this set with a new set containing all elements","type":"text"},{"type":"text","text":" "},{"text":"contained in either this set or the given set, but not in both.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/formSymmetricDifference(_:)"},"kind":"symbol","metadata":{"role":"symbol","modules":[{"relatedModules":["Swift"],"name":"PotentJSON"}],"symbolKind":"method","externalID":"s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF::SYNTHESIZED::s:10PotentJSON11JSONEncoderC16OutputFormattingV","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"formSymmetricDifference"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}]},"extendedModule":"Swift","title":"formSymmetricDifference(_:)"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"formSymmetricDifference","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An option set."}],"type":"paragraph"}],"name":"other"}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"text":"This method is implemented as a ","type":"text"},{"code":"^","type":"codeVoice"},{"text":" (bitwise XOR) operation on the two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sets’ raw values."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/formsymmetricdifference(_:)"]}],"references":{"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundation’s JSON support in pure Swift.","type":"text"}],"url":"\/documentation\/potentjson","kind":"symbol","role":"collection","title":"PotentJSON","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/formSymmetricDifference(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formSymmetricDifference"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/formsymmetricdifference(_:)","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/formSymmetricDifference(_:)","type":"topic","title":"formSymmetricDifference(_:)","kind":"symbol","abstract":[{"text":"Replaces this set with a new set containing all elements","type":"text"},{"type":"text","text":" "},{"type":"text","text":"contained in either this set or the given set, but not in both."}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","role":"collectionGroup","title":"OptionSet Implementations","url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"type":"topic","abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","role":"symbol","title":"JSONEncoder.OutputFormatting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","title":"JSONEncoder","url":"\/documentation\/potentjson\/jsonencoder","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","isActive":true,"type":"reference"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON values.","type":"text"}]}}}
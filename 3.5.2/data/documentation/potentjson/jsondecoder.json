{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()"],"title":"Initializers","generated":true},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"title":"Type Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default"],"generated":true,"anchor":"Type-Properties"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"anchor":"Enumerations","generated":true,"title":"Enumerations"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations"],"title":"Default Implementations","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"metadata":{"modules":[{"name":"PotentJSON"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol","title":"JSONDecoder","roleHeading":"Class","externalID":"s:10PotentJSON11JSONDecoderC","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}]},"sections":[],"kind":"symbol","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","isActive":true},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsondecoder"]}],"references":{"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dataDecodingStrategy-swift.property":{"type":"topic","kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dataDecodingStrategy-swift.property","title":"dataDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dataDecodingStrategy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DataDecodingStrategyO","text":"DataDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.property","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DateDecodingStrategy-swift.enum":{"abstract":[{"type":"text","text":"The strategy to use for decoding "},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}],"title":"JSONDecoder.DateDecodingStrategy","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DateDecodingStrategy-swift.enum","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateDecodingStrategy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.enum"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder":{"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","type":"reference","isActive":true},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"url":"\/documentation\/potentjson\/jsondecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder","title":"JSONDecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/options":{"type":"topic","title":"options","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/options","url":"\/documentation\/potentjson\/jsondecoder\/options","kind":"symbol","abstract":[{"text":"The options set on the top-level decoder.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"options","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoderTransform","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV"},{"text":".","kind":"text"},{"text":"Options","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON20JSONDecoderTransformV7OptionsV"}]},"doc://PotentCodables/documentation/PotentCodables/TopLevelDecoder":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelDecoder","abstract":[{"type":"text","text":"A type that defines methods for decoding."}],"title":"TopLevelDecoder","url":"\/documentation\/potentcodables\/topleveldecoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TopLevelDecoder"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TopLevelDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"type":"topic","kind":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}]},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"url":"\/documentation\/potentjson","kind":"symbol","role":"collection","title":"PotentJSON","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/DataDecodingStrategy-swift.enum":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/DataDecodingStrategy-swift.enum","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"title":"JSONDecoder.DataDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datadecodingstrategy-swift.enum","kind":"symbol"},"doc://PotentCodables/documentation/PotentCodables/DecodesFromString":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromString","abstract":[{"type":"text","text":"Decoders for text formats support decoding from strings and from"},{"text":" ","type":"text"},{"type":"text","text":"data using a string encoding."}],"title":"DecodesFromString","url":"\/documentation\/potentcodables\/decodesfromstring","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DecodesFromString"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecodesFromString"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromTree":{"navigatorTitle":[{"text":"DecodesFromTree","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromTree","url":"\/documentation\/potentcodables\/decodesfromtree","abstract":[{"type":"text","text":"All encoders support decoding from their native values."}],"role":"symbol","title":"DecodesFromTree","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodesFromTree","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/DecodesFromData":{"url":"\/documentation\/potentcodables\/decodesfromdata","abstract":[{"text":"Decoders for binary formats support decoding from data.","type":"text"}],"title":"DecodesFromData","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DecodesFromData","navigatorTitle":[{"text":"DecodesFromData","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodesFromData"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/init()":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/init()","abstract":[],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/init()","title":"init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/default":{"type":"topic","title":"default","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/default","url":"\/documentation\/potentjson\/jsondecoder\/default","kind":"symbol","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"kind":"symbol","type":"topic","url":"\/documentation\/potentjson\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","title":"nonConformingFloatDecodingStrategy","abstract":[{"text":"The strategy to use in decoding non-conforming numbers. Defaults to ","type":"text"},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/dateDecodingStrategy-swift.property":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/dateDecodingStrategy-swift.property","abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"code":".deferredToDate","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/potentjson\/jsondecoder\/datedecodingstrategy-swift.property","title":"dateDecodingStrategy","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dateDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy"}]},"doc://PotentCodables/s8CopyableP":{"identifier":"doc:\/\/PotentCodables\/s8CopyableP","title":"Swift.Copyable","type":"unresolvable"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoder/TopLevelDecoder-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoder\/TopLevelDecoder-Implementations","abstract":[],"kind":"article","url":"\/documentation\/potentjson\/jsondecoder\/topleveldecoder-implementations","title":"TopLevelDecoder Implementations","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/ValueDecoder":{"role":"symbol","kind":"symbol","url":"\/documentation\/potentcodables\/valuedecoder","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueDecoder","abstract":[{"type":"codeVoice","code":"ValueDecoder"},{"text":" facilitates the decoding of","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" values into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"navigatorTitle":[{"text":"ValueDecoder","kind":"identifier"}],"title":"ValueDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ValueDecoder","kind":"identifier"}],"type":"topic"}}}
{"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueEncoder"],"type":"inheritsFrom"},{"type":"conformsTo","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToData","doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","doc:\/\/PotentCodables\/s8CopyableP","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelEncoder"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONEncoder"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"title":"JSONEncoder","symbolKind":"class","externalID":"s:10PotentJSON11JSONEncoderC","modules":[{"name":"PotentJSON"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"roleHeading":"Class","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}]},"abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON values.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct"],"anchor":"Structures","title":"Structures"},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/init()"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dataEncodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dateEncodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/nonConformingFloatEncodingStrategy-swift.property","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/options","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/outputFormatting-swift.property"],"generated":true},{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/default"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"},{"title":"Enumerations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DataEncodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DateEncodingStrategy-swift.enum","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"],"generated":true,"anchor":"Enumerations"},{"anchor":"Default-Implementations","generated":true,"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/TopLevelEncoder-Implementations"],"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentjson\/jsonencoder"]}],"sections":[],"references":{"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"url":"\/documentation\/potentjson","kind":"symbol","role":"collection","title":"PotentJSON","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/dataEncodingStrategy-swift.property":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dataEncodingStrategy-swift.property","url":"\/documentation\/potentjson\/jsonencoder\/dataencodingstrategy-swift.property","title":"dataEncodingStrategy","abstract":[{"text":"The strategy to use in encoding binary data. Defaults to ","type":"text"},{"code":".base64","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dataEncodingStrategy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC","kind":"typeIdentifier","text":"JSONEncoder"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONEncoderC20DataEncodingStrategyO","text":"DataEncodingStrategy"}]},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/nonConformingFloatEncodingStrategy-swift.property":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"nonConformingFloatEncodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10PotentJSON11JSONEncoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC34NonConformingFloatEncodingStrategyO","kind":"typeIdentifier","text":"NonConformingFloatEncodingStrategy"}],"url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.property","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/nonConformingFloatEncodingStrategy-swift.property","role":"symbol","abstract":[{"text":"The strategy to use in encoding non-conforming numbers. Defaults to ","type":"text"},{"code":".throw","type":"codeVoice"},{"text":".","type":"text"}],"title":"nonConformingFloatEncodingStrategy","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/DateEncodingStrategy-swift.enum":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DateEncodingStrategy-swift.enum","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" values."}],"title":"JSONEncoder.DateEncodingStrategy","url":"\/documentation\/potentjson\/jsonencoder\/dateencodingstrategy-swift.enum","kind":"symbol","navigatorTitle":[{"text":"DateEncodingStrategy","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateEncodingStrategy"}]},"doc://PotentCodables/documentation/PotentCodables/TopLevelEncoder":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"TopLevelEncoder","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TopLevelEncoder","navigatorTitle":[{"kind":"identifier","text":"TopLevelEncoder"}],"abstract":[{"type":"text","text":"A type that defines methods for encoding."}],"title":"TopLevelEncoder","url":"\/documentation\/potentcodables\/toplevelencoder","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/TopLevelEncoder-Implementations":{"abstract":[],"title":"TopLevelEncoder Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/TopLevelEncoder-Implementations","role":"collectionGroup","type":"topic","kind":"article","url":"\/documentation\/potentjson\/jsonencoder\/toplevelencoder-implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/dateEncodingStrategy-swift.property":{"title":"dateEncodingStrategy","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/dateEncodingStrategy-swift.property","kind":"symbol","type":"topic","abstract":[{"text":"The strategy to use in encoding dates. Defaults to ","type":"text"},{"code":".deferredToDate","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"dateEncodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10PotentJSON11JSONEncoderC20DateEncodingStrategyO","text":"DateEncodingStrategy","kind":"typeIdentifier"}],"url":"\/documentation\/potentjson\/jsonencoder\/dateencodingstrategy-swift.property"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/default":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/default","url":"\/documentation\/potentjson\/jsonencoder\/default","type":"topic","title":"default","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"`default`","kind":"identifier"},{"kind":"text","text":": "},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10PotentJSON11JSONEncoderC"}]},"doc://PotentCodables/documentation/PotentCodables/ValueEncoder":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ValueEncoder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ValueEncoder"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/ValueEncoder","abstract":[{"type":"codeVoice","code":"ValueEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into  values."}],"title":"ValueEncoder","url":"\/documentation\/potentcodables\/valueencoder","role":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/EncodesToTree":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToTree"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToTree","navigatorTitle":[{"kind":"identifier","text":"EncodesToTree"}],"abstract":[{"text":"All encoders support encoding to their native values.","type":"text"}],"title":"EncodesToTree","url":"\/documentation\/potentcodables\/encodestotree","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/DataEncodingStrategy-swift.enum":{"abstract":[{"type":"text","text":"The strategy to use for encoding "},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}],"url":"\/documentation\/potentjson\/jsonencoder\/dataencodingstrategy-swift.enum","kind":"symbol","title":"JSONEncoder.DataEncodingStrategy","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/DataEncodingStrategy-swift.enum","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DataEncodingStrategy"}],"type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/OutputFormatting-swift.struct":{"type":"topic","abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/OutputFormatting-swift.struct","role":"symbol","title":"JSONEncoder.OutputFormatting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutputFormatting"}],"navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.struct"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/init()":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/potentjson\/jsonencoder\/init()","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/init()","role":"symbol","abstract":[{"text":"Initializes ","type":"text"},{"type":"codeVoice","code":"self"},{"text":" with default strategies.","type":"text"}],"title":"init()","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"url":"\/documentation\/potentjson\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","kind":"symbol","title":"JSONEncoder.NonConformingFloatEncodingStrategy","type":"topic","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/options":{"title":"options","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/options","kind":"symbol","type":"topic","abstract":[{"text":"The options set on the top-level encoder.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"options"},{"text":": ","kind":"text"},{"text":"JSONEncoderTransform","preciseIdentifier":"s:10PotentJSON20JSONEncoderTransformV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Options","preciseIdentifier":"s:10PotentJSON20JSONEncoderTransformV7OptionsV","kind":"typeIdentifier"}],"url":"\/documentation\/potentjson\/jsonencoder\/options"},"doc://PotentCodables/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/PotentCodables\/s8CopyableP","type":"unresolvable"},"doc://PotentCodables/documentation/PotentCodables/EncodesToString":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EncodesToString"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToString","navigatorTitle":[{"kind":"identifier","text":"EncodesToString"}],"abstract":[{"type":"text","text":"Encoders that target text formats support encoding to strings"},{"text":" ","type":"text"},{"type":"text","text":"and encoding to data using a default string encoding."}],"title":"EncodesToString","url":"\/documentation\/potentcodables\/encodestostring","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","title":"JSONEncoder","url":"\/documentation\/potentjson\/jsonencoder","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"abstract":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder","isActive":true,"type":"reference"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON values.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/EncodesToData":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EncodesToData"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EncodesToData","navigatorTitle":[{"kind":"identifier","text":"EncodesToData"}],"abstract":[{"type":"text","text":"Encoders that target binary formats support encoding to data."}],"title":"EncodesToData","url":"\/documentation\/potentcodables\/encodestodata","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoder/outputFormatting-swift.property":{"title":"outputFormatting","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoder\/outputFormatting-swift.property","kind":"symbol","type":"topic","abstract":[{"text":"The output format to produce. Defaults to ","type":"text"},{"code":"[]","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"outputFormatting","kind":"identifier"},{"text":": ","kind":"text"},{"text":"OutputFormatting","preciseIdentifier":"s:10PotentJSON11JSONEncoderC16OutputFormattingV","kind":"typeIdentifier"}],"url":"\/documentation\/potentjson\/jsonencoder\/outputformatting-swift.property"}}}
{"sections":[],"kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A value to compare.","type":"text"}]}],"name":"lhs"},{"name":"rhs","content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"b"},{"type":"text","text":", "},{"code":"a != b","type":"codeVoice"},{"type":"text","text":" "},{"text":"implies that ","type":"text"},{"code":"a == b","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"This is the default implementation of the not-equal-to operator (","type":"text"},{"type":"codeVoice","code":"!="},{"text":")","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for any type that conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"op","role":"symbol","modules":[{"name":"PotentJSON","relatedModules":["Swift"]}],"externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentJSON17JSONSerializationO5ErrorO11InvalidDataO","roleHeading":"Operator","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"!=(_:_:)"},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentJSON","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations"]]},"references":{"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error":{"abstract":[],"title":"JSONSerialization.Error","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Error"}],"url":"\/documentation\/potentjson\/jsonserialization\/error"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"title":"JSONSerialization","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONSerialization","kind":"identifier"}],"type":"topic","abstract":[],"url":"\/documentation\/potentjson\/jsonserialization","role":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/Equatable-Implementations":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/Equatable-Implementations","kind":"article","role":"collectionGroup","title":"Equatable Implementations","abstract":[],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/equatable-implementations"},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData":{"kind":"symbol","title":"JSONSerialization.Error.InvalidData","abstract":[],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InvalidData"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InvalidData"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization/Error/InvalidData/!=(_:_:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization\/Error\/InvalidData\/!=(_:_:)","kind":"symbol","role":"symbol","title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"url":"\/documentation\/potentjson\/jsonserialization\/error\/invaliddata\/!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://PotentCodables/documentation/PotentJSON":{"abstract":[{"text":"Enhanced, drop-in replacement for Foundationâ€™s JSON support in pure Swift.","type":"text"}],"url":"\/documentation\/potentjson","kind":"symbol","role":"collection","title":"PotentJSON","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON"}}}
{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"relatedModules":["Swift"],"name":"PotentYAML"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"op","title":"!=(_:_:)","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:10PotentYAML0B0O15CollectionStyleO","role":"symbol","roleHeading":"Operator","extendedModule":"Swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}],"name":"lhs"},{"name":"rhs","content":[{"inlineContent":[{"type":"text","text":"Another value to compare."}],"type":"paragraph"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Inequality is the inverse of equality. For any values "},{"type":"codeVoice","code":"a"},{"text":" and ","type":"text"},{"code":"b","type":"codeVoice"},{"text":", ","type":"text"},{"code":"a != b","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"implies that "},{"type":"codeVoice","code":"a == b"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default implementation of the not-equal-to operator ("},{"type":"codeVoice","code":"!="},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"for any type that conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/Equatable-Implementations"]]},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/!=(_:_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentyaml\/yaml\/collectionstyle\/!=(_:_:)"]}],"sections":[],"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentYAML/YAML/CollectionStyle/!=(_:_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/potentyaml\/yaml\/collectionstyle\/!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"role":"symbol","kind":"symbol","title":"!=(_:_:)"},"doc://PotentCodables/documentation/PotentYAML/YAML/CollectionStyle/Equatable-Implementations":{"title":"Equatable Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/potentyaml\/yaml\/collectionstyle\/equatable-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle\/Equatable-Implementations"},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","title":"PotentYAML","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","role":"collection","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentYAML/YAML":{"title":"YAML","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML","role":"symbol","abstract":[{"text":"General YAML value.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"YAML","kind":"identifier"}],"navigatorTitle":[{"text":"YAML","kind":"identifier"}],"url":"\/documentation\/potentyaml\/yaml","kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentYAML/YAML/CollectionStyle":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAML\/CollectionStyle","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CollectionStyle","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CollectionStyle"}],"type":"topic","url":"\/documentation\/potentyaml\/yaml\/collectionstyle","abstract":[],"role":"symbol","kind":"symbol","title":"YAML.CollectionStyle"}}}
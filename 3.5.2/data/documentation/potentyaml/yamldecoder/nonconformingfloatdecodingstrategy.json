{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/PotentCodables\/SQ","doc:\/\/PotentCodables\/SH"]}],"metadata":{"roleHeading":"Enumeration","modules":[{"name":"PotentYAML"}],"externalID":"s:10PotentYAML11YAMLDecoderC34NonConformingFloatDecodingStrategyO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"role":"symbol","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"symbolKind":"enum","title":"YAMLDecoder.NonConformingFloatDecodingStrategy"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}]}],"kind":"declarations"}],"sections":[],"variants":[{"paths":["\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentYAML","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder"]]},"abstract":[{"type":"text","text":"The strategy to use for YAML-conforming floating-point values (IEEE 754 infinity and NaN)."}],"topicSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/default","doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/throw"],"anchor":"Enumeration-Cases","title":"Enumeration Cases","generated":true},{"generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/Equatable-Implementations"],"title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy"},"references":{"doc://PotentCodables/SH":{"identifier":"doc:\/\/PotentCodables\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","abstract":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder","isActive":true},{"text":" facilitates the decoding of YAML into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"title":"YAMLDecoder","url":"\/documentation\/potentyaml\/yamldecoder","kind":"symbol","navigatorTitle":[{"text":"YAMLDecoder","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"YAMLDecoder","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy/throw":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/throw","title":"YAMLDecoder.NonConformingFloatDecodingStrategy.throw","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/throw"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy":{"navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy","url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy","abstract":[{"type":"text","text":"The strategy to use for YAML-conforming floating-point values (IEEE 754 infinity and NaN)."}],"role":"symbol","title":"YAMLDecoder.NonConformingFloatDecodingStrategy","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy/Equatable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/Equatable-Implementations","url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/equatable-implementations","abstract":[],"title":"Equatable Implementations","role":"collectionGroup"},"doc://PotentCodables/SQ":{"identifier":"doc:\/\/PotentCodables\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://PotentCodables/documentation/PotentYAML":{"kind":"symbol","title":"PotentYAML","abstract":[{"text":"YAML 1.2 support for both YAML & JSON in a single framework.","type":"text"}],"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML","role":"collection","url":"\/documentation\/potentyaml"},"doc://PotentCodables/documentation/PotentYAML/YAMLDecoder/NonConformingFloatDecodingStrategy/default":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"}],"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Decode values following the YAML 1.2 sepcification.","type":"text"}],"url":"\/documentation\/potentyaml\/yamldecoder\/nonconformingfloatdecodingstrategy\/default","title":"YAMLDecoder.NonConformingFloatDecodingStrategy.default","identifier":"doc:\/\/PotentCodables\/documentation\/PotentYAML\/YAMLDecoder\/NonConformingFloatDecodingStrategy\/default"}}}
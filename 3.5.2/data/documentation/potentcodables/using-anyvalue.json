{"metadata":{"role":"article","modules":[{"name":"PotentCodables"}],"title":"Using AnyValue","roleHeading":"Article"},"sections":[],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Using-AnyValue","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Decode and encode “any” structured value using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"}],"kind":"article","primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Sometimes it is necessary to decode values of any type or that can take on any structure; unfortunately Swift’s"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" is not well suited for this purpose. PotentCodables provides "},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true},{"text":" to fill the gap.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Using ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true},{"text":" is simple, just use it wherever you would normally use an ","type":"text"},{"type":"codeVoice","code":"Any"},{"type":"text","text":". Since"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"text":" supports ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" everything else works as normal including Swift’s automatic codable"},{"type":"text","text":" "},{"text":"generation.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct Account : Codable {","  let name: String","  let data: AnyValue                  \/\/ `data` can store and scalar or complex value","  let dataDict: [String: AnyValue]    \/\/ `dataDict` is required to be a dictionary of name to any values","  let dataArray: [AnyValue]           \/\/ `dataArray` is required to be an array of any values","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The example "},{"type":"codeVoice","code":"Account"},{"type":"text","text":" struct above has a "},{"type":"codeVoice","code":"data"},{"text":" property that can take on any value supported by the codable system.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example when decoding from JSON, any value or tree of values (including ","type":"text"},{"inlineContent":[{"type":"text","text":"null"}],"type":"emphasis"},{"text":", ","type":"text"},{"inlineContent":[{"text":"bool","type":"text"}],"type":"emphasis"},{"type":"text","text":", "},{"type":"emphasis","inlineContent":[{"text":"string","type":"text"}]},{"type":"text","text":", "},{"inlineContent":[{"text":"number","type":"text"}],"type":"emphasis"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"arrray"}]},{"type":"text","text":" or "},{"type":"emphasis","inlineContent":[{"text":"object","type":"text"}]},{"type":"text","text":") could be saved in the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" property. Encoding the same "},{"code":"Account","type":"codeVoice"},{"type":"text","text":" value back to JSON will produce"},{"text":" ","type":"text"},{"type":"text","text":"equivalent serialized JSON regardless of the contents of the "},{"type":"codeVoice","code":"data"},{"text":" field.","type":"text"}]},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue"},{"text":" has lots of features to make building and using them natural in Swift, like “dynamic member","type":"text"},{"type":"text","text":" "},{"type":"text","text":"lookup” to access fields of a "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","isActive":true,"type":"reference"},{"text":". See the documentation for complete details.","type":"text"}]},{"level":3,"type":"heading","text":"Performance","anchor":"Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","isActive":true,"type":"reference"},{"type":"text","text":" is compatible with any conformant "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" encoder or decoder, PotentCodables"},{"text":" ","type":"text"},{"text":"decoders specifically have shortcuts to decode the proper values in a more performant fashion and should be used when","type":"text"},{"type":"text","text":" "},{"text":"possible.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues"],"title":"Usage","anchor":"Usage","generated":true}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"references":{"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"url":"\/documentation\/potentcodables\/anyvalue","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","kind":"symbol","title":"AnyValue","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"abstract":[{"text":"A ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/GettingStarted":{"url":"\/documentation\/potentcodables\/gettingstarted","kind":"article","role":"article","title":"Getting Started with Potent Codables","type":"topic","abstract":[{"type":"text","text":"Get started using the powerful potent data formats "},{"inlineContent":[{"text":"JSON","type":"text"}],"type":"strong"},{"type":"text","text":", "},{"inlineContent":[{"text":"YAML","type":"text"}],"type":"strong"},{"type":"text","text":", "},{"inlineContent":[{"text":"CBOR","type":"text"}],"type":"strong"},{"type":"text","text":" & "},{"type":"strong","inlineContent":[{"text":"ASN.1","type":"text"}]},{"text":".","type":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/GettingStarted"},"doc://PotentCodables/documentation/PotentCodables/TreeValues":{"url":"\/documentation\/potentcodables\/treevalues","kind":"article","title":"Tree Values","role":"article","abstract":[{"type":"text","text":"What are “tree values”?"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/TreeValues","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Data-Formats":{"abstract":[{"type":"text","text":"All data formats provided by PotentCodables"}],"url":"\/documentation\/potentcodables\/data-formats","role":"article","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Data-Formats","kind":"article","title":"Data Formats"},"doc://PotentCodables/documentation/PotentCodables/AnyValue/dictionary(_:)":{"kind":"symbol","abstract":[],"url":"\/documentation\/potentcodables\/anyvalue\/dictionary(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dictionary"},{"text":"(","kind":"text"},{"text":"AnyDictionary","preciseIdentifier":"s:14PotentCodables8AnyValueO0C10Dictionarya","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/dictionary(_:)","role":"symbol","type":"topic","title":"AnyValue.dictionary(_:)"},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"role":"collection","title":"PotentCodables","url":"\/documentation\/potentcodables","kind":"symbol","type":"topic"}}}
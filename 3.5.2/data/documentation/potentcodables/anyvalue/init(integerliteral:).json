{"metadata":{"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"integerLiteral"},{"kind":"text","text":": "},{"text":"IntegerLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s18IntegerLiteralTypea"},{"text":")","kind":"text"}],"modules":[{"name":"PotentCodables"}],"externalID":"s:14PotentCodables8AnyValueO14integerLiteralACSi_tcfc","roleHeading":"Initializer","role":"symbol","title":"init(integerLiteral:)","extendedModule":"PotentCodables"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/anyvalue\/init(integerliteral:)"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/init(integerLiteral:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"integerLiteral"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s18IntegerLiteralTypea","text":"IntegerLiteralType"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to create."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Do not call this initializer directly. Instead, initialize a variable or","type":"text"},{"type":"text","text":" "},{"text":"constant using an integer literal. For example:","type":"text"}]},{"type":"codeListing","code":["let x = 23"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, the assignment to the "},{"code":"x","type":"codeVoice"},{"type":"text","text":" constant calls this integer"},{"type":"text","text":" "},{"type":"text","text":"literal initializer behind the scenes."}]}]}],"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/ExpressibleByIntegerLiteral-Implementations"]]},"sections":[],"abstract":[{"type":"text","text":"Creates an instance initialized to the specified integer value."}],"kind":"symbol","references":{"doc://PotentCodables/documentation/PotentCodables/AnyValue/init(integerLiteral:)":{"type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/init(integerLiteral:)","abstract":[{"type":"text","text":"Creates an instance initialized to the specified integer value."}],"url":"\/documentation\/potentcodables\/anyvalue\/init(integerliteral:)","role":"symbol","title":"init(integerLiteral:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"integerLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IntegerLiteralType","kind":"typeIdentifier","preciseIdentifier":"s:s18IntegerLiteralTypea"},{"kind":"text","text":")"}]},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"role":"collection","title":"PotentCodables","url":"\/documentation\/potentcodables","kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/AnyValue":{"url":"\/documentation\/potentcodables\/anyvalue","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue","kind":"symbol","title":"AnyValue","navigatorTitle":[{"kind":"identifier","text":"AnyValue"}],"abstract":[{"text":"A ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" value that allows encoding\/decoding values of any type or structure."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyValue","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables/AnyValue/ExpressibleByIntegerLiteral-Implementations":{"url":"\/documentation\/potentcodables\/anyvalue\/expressiblebyintegerliteral-implementations","abstract":[],"title":"ExpressibleByIntegerLiteral Implementations","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/AnyValue\/ExpressibleByIntegerLiteral-Implementations","kind":"article","type":"topic","role":"collectionGroup"}}}
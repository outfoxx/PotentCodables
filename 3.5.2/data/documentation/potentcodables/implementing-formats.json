{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols"],"generated":true,"title":"Advanced","anchor":"Advanced"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Implementing-Formats"},"abstract":[{"type":"text","text":"Learn how to implement new "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" data formats easily."}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"One of the stated goals of PotentCodables is to reduce the complexity and amount of code required when implementing","type":"text"},{"text":" ","type":"text"},{"text":"new serialization formats. We have achieved that goal only requiring new formats to implement the “boxing” and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"“unboxing” into their native value tree representation without regard for any of the inner working of Swit’s "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" "},{"text":"framework.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following list of steps can be followed to easily implement a new serialization format.","type":"text"}]},{"type":"heading","level":3,"anchor":"1-Define-a-native-value-tree-representation","text":"1. Define a native value tree representation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each provided implementation is built upon a native value tree in-memory representation; JSON uses "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"while CBOR uses "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true,"type":"reference"},{"type":"text","text":". Examining any of the provided native value trees will reveal they closely mimic"},{"type":"text","text":" "},{"type":"text","text":"their serialized format."}]},{"text":"Required Protocols","level":4,"type":"heading","anchor":"Required-Protocols"},{"items":[{"definition":{"content":[{"inlineContent":[{"type":"text","text":"The native value tree representation (usually an enum) "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" implement the "},{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"reference","isActive":true},{"text":" protocol which provides null\/nil testing and the capability to “unwrap” themselves into a Swift primitive value tree.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"reference","isActive":true}]}}],"type":"termList"},{"text":"See\/Examples","level":4,"type":"heading","anchor":"SeeExamples"},{"type":"termList","items":[{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The JSON native value tree is a great example of a full featured tree.","type":"text"}]}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","isActive":true,"type":"reference"}]},"definition":{"content":[{"inlineContent":[{"text":"The CBOR native value tree is another great example of a full featured tree.","type":"text"}],"type":"paragraph"}]}}]},{"level":3,"anchor":"2-Provide-a-serialization-type","type":"heading","text":"2. Provide a “serialization” type"},{"type":"paragraph","inlineContent":[{"text":"The next step requires you to provide a serialization class that can serialize native value trees into their final","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"serialized representation and conversely deserialize the serialized representation into a native value tree."}]},{"text":"Required Protocols","type":"heading","anchor":"Required-Protocols","level":4},{"type":"paragraph","inlineContent":[{"text":"There are no required protocols for the serialization type to timplement because it will be used privately in the","type":"text"},{"type":"text","text":" "},{"text":"encoder and decoder implementations.","type":"text"}]},{"anchor":"SeeExample","level":4,"text":"See\/Example","type":"heading"},{"items":[{"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The JSONSerialization type serializes "},{"type":"codeVoice","code":"JSON"},{"type":"text","text":" values to\/from "},{"code":"Data","type":"codeVoice"},{"text":" values. Also, because JSON is a text based format, it supports serialization to\/from ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" values.","type":"text"}]}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","type":"reference"}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"The CBORSerialization type serializes ","type":"text"},{"type":"codeVoice","code":"CBOR"},{"type":"text","text":" values to\/from "},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}]}]}}],"type":"termList"},{"anchor":"3-Provide-transformer-types","type":"heading","level":3,"text":"3. Provide “transformer” types"},{"inlineContent":[{"type":"text","text":"As the serialization type is used to translate from native value trees into their serialized forms, a “transformer” type transforms native value"},{"text":" ","type":"text"},{"text":"trees to\/from ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"\/"},{"code":"Decodable","type":"codeVoice"},{"text":". The good news here is that only the boxing and unboxing code is requried.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"An encoding transformer and a decoding transformer are required. All of the protocols are prefixed with "},{"code":"Internal","type":"codeVoice"},{"text":" to denote that they are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"not intended for public use."}],"type":"paragraph"},{"anchor":"Required-Protocols-Encoding","text":"Required Protocols (Encoding)","type":"heading","level":4},{"type":"termList","items":[{"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform"}]},"definition":{"content":[{"inlineContent":[{"type":"text","text":"Provides the boxing of Swift primitives generated by "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" instances."}],"type":"paragraph"}]}},{"term":{"inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","isActive":true}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values then this protocol is required to be implemented."}]}]}},{"definition":{"content":[{"inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","type":"reference","isActive":true}]}}]},{"type":"heading","text":"Required Protocols (Decoding)","level":4,"anchor":"Required-Protocols-Decoding"},{"items":[{"definition":{"content":[{"inlineContent":[{"text":"Provides the unboxing of native value tree types.","type":"text"}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform"}]}},{"definition":{"content":[{"inlineContent":[{"text":"If the serialization format supports targeting ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values then this protocol is required to be implemented."}],"type":"paragraph"}]},"term":{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","type":"reference"}]}},{"term":{"inlineContent":[{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","isActive":true,"type":"reference"}]},"definition":{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the serialization format supports targeting "},{"type":"codeVoice","code":"String"},{"text":" values then this protocol is required to be implemented.","type":"text"}]}]}}],"type":"termList"},{"type":"heading","level":4,"anchor":"SeeExample","text":"See\/Example"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","isActive":true},{"type":"text","text":"\/"},{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","type":"reference"}]}]}]},{"level":3,"text":"4. Create an “Encoder” and a “Decoder”","anchor":"4-Create-an-Encoder-and-a-Decoder","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The final step is to implement the public encoder and decoder by deriving from the base implementations."}]},{"inlineContent":[{"text":"Encoders are created in the following manner:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct MyFormatEncoder : ValueEncoder<MyFormat, MyFormatEncoderTransform> {...}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Decoders are created in the following manner:"}]},{"code":["struct MyFormatDecoder : ValueDecoder<MyFormat, MyFormatDecoderTransform> {...}"],"syntax":"swift","type":"codeListing"}]}],"metadata":{"role":"article","modules":[{"name":"PotentCodables"}],"roleHeading":"Article","title":"Implementing New Data Formats"},"references":{"doc://PotentCodables/documentation/PotentCodables/Value":{"url":"\/documentation\/potentcodables\/value","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Value","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Value"}],"title":"Value","abstract":[{"code":"Value","type":"codeVoice"},{"text":"s are the intermediary representation that","type":"text"},{"type":"text","text":" "},{"text":"allows querying the structure in memory, decoding","type":"text"},{"type":"text","text":" "},{"text":"it to a compatible ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" type, or serializing","type":"text"},{"text":" ","type":"text"},{"text":"it to ","type":"text"},{"type":"codeVoice","code":"Data"}],"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Value","type":"topic"},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"role":"collection","title":"PotentCodables","url":"\/documentation\/potentcodables","kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalEncoderTransform":{"role":"symbol","abstract":[{"text":"An encoder transform provides required functionality to box instances of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Swift\/Foundation primitives into instances of "},{"type":"codeVoice","code":"Value"},{"type":"text","text":"."}],"url":"\/documentation\/potentcodables\/internalencodertransform","navigatorTitle":[{"text":"InternalEncoderTransform","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalEncoderTransform","kind":"identifier"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalEncoderTransform","title":"InternalEncoderTransform"},"doc://PotentCodables/documentation/PotentCodables/Protocols":{"abstract":[{"text":"Details of all the protocols PotentCodables ","type":"text"},{"code":"Encoder","type":"codeVoice"},{"text":"s and ","type":"text"},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":"s implement."}],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Protocols","role":"article","url":"\/documentation\/potentcodables\/protocols","title":"Encoder\/Decoder Protocols","type":"topic"},"doc://PotentCodables/documentation/PotentJSON/JSONDecoderTransform":{"title":"JSONDecoderTransform","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoderTransform","kind":"identifier"}],"url":"\/documentation\/potentjson\/jsondecodertransform","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONDecoderTransform","role":"symbol","abstract":[],"navigatorTitle":[{"text":"JSONDecoderTransform","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCBOR/CBORSerialization":{"abstract":[{"type":"text","text":"Convenience API for serializing and deserialization CBOR items."}],"title":"CBORSerialization","navigatorTitle":[{"kind":"identifier","text":"CBORSerialization"}],"url":"\/documentation\/potentcbor\/cborserialization","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBORSerialization","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBORSerialization"}],"kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/PolymorphicEncodingDecoding":{"title":"Polymorphic Encoding & Decoding","kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/PolymorphicEncodingDecoding","url":"\/documentation\/potentcodables\/polymorphicencodingdecoding","role":"article","type":"topic","abstract":[{"type":"text","text":"Utilities to simplify polymorphic encoding and decoding."}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueSerializer":{"type":"topic","role":"symbol","title":"InternalValueSerializer","abstract":[],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueSerializer","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InternalValueSerializer","kind":"identifier"}],"url":"\/documentation\/potentcodables\/internalvalueserializer","navigatorTitle":[{"text":"InternalValueSerializer","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentJSON/JSONSerialization":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONSerialization","navigatorTitle":[{"text":"JSONSerialization","kind":"identifier"}],"title":"JSONSerialization","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"JSONSerialization","kind":"identifier"}],"type":"topic","abstract":[],"url":"\/documentation\/potentjson\/jsonserialization","role":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","abstract":[{"text":"General CBOR value.","type":"text"}],"kind":"symbol","title":"CBOR","url":"\/documentation\/potentcbor\/cbor","navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"CBOR","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/Custom-References":{"abstract":[{"type":"text","text":"Polymorphic references tailored to your data."}],"kind":"article","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Custom-References","role":"article","url":"\/documentation\/potentcodables\/custom-references","title":"Custom References","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/InternalValueParser":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueParser","abstract":[],"kind":"symbol","title":"InternalValueParser","url":"\/documentation\/potentcodables\/internalvalueparser","navigatorTitle":[{"text":"InternalValueParser","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InternalValueParser"}]},"doc://PotentCodables/documentation/PotentJSON/JSON":{"abstract":[{"type":"text","text":"General JSON value."}],"navigatorTitle":[{"text":"JSON","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSON","kind":"identifier"}],"title":"JSON","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSON","url":"\/documentation\/potentjson\/json"},"doc://PotentCodables/documentation/PotentCodables/InternalValueDeserializer":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueDeserializer","abstract":[],"kind":"symbol","title":"InternalValueDeserializer","url":"\/documentation\/potentcodables\/internalvaluedeserializer","navigatorTitle":[{"kind":"identifier","text":"InternalValueDeserializer"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalValueDeserializer","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/InternalValueStringifier":{"abstract":[],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalValueStringifier","kind":"identifier"}],"navigatorTitle":[{"text":"InternalValueStringifier","kind":"identifier"}],"type":"topic","title":"InternalValueStringifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalValueStringifier","role":"symbol","url":"\/documentation\/potentcodables\/internalvaluestringifier"},"doc://PotentCodables/documentation/PotentCodables/InternalDecoderTransform":{"type":"topic","title":"InternalDecoderTransform","abstract":[{"type":"text","text":"A decoder transform provides required functionality to unbox instances of"},{"type":"text","text":" "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" into Swift\/Foundation primitives."}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/InternalDecoderTransform","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InternalDecoderTransform","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InternalDecoderTransform"}],"role":"symbol","url":"\/documentation\/potentcodables\/internaldecodertransform","kind":"symbol"},"doc://PotentCodables/documentation/PotentJSON/JSONEncoderTransform":{"navigatorTitle":[{"kind":"identifier","text":"JSONEncoderTransform"}],"type":"topic","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentJSON\/JSONEncoderTransform","kind":"symbol","abstract":[],"url":"\/documentation\/potentjson\/jsonencodertransform","title":"JSONEncoderTransform","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoderTransform","kind":"identifier"}]}}}
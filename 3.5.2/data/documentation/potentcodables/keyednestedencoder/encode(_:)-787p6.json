{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"sections":[],"metadata":{"modules":[{"name":"PotentCodables"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt32VKF","symbolKind":"method","title":"encode(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier","text":"UInt32"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]},"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","interfaceLanguage":"swift"},"abstract":[{"text":"Encodes a single value of the given type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"text":" if the given value is invalid in","type":"text"},{"type":"text","text":" "},{"text":"the current context for this format.","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"code":"self.encode(_:)","type":"codeVoice"},{"type":"text","text":" "},{"text":"call.","type":"text"}]}],"name":"Precondition","type":"aside"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6"]}],"references":{"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"role":"collection","title":"PotentCodables","url":"\/documentation\/potentcodables","kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-787p6":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-787p6","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-787p6","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"encode(_:)"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","abstract":[],"role":"symbol","title":"KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}]}}}
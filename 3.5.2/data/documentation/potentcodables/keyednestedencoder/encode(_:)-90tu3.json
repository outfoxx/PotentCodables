{"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables","doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder"]]},"abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier","text":"UInt64"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to encode."}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"text":" if the given value is invalid in","type":"text"},{"type":"text","text":" "},{"text":"the current context for this format.","type":"text"}]}],"style":"note"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"May not be called after a previous "},{"code":"self.encode(_:)","type":"codeVoice"},{"text":" ","type":"text"},{"text":"call.","type":"text"}]}],"style":"note","name":"Precondition"}]}],"metadata":{"externalID":"s:14PotentCodables18KeyedNestedEncoderC6encodeyys6UInt64VKF","symbolKind":"method","role":"symbol","modules":[{"name":"PotentCodables"}],"title":"encode(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"UInt64","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3"]}],"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3","interfaceLanguage":"swift"},"references":{"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"role":"collection","title":"PotentCodables","url":"\/documentation\/potentcodables","kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder","abstract":[],"role":"symbol","title":"KeyedNestedEncoder","url":"\/documentation\/potentcodables\/keyednestedencoder","kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"KeyedNestedEncoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"KeyedNestedEncoder"}]},"doc://PotentCodables/documentation/PotentCodables/KeyedNestedEncoder/encode(_:)-90tu3":{"url":"\/documentation\/potentcodables\/keyednestedencoder\/encode(_:)-90tu3","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UInt64","preciseIdentifier":"s:s6UInt64V","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"encode(_:)","type":"topic","abstract":[{"type":"text","text":"Encodes a single value of the given type."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/KeyedNestedEncoder\/encode(_:)-90tu3"}}}
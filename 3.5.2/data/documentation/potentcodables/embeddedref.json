{"metadata":{"externalID":"s:14PotentCodables11EmbeddedRefa","title":"EmbeddedRef","navigatorTitle":[{"kind":"identifier","text":"EmbeddedRef"}],"modules":[{"name":"PotentCodables"}],"role":"symbol","roleHeading":"Type Alias","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"EmbeddedRef","kind":"identifier"}],"symbolKind":"typealias"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCodables"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","interfaceLanguage":"swift"},"abstract":[{"text":"A decodable type for decoding polymorphic types that include an embedded type name value.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/potentcodables\/embeddedref"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"EmbeddedRef","kind":"identifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","text":"CustomEmbeddedRef","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:14PotentCodables14DefaultTypeKeyV","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","text":"DefaultTypeKey","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","preciseIdentifier":"s:14PotentCodables16DefaultTypeIndexV","text":"DefaultTypeIndex"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},{"text":" relies upon the encoded value including a type name embedded in the keyed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"container it is decoding. By default the key "},{"type":"codeVoice","code":"@type"},{"text":" is used but this can be customized.","type":"text"}]},{"level":1,"anchor":"Expected-Encoded-Structure-JSON","type":"heading","text":"Expected Encoded Structure (JSON):"},{"type":"codeListing","syntax":"javascript","code":["{\"@type\" : \"MyValue\", \"name\" : \"Foo\"}"]},{"inlineContent":[{"type":"text","text":"Decoding an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef"},{"text":" instance will decode the value to its ","type":"text"},{"code":"value","type":"codeVoice"},{"type":"text","text":" property,"},{"type":"text","text":" "},{"type":"text","text":"which can then be accesed in a number of ways."}],"type":"paragraph"},{"text":"Example:","type":"heading","level":1,"anchor":"Example"},{"type":"codeListing","syntax":null,"code":["DefaultTypeIndex.setAllowedTypes([MyValue.self])","","myValue = container.decode(EmbeddedRef.self).value as! MyValue"]},{"inlineContent":[{"text":"In the example, ","type":"text"},{"type":"codeVoice","code":"MyValue"},{"type":"text","text":" can be a concrete type or protocol, either works fine. Alternatively, the"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)"},{"type":"text","text":" method can be used to require the value be of a specific type and throw"},{"text":" ","type":"text"},{"text":"a decoding related error if it is not, as in:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["myValue = container.decode(EmbeddedRef.self).as(MyValue.self)"]},{"anchor":"Requires","level":1,"text":"Requires:","type":"heading"},{"inlineContent":[{"text":"Keyed Container","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Due to the type name being embedded in the key-value pairs of value’s container, the","type":"text"},{"text":" ","type":"text"},{"text":"encoded value ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"strong"},{"type":"text","text":" be a keyed container, it cannot be an unkeyed or"},{"type":"text","text":" "},{"text":"single-value container.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","type":"reference"},{"text":" is provided to support encoding\/decoding of “general” values of any","type":"text"},{"type":"text","text":" "},{"type":"text","text":"structure."}]}]}],"sections":[],"references":{"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef":{"url":"\/documentation\/potentcodables\/customembeddedref","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomEmbeddedRef"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef","title":"CustomEmbeddedRef","kind":"symbol","abstract":[{"type":"text","text":"The implementation type for "},{"code":"EmbeddedRef","type":"codeVoice"},{"type":"text","text":" types."}],"navigatorTitle":[{"text":"CustomEmbeddedRef","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey":{"abstract":[{"type":"text","text":"Default type key provider using "},{"type":"codeVoice","code":"@type"},{"type":"text","text":" as the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey"}],"title":"DefaultTypeKey","navigatorTitle":[{"kind":"identifier","text":"DefaultTypeKey"}],"url":"\/documentation\/potentcodables\/defaulttypekey","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DefaultTypeKey","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Refs/Error":{"abstract":[],"title":"Refs.Error","url":"\/documentation\/potentcodables\/refs\/error","type":"topic","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"kind":"identifier","text":"Error"}]},"doc://PotentCodables/documentation/PotentCodables/EmbeddedRef":{"navigatorTitle":[{"text":"EmbeddedRef","kind":"identifier"}],"url":"\/documentation\/potentcodables\/embeddedref","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/EmbeddedRef","abstract":[{"type":"text","text":"A decodable type for decoding polymorphic types that include an embedded type name value."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedRef"}],"type":"topic","title":"EmbeddedRef","role":"symbol"},"doc://PotentCodables/documentation/PotentCodables/CustomEmbeddedRef/as(_:)":{"url":"\/documentation\/potentcodables\/customembeddedref\/as(_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"`as`","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"text":"V","kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"V","kind":"typeIdentifier","preciseIdentifier":"s:14PotentCodables17CustomEmbeddedRefV2asyqd__qd__mKlF1VL_qd__mfp"}],"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/CustomEmbeddedRef\/as(_:)","title":"as(_:)","kind":"symbol","abstract":[{"type":"text","text":"Method attempts a conversion to the provided type "},{"code":"V","type":"codeVoice"},{"type":"text","text":" and throws a"},{"text":" ","type":"text"},{"text":"related ","type":"text"},{"type":"reference","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Refs\/Error","isActive":true},{"text":" if it fails.","type":"text"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeKey/typeKey":{"url":"\/documentation\/potentcodables\/defaulttypekey\/typekey","abstract":[],"title":"typeKey","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeKey\/typeKey","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"typeKey","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14PotentCodables12AnyCodingKeyV","kind":"typeIdentifier","text":"AnyCodingKey"}]},"doc://PotentCodables/documentation/PotentCodables/DefaultTypeIndex":{"title":"DefaultTypeIndex","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DefaultTypeIndex","kind":"identifier"}],"url":"\/documentation\/potentcodables\/defaulttypeindex","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/DefaultTypeIndex","role":"symbol","abstract":[{"type":"text","text":"Default type index that uses a simple global map that can be updated"},{"type":"text","text":" "},{"type":"text","text":"by clients."}],"navigatorTitle":[{"text":"DefaultTypeIndex","kind":"identifier"}],"type":"topic"},"doc://PotentCodables/documentation/PotentCodables":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables","abstract":[{"text":"A potent set of implementations and extensions to the Swift ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" system"}],"role":"collection","title":"PotentCodables","url":"\/documentation\/potentcodables","kind":"symbol","type":"topic"},"doc://PotentCodables/documentation/PotentCodables/Ref":{"kind":"symbol","abstract":[{"text":"A decodable type for decoding general polymorphic types.","type":"text"}],"type":"topic","title":"Ref","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCodables\/Ref","navigatorTitle":[{"kind":"identifier","text":"Ref"}],"role":"symbol","url":"\/documentation\/potentcodables\/ref","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ref"}]}}}
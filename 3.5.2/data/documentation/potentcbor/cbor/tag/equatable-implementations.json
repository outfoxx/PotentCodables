{"sections":[],"kind":"article","metadata":{"title":"Equatable Implementations","role":"collectionGroup","modules":[{"name":"PotentCBOR"}],"roleHeading":"API Collection"},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/!=(_:_:)"],"generated":true,"anchor":"Operators"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/Equatable-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PotentCodables\/documentation\/PotentCBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag"]]},"references":{"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag":{"role":"symbol","url":"\/documentation\/potentcbor\/cbor\/tag","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Tag"}],"title":"CBOR.Tag","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag","abstract":[{"type":"text","text":"A CBOR "},{"type":"codeVoice","code":"tag"},{"type":"text","text":" for tagged values supported by the specification."}],"navigatorTitle":[{"text":"Tag","kind":"identifier"}],"kind":"symbol"},"doc://PotentCodables/documentation/PotentCBOR/CBOR":{"role":"symbol","identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR","abstract":[{"text":"General CBOR value.","type":"text"}],"kind":"symbol","title":"CBOR","url":"\/documentation\/potentcbor\/cbor","navigatorTitle":[{"kind":"identifier","text":"CBOR"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"CBOR","kind":"identifier"}]},"doc://PotentCodables/documentation/PotentCBOR":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR","title":"PotentCBOR","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Complete support for Concise Binary Object Representation encoded data in pure Swift."}],"url":"\/documentation\/potentcbor"},"doc://PotentCodables/documentation/PotentCBOR/CBOR/Tag/!=(_:_:)":{"identifier":"doc:\/\/PotentCodables\/documentation\/PotentCBOR\/CBOR\/Tag\/!=(_:_:)","title":"!=(_:_:)","url":"\/documentation\/potentcbor\/cbor\/tag\/!=(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}]}}}